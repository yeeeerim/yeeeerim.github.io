{"version":3,"file":"a3477b54c48b94637332b1b1e32f7efc41f3f07e-9a2f2166664bb2bf064b.js","mappings":";uMAWIA,qBAAY,YAHL,CAAC,IAAK,OAAQ,UAAW,OAAQ,UAAW,QAAS,QAAS,IAAK,OAAQ,MAAO,MAAO,MAAO,aAAc,OAAQ,KAAM,SAAU,SAAU,UAAW,OAAQ,OAAQ,MAAO,WAAY,OAAQ,WAAY,KAAM,MAAO,UAAW,MAAO,SAAU,MAAO,KAAM,KAAM,KAAM,QAAS,WAAY,aAAc,SAAU,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,SAAU,SAAU,KAAM,OAAQ,IAAK,SAAU,MAAO,QAAS,MAAO,MAAO,SAAU,QAAS,SAAU,KAAM,OAAQ,OAAQ,MAAO,OAAQ,UAAW,OAAQ,WAAY,OAAQ,QAAS,MAAO,WAAY,SAAU,KAAM,WAAY,SAAU,SAAU,IAAK,QAAS,UAAW,MAAO,WAAY,IAAK,KAAM,KAAM,OAAQ,IAAK,OAAQ,SAAU,UAAW,SAAU,QAAS,SAAU,OAAQ,SAAU,QAAS,MAAO,UAAW,MAAO,QAAS,QAAS,KAAM,WAAY,QAAS,KAAM,QAAS,OAAQ,QAAS,KAAM,QAAS,IAAK,KAAM,MAAO,QAAS,MAE77B,SAAU,WAAY,OAAQ,UAAW,gBAAiB,IAAK,QAAS,OAAQ,iBAAkB,OAAQ,OAAQ,UAAW,UAAW,WAAY,iBAAkB,OAAQ,OAAQ,MAAO,OAAQ,SAEhMC,SAAQ,SAAUC,GAErBF,EAAUE,GAAWF,EAAUE,EACjC,IACA,sCCdA,IAAIC,EAASC,OAAOC,UAAUC,eAC1BC,EAAQH,OAAOC,UAAUG,SACzBC,EAAiBL,OAAOK,eACxBC,EAAON,OAAOO,yBACdC,EAAU,SAAiBC,GAC7B,MAA6B,mBAAlBC,MAAMF,QACRE,MAAMF,QAAQC,GAEI,mBAApBN,EAAMQ,KAAKF,EACpB,EACIG,EAAgB,SAAuBC,GACzC,IAAKA,GAA2B,oBAApBV,EAAMQ,KAAKE,GACrB,OAAO,EAET,IASIC,EATAC,EAAoBhB,EAAOY,KAAKE,EAAK,eACrCG,EAAmBH,EAAII,aAAeJ,EAAII,YAAYhB,WAAaF,EAAOY,KAAKE,EAAII,YAAYhB,UAAW,iBAE9G,GAAIY,EAAII,cAAgBF,IAAsBC,EAC5C,OAAO,EAMT,IAAKF,KAAOD,GACZ,YAAsB,IAARC,GAAuBf,EAAOY,KAAKE,EAAKC,EACxD,EAGII,EAAc,SAAqBC,EAAQC,GACzCf,GAAmC,cAAjBe,EAAQC,KAC5BhB,EAAec,EAAQC,EAAQC,KAAM,CACnCC,YAAY,EACZC,cAAc,EACdC,MAAOJ,EAAQK,SACfC,UAAU,IAGZP,EAAOC,EAAQC,MAAQD,EAAQK,QAEnC,EAGIE,EAAc,SAAqBd,EAAKQ,GAC1C,GAAa,cAATA,EAAsB,CACxB,IAAKtB,EAAOY,KAAKE,EAAKQ,GACpB,OACK,GAAIf,EAGT,OAAOA,EAAKO,EAAKQ,GAAMG,KAE3B,CACA,OAAOX,EAAIQ,EACb,EACAO,EAAOC,QAAU,SAASC,IACxB,IAAIV,EAASC,EAAMU,EAAKC,EAAMC,EAAaC,EACvCf,EAASgB,UAAU,GACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAYX,IATsB,kBAAXnB,IACTmB,EAAOnB,EACPA,EAASgB,UAAU,IAAM,CAAC,EAE1BC,EAAI,IAEQ,MAAVjB,GAAoC,iBAAXA,GAAyC,mBAAXA,KACzDA,EAAS,CAAC,GAELiB,EAAIC,IAAUD,EAGnB,GAAe,OAFfhB,EAAUe,UAAUC,IAIlB,IAAKf,KAAQD,EACXW,EAAMJ,EAAYR,EAAQE,GAItBF,KAHJa,EAAOL,EAAYP,EAASC,MAKtBiB,GAAQN,IAASpB,EAAcoB,KAAUC,EAAczB,EAAQwB,MAC7DC,GACFA,GAAc,EACdC,EAAQH,GAAOvB,EAAQuB,GAAOA,EAAM,IAEpCG,EAAQH,GAAOnB,EAAcmB,GAAOA,EAAM,CAAC,EAI7Cb,EAAYC,EAAQ,CAClBE,KAAMA,EACNI,SAAUK,EAAOQ,EAAMJ,EAAOF,WAIP,IAATA,GAChBd,EAAYC,EAAQ,CAClBE,KAAMA,EACNI,SAAUO,KAStB,OAAOb,CACT,qBChHA,IAAIoB,EAAgB,kCAChBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAMbC,EAAe,GAgOnB,SAASC,EAAKC,GACZ,OAAOA,EAAMA,EAAIC,QAAQJ,EAAYC,GAAgBA,CACvD,CArNAnB,EAAOC,QAAU,SAAUsB,EAAO/B,GAChC,GAAqB,iBAAV+B,EACT,MAAM,IAAIC,UAAU,mCAEtB,IAAKD,EAAO,MAAO,GACnB/B,EAAUA,GAAW,CAAC,EAKtB,IAAIiC,EAAS,EACTC,EAAS,EAOb,SAASC,EAAeN,GACtB,IAAIO,EAAQP,EAAIQ,MAAMjB,GAClBgB,IAAOH,GAAUG,EAAMnB,QAC3B,IAAID,EAAIa,EAAIS,YArCF,MAsCVJ,GAAUlB,EAAIa,EAAIZ,OAASD,EAAIkB,EAASL,EAAIZ,MAC9C,CAOA,SAASsB,IACP,IAAIC,EAAQ,CACVC,KAAMR,EACNC,OAAQA,GAEV,OAAO,SAAUQ,GAGf,OAFAA,EAAKH,SAAW,IAAII,EAASH,GAC7BI,IACOF,CACT,CACF,CAUA,SAASC,EAASH,GAChBK,KAAKL,MAAQA,EACbK,KAAKC,IAAM,CACTL,KAAMR,EACNC,OAAQA,GAEVW,KAAKE,OAAS/C,EAAQ+C,MACxB,CAKAJ,EAAS9D,UAAUmE,QAAUjB,EAC7B,IAAIkB,EAAa,GAQjB,SAASC,EAAMC,GACb,IAAIC,EAAM,IAAIC,MAAMrD,EAAQ+C,OAAS,IAAMd,EAAS,IAAMC,EAAS,KAAOiB,GAM1E,GALAC,EAAIE,OAASH,EACbC,EAAIG,SAAWvD,EAAQ+C,OACvBK,EAAIX,KAAOR,EACXmB,EAAIlB,OAASA,EACbkB,EAAIL,OAAShB,GACT/B,EAAQwD,OAGV,MAAMJ,EAFNH,EAAWQ,KAAKL,EAIpB,CAQA,SAASf,EAAMqB,GACb,IAAIC,EAAID,EAAGE,KAAK7B,GAChB,GAAK4B,EAAL,CACA,IAAI9B,EAAM8B,EAAE,GAGZ,OAFAxB,EAAeN,GACfE,EAAQA,EAAM8B,MAAMhC,EAAIZ,QACjB0C,CAJO,CAKhB,CAKA,SAASf,IACPP,EAAMhB,EACR,CAQA,SAASyC,EAASC,GAChB,IAAIC,EAEJ,IADAD,EAAQA,GAAS,GACVC,EAAIC,MACC,IAAND,GACFD,EAAMN,KAAKO,GAGf,OAAOD,CACT,CAQA,SAASE,IACP,IAAIC,EAAM3B,IACV,GAnJgB,KAmJKR,EAAMoC,OAAO,IAlJvB,KAkJyCpC,EAAMoC,OAAO,GAAjE,CAEA,IADA,IAAInD,EAAI,EACDW,GAAgBI,EAAMoC,OAAOnD,KApJzB,KAoJ4Ce,EAAMoC,OAAOnD,IArJpD,KAqJ2Ee,EAAMoC,OAAOnD,EAAI,OACxGA,EAGJ,GADAA,GAAK,EACDW,IAAiBI,EAAMoC,OAAOnD,EAAI,GACpC,OAAOkC,EAAM,0BAEf,IAAIrB,EAAME,EAAM8B,MAAM,EAAG7C,EAAI,GAK7B,OAJAkB,GAAU,EACVC,EAAeN,GACfE,EAAQA,EAAM8B,MAAM7C,GACpBkB,GAAU,EACHgC,EAAI,CACTE,KA7Ja,UA8JbH,QAASpC,GAhBgE,CAkB7E,CAQA,SAASwC,IACP,IAAIH,EAAM3B,IAGN+B,EAAOjC,EAAMf,GACjB,GAAKgD,EAAL,CAIA,GAHAL,KAGK5B,EAAMd,GAAc,OAAO2B,EAAM,wBAGtC,IAAIqB,EAAMlC,EAAMb,GACZgD,EAAMN,EAAI,CACZE,KArLiB,cAsLjBK,SAAU7C,EAAK0C,EAAK,GAAGxC,QAAQX,EAAeQ,IAC9CvB,MAAOmE,EAAM3C,EAAK2C,EAAI,GAAGzC,QAAQX,EAAeQ,IAAiBA,IAKnE,OADAU,EAAMZ,GACC+C,CAhBU,CAiBnB,CAsBA,OADA5B,IAdA,WACE,IAII8B,EAJAC,EAAQ,GAKZ,IAJAb,EAASa,GAIFD,EAAOL,MACC,IAATK,IACFC,EAAMlB,KAAKiB,GACXZ,EAASa,IAGb,OAAOA,CACT,CAEOC,EACT,qBCpOApE,EAAOC,QAAU,SAAkBhB,GACjC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aAA2D,mBAA7BJ,EAAII,YAAYgF,UAA2BpF,EAAII,YAAYgF,SAASpF,EAC9H,2uBCRe,SAASqF,EAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIhD,UAAU,sDAEtB+C,EAASlG,UAAYD,OAAOqG,OAAOD,GAAcA,EAAWnG,UAAW,CACrEgB,YAAa,CACXO,MAAO2E,EACPzE,UAAU,EACVH,cAAc,KAGlBvB,OAAOK,eAAe8F,EAAU,YAAa,CAC3CzE,UAAU,IAER0E,IAAY,EAAAE,EAAA,GAAeH,EAAUC,EAC3C,gBChBe,SAASG,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CCHe,SAASE,EAA2BF,EAAM7F,GACvD,GAAIA,IAA2B,YAAlB,OAAQA,IAAsC,mBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIyC,UAAU,4DAEtB,OAAO,EAAsBoD,EAC/B,CCTe,SAASG,EAAgBC,GAItC,OAHAD,EAAkB3G,OAAOsG,eAAiBtG,OAAO6G,eAAeC,OAAS,SAAyBF,GAChG,OAAOA,EAAEG,WAAa/G,OAAO6G,eAAeD,EAC9C,EACOD,EAAgBC,EACzB,CCLe,SAASI,IACtB,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EACxC,IAEE,OADAC,QAAQpH,UAAUqH,QAAQ3G,KAAKsG,QAAQC,UAAUG,QAAS,IAAI,WAAa,MACpE,CAGT,CAFE,MAAOE,GACP,OAAO,CACT,CACF,CCRe,SAASC,EAAWC,EAAQC,EAAMC,GAa/C,OAXEH,EADE,IACWP,QAAQC,UAAUJ,OAElB,SAAoBW,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAE/C,KAAKgD,MAAMD,EAAGF,GAChB,IACII,EAAW,IADGC,SAASjB,KAAKe,MAAMJ,EAAQG,IAG9C,OADID,IAAO,EAAArB,EAAA,GAAewB,EAAUH,EAAM1H,WACnC6H,CACT,EAEKN,EAAWK,MAAM,KAAM1F,UAChC,CCZe,SAAS6F,EAAiBL,GACvC,IAAIM,EAAwB,mBAARC,IAAqB,IAAIA,SAAQC,EAuBrD,OAtBAH,EAAmB,SAA0BL,GAC3C,GAAc,OAAVA,ICPkCS,EDOET,GCNsB,IAAzDI,SAAS3H,SAASO,KAAKyH,GAAIC,QAAQ,kBDMQ,OAAOV,ECP5C,IAA2BS,EDQtC,GAAqB,mBAAVT,EACT,MAAM,IAAIvE,UAAU,sDAEtB,QAAsB,IAAX6E,EAAwB,CACjC,GAAIA,EAAOK,IAAIX,GAAQ,OAAOM,EAAOM,IAAIZ,GACzCM,EAAOO,IAAIb,EAAOc,EACpB,CACA,SAASA,IACP,OAAO,EAAUd,EAAOxF,UAAW,EAAe8B,MAAMhD,YAC1D,CASA,OARAwH,EAAQxI,UAAYD,OAAOqG,OAAOsB,EAAM1H,UAAW,CACjDgB,YAAa,CACXO,MAAOiH,EACPnH,YAAY,EACZI,UAAU,EACVH,cAAc,MAGX,EAAA+E,EAAA,GAAemC,EAASd,EACjC,EACOK,EAAiBL,EAC1B,CEOO,SAASe,EAAkBlH,GAEhC,OAAKA,GAA0B,iBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BmC,EAASnC,EAAMmC,UAIpB,UAAWnC,GAAS,QAASA,EACxBmC,EAASnC,GAId,SAAUA,GAAS,WAAYA,EAC1BmH,EAAMnH,GAIR,GAnBE,EAoBX,CAMA,SAASmH,EAAMA,GACb,OAAOC,EAAMD,GAASA,EAAM9E,MAAQ,IAAM+E,EAAMD,GAASA,EAAMrF,OACjE,CAMA,SAASK,EAAS2B,GAChB,OAAOqD,EAAMrD,GAAOA,EAAI1B,OAAS,IAAM+E,EAAMrD,GAAOA,EAAIpB,IAC1D,CAMA,SAAS0E,EAAMpH,GACb,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAQ,CACtD,CC7EA,SAASqH,EAAaC,GAAW,IAAIC,EACrC,WAAuC,GAAuB,oBAAZ9B,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQpH,UAAUqH,QAAQ3G,KAAKsG,QAAQC,UAAUG,QAAS,IAAI,WAAa,MAAY,CAAkC,CAA1B,MAAOE,GAAK,OAAO,CAAO,CAAE,CADvQ,GAA6B,OAAO,WAAkC,IAAsCyB,EAAlCC,EAAQtC,EAAgBmC,GAAkB,GAAIC,EAA2B,CAAE,IAAIG,EAAYvC,EAAgB1C,MAAMhD,YAAa+H,EAAS/B,QAAQC,UAAU+B,EAAO9G,UAAW+G,EAAY,MAASF,EAASC,EAAMpB,MAAM5D,KAAM9B,WAAc,OAAOuE,EAA2BzC,KAAM+E,EAAS,CAAG,CAcja,IAAIG,EAA4B,SAAUC,GAC/ClD,EAAUiD,EAAcC,GACxB,IAAIC,EAASR,EAAaM,GAmB1B,SAASA,EAAazE,EAAQ4E,EAAOC,GACnC,IAAIC,GACJ,OAAgBvF,KAAMkF,GAEtB,IAAIM,EAAQ,CAAC,KAAM,MAEf9F,EAAW,CAEbC,MAAO,CACLC,KAAM,KACNP,OAAQ,MAGVY,IAAK,CACHL,KAAM,KACNP,OAAQ,OAQZ,GALAkG,EAAQH,EAAO1I,KAAKsD,MACC,iBAAVqF,IACTC,EAASD,EACTA,OAAQnB,GAEY,iBAAXoB,EAAqB,CAC9B,IAAIX,EAAQW,EAAOlB,QAAQ,MACZ,IAAXO,EACFa,EAAM,GAAKF,GAEXE,EAAM,GAAKF,EAAOtE,MAAM,EAAG2D,GAC3Ba,EAAM,GAAKF,EAAOtE,MAAM2D,EAAQ,GAEpC,CAuJA,OAtJIU,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAM3F,WAGRA,EAAW2F,EAAM3F,UAIZ,UAAW2F,GAAS,QAASA,EAGpC3F,EAAW2F,GAGJ,SAAUA,GAAS,WAAYA,KAEtC3F,EAASC,MAAQ0F,IAWrBE,EAAMnI,KAAOqH,EAAkBY,IAAU,MAOzCE,EAAME,QAA4B,iBAAXhF,EAAsBA,EAAOgF,QAAUhF,EAU9D8E,EAAMG,MAAQ,GACQ,iBAAXjF,GAAuBA,EAAOiF,QACvCH,EAAMG,MAAQjF,EAAOiF,OAUvBH,EAAM9E,OAAS8E,EAAME,QAYrBF,EAAMI,MAONJ,EAAM3F,KAAOF,EAASC,MAAMC,KAO5B2F,EAAMlG,OAASK,EAASC,MAAMN,OAO9BkG,EAAM7F,SAAWA,EAOjB6F,EAAMrF,OAASsF,EAAM,GAOrBD,EAAMK,OAASJ,EAAM,GAOrBD,EAAMM,KAYNN,EAAMO,OAONP,EAAMQ,SAUNR,EAAMS,IAONT,EAAMU,KAECV,CACT,CACA,OAAO,OAAaL,EACtB,CA9MuC,CA8MvBnB,EAAiBvD,QACjC0E,EAAalJ,UAAU6J,KAAO,GAC9BX,EAAalJ,UAAUoB,KAAO,GAC9B8H,EAAalJ,UAAUyE,OAAS,GAChCyE,EAAalJ,UAAUyJ,QAAU,GACjCP,EAAalJ,UAAU0J,MAAQ,GAC/BR,EAAalJ,UAAU2J,MAAQ,KAC/BT,EAAalJ,UAAUqD,OAAS,KAChC6F,EAAalJ,UAAU4D,KAAO,KAC9BsF,EAAalJ,UAAUkE,OAAS,KAChCgF,EAAalJ,UAAU4J,OAAS,KAChCV,EAAalJ,UAAU0D,SAAW,KC1L3B,IAAIwG,EAAO,CAChBC,SAmBF,SAAkBD,EAAME,GACtB,QAAYlC,IAARkC,GAAoC,iBAARA,EAC9B,MAAM,IAAIjH,UAAU,mCAEtBkH,EAAWH,GACX,IAIII,EAJA3G,EAAQ,EACRM,GAAO,EACP0E,EAAQuB,EAAK9H,OAGjB,QAAY8F,IAARkC,GAAoC,IAAfA,EAAIhI,QAAgBgI,EAAIhI,OAAS8H,EAAK9H,OAAQ,CACrE,KAAOuG,KACL,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAGlB,GAAI2B,EAAc,CAChB3G,EAAQgF,EAAQ,EAChB,KACF,OACS1E,EAAM,IAGfqG,GAAe,EACfrG,EAAM0E,EAAQ,GAGlB,OAAO1E,EAAM,EAAI,GAAKiG,EAAKlF,MAAMrB,EAAOM,EAC1C,CACA,GAAImG,IAAQF,EACV,MAAO,GAET,IAAIM,GAAoB,EACpBC,EAAWL,EAAIhI,OAAS,EAC5B,KAAOuG,KACL,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAGlB,GAAI2B,EAAc,CAChB3G,EAAQgF,EAAQ,EAChB,KACF,OAEI6B,EAAmB,IAGrBF,GAAe,EACfE,EAAmB7B,EAAQ,GAEzB8B,GAAY,IAEVP,EAAKK,WAAW5B,KAAWyB,EAAIG,WAAWE,KACxCA,EAAW,IAGbxG,EAAM0E,IAKR8B,GAAY,EACZxG,EAAMuG,IAKV7G,IAAUM,EACZA,EAAMuG,EACGvG,EAAM,IACfA,EAAMiG,EAAK9H,QAEb,OAAO8H,EAAKlF,MAAMrB,EAAOM,EAC3B,EAzFEyG,QAmGF,SAAiBR,GAEf,GADAG,EAAWH,GACS,IAAhBA,EAAK9H,OACP,MAAO,IAET,IAGIuI,EAHA1G,GAAO,EACP0E,EAAQuB,EAAK9H,OAKjB,OAASuG,GACP,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAClB,GAAIgC,EAAgB,CAClB1G,EAAM0E,EACN,KACF,OACUgC,IAEVA,GAAiB,GAGrB,OAAO1G,EAAM,EAA2B,KAAvBiG,EAAKK,WAAW,GAAsB,IAAM,IAAc,IAARtG,GAAoC,KAAvBiG,EAAKK,WAAW,GAAsB,KAAOL,EAAKlF,MAAM,EAAGf,EAC7I,EAzHE2G,QAmIF,SAAiBV,GACfG,EAAWH,GACX,IAQIS,EARAhC,EAAQuB,EAAK9H,OACb6B,GAAO,EACP4G,EAAY,EACZC,GAAY,EAGZC,EAAc,EAGlB,KAAOpC,KAAS,CACd,IAAIqC,EAAOd,EAAKK,WAAW5B,GAC3B,GAAa,KAATqC,EASA/G,EAAM,IAGR0G,GAAiB,EACjB1G,EAAM0E,EAAQ,GAEH,KAATqC,EAEEF,EAAW,EACbA,EAAWnC,EACc,IAAhBoC,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAtBf,GAAIJ,EAAgB,CAClBE,EAAYlC,EAAQ,EACpB,KACF,CAqBJ,CACA,GAAImC,EAAW,GAAK7G,EAAM,GAEV,IAAhB8G,GAEgB,IAAhBA,GAAqBD,IAAa7G,EAAM,GAAK6G,IAAaD,EAAY,EACpE,MAAO,GAET,OAAOX,EAAKlF,MAAM8F,EAAU7G,EAC9B,EAnLEgH,KA6LF,WAIE,IAHA,IAEIC,EAFAvC,GAAS,EAGJwC,EAAOjJ,UAAUE,OAAQgJ,EAAW,IAAI3K,MAAM0K,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IACnFD,EAASC,GAAQnJ,UAAUmJ,GAE7B,OAAS1C,EAAQyC,EAAShJ,QACxBiI,EAAWe,EAASzC,IAChByC,EAASzC,KACXuC,OAAoBhD,IAAXgD,EAAuBE,EAASzC,GAASuC,EAAS,IAAME,EAASzC,IAG9E,YAAkBT,IAAXgD,EAAuB,IAAMI,EAAUJ,EAChD,EA1MEK,IAAK,KAsNP,SAASD,EAAUpB,GACjBG,EAAWH,GACX,IAAIsB,EAAkC,KAAvBtB,EAAKK,WAAW,GAG3BhJ,EAoBN,SAAyB2I,EAAMuB,GAC7B,IAMIT,EAEAU,EARA3C,EAAS,GACT4C,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPlD,GAAS,EAKb,OAASA,GAASuB,EAAK9H,QAAQ,CAC7B,GAAIuG,EAAQuB,EAAK9H,OACf4I,EAAOd,EAAKK,WAAW5B,OAClB,IAAa,KAATqC,EACT,MAEAA,EAAO,EACT,CAEA,GAAa,KAATA,EAAuB,CACzB,GAAIY,IAAcjD,EAAQ,GAAc,IAATkD,QAExB,GAAID,IAAcjD,EAAQ,GAAc,IAATkD,EAAY,CAChD,GAAI9C,EAAO3G,OAAS,GAA2B,IAAtBuJ,GAAoE,KAAzC5C,EAAOwB,WAAWxB,EAAO3G,OAAS,IAAgE,KAAzC2G,EAAOwB,WAAWxB,EAAO3G,OAAS,GAC7I,GAAI2G,EAAO3G,OAAS,GAElB,IADAsJ,EAAiB3C,EAAOtF,YAAY,QACbsF,EAAO3G,OAAS,EAAG,CACpCsJ,EAAiB,GACnB3C,EAAS,GACT4C,EAAoB,GAGpBA,GADA5C,EAASA,EAAO/D,MAAM,EAAG0G,IACEtJ,OAAS,EAAI2G,EAAOtF,YAAY,KAE7DmI,EAAYjD,EACZkD,EAAO,EACP,QACF,OACK,GAAI9C,EAAO3G,OAAS,EAAG,CAC5B2G,EAAS,GACT4C,EAAoB,EACpBC,EAAYjD,EACZkD,EAAO,EACP,QACF,CAEEJ,IACF1C,EAASA,EAAO3G,OAAS,EAAI2G,EAAS,MAAQ,KAC9C4C,EAAoB,EAExB,MACM5C,EAAO3G,OAAS,EAClB2G,GAAU,IAAMmB,EAAKlF,MAAM4G,EAAY,EAAGjD,GAE1CI,EAASmB,EAAKlF,MAAM4G,EAAY,EAAGjD,GAErCgD,EAAoBhD,EAAQiD,EAAY,EAE1CA,EAAYjD,EACZkD,EAAO,CACT,MAAoB,KAATb,GAAyBa,GAAQ,EAC1CA,IAEAA,GAAQ,CAEZ,CACA,OAAO9C,CACT,CAvFc+C,CAAgB5B,GAAOsB,GAOnC,OANqB,IAAjBjK,EAAMa,QAAiBoJ,IACzBjK,EAAQ,KAENA,EAAMa,OAAS,GAA0C,KAArC8H,EAAKK,WAAWL,EAAK9H,OAAS,KACpDb,GAAS,KAEJiK,EAAW,IAAMjK,EAAQA,CAClC,CAyFA,SAAS8I,EAAWH,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAI/G,UAAU,mCAAqC4I,KAAKC,UAAU9B,GAE5E,CCrXO,IAAI+B,EAAO,CAChBC,IAEF,WACE,MAAO,GACT,GCmBO,SAASC,EAAMC,GACpB,OAAyB,OAAlBA,GAAmD,iBAAlBA,GAExCA,EAAcC,MAEdD,EAAc9C,MAChB,CCrBO,SAASgD,EAAUpC,GACxB,GAAoB,iBAATA,EACTA,EAAO,IAAIqC,IAAIrC,QACV,IAAKiC,EAAMjC,GAAO,CAEvB,IAAI7F,EAAQ,IAAIlB,UAAU,+EAAiF+G,EAAO,KAElH,MADA7F,EAAM2G,KAAO,uBACP3G,CACR,CACA,GAAsB,UAAlB6F,EAAKsC,SAAsB,CAE7B,IAAIC,EAAS,IAAItJ,UAAU,kCAE3B,MADAsJ,EAAOzB,KAAO,yBACRyB,CACR,CACA,OAWF,SAA6BzC,GAC3B,GAAqB,KAAjBA,EAAI0C,SAAiB,CAEvB,IAAIrI,EAAQ,IAAIlB,UAAU,wDAE1B,MADAkB,EAAM2G,KAAO,4BACP3G,CACR,CACA,IAAIsI,EAAW3C,EAAI2C,SACfhE,GAAS,EACb,OAASA,EAAQgE,EAASvK,QACxB,GAAmC,KAA/BuK,EAASpC,WAAW5B,IAA8D,KAAnCgE,EAASpC,WAAW5B,EAAQ,GAAqB,CAClG,IAAIiE,EAAQD,EAASpC,WAAW5B,EAAQ,GACxC,GAAc,KAAViE,GAAoC,MAAVA,EAAyB,CAErD,IAAIC,EAAU,IAAI1J,UAAU,uDAE5B,MADA0J,EAAQ7B,KAAO,4BACT6B,CACR,CACF,CAEF,OAAOC,mBAAmBH,EAC5B,CAhCSI,CAAoB7C,EAC7B,CCyEA,IAAI8C,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WACpDC,EAAqB,WAuB9B,SAASA,EAAM1L,GAGb,IAAIJ,GAFJ,OAAgB6C,KAAMiJ,GAMpB9L,EAHGI,EAEuB,iBAAVA,GAsYtB,SAAgBA,GACd,OAAO,IAAWA,EACpB,CAxY4C2L,CAAO3L,GACnC,CACRA,MAAOA,GAEA4K,EAAM5K,GACL,CACR2I,KAAM3I,GAGEA,EAVA,CAAC,EAqBbyC,KAAKmJ,KAAO,CAAC,EAObnJ,KAAKoJ,SAAW,GAShBpJ,KAAKqJ,QAAU,GAOfrJ,KAAKkI,IAAMD,EAAKC,MAQhBlI,KAAKzC,MAYLyC,KAAKsJ,OAULtJ,KAAK+E,OAUL/E,KAAKuJ,IAKL,IADA,IAaI9H,EAbAkD,GAAS,IACJA,EAAQqE,EAAM5K,QAAQ,CAC7B,IAAIoL,EAAQR,EAAMrE,GAId6E,KAASrM,QAA8B+G,IAAnB/G,EAAQqM,IAA2C,OAAnBrM,EAAQqM,KAE9DxJ,KAAKwJ,GAAmB,YAAVA,GAAsB,OAAmBrM,EAAQqM,IAAUrM,EAAQqM,GAErF,CAMA,IAAK/H,KAAQtE,EAEN6L,EAAMS,SAAShI,KAElBzB,KAAKyB,GAAQtE,EAAQsE,GAG3B,CA6NA,OAtNA,OAAawH,EAAO,CAAC,CACnBpM,IAAK,OACLyH,IAAK,WACH,OAAOtE,KAAKqJ,QAAQrJ,KAAKqJ,QAAQjL,OAAS,EAC5C,EAWAmG,IAAK,SAAa2B,GACZiC,EAAMjC,KACRA,EAAOoC,EAAUpC,IAEnBwD,EAAexD,EAAM,QACjBlG,KAAKkG,OAASA,GAChBlG,KAAKqJ,QAAQzI,KAAKsF,EAEtB,GAKC,CACDrJ,IAAK,UACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoBA,EAAKQ,QAAQ1G,KAAKkG,WAAQhC,CACnE,EAOAK,IAAK,SAAamC,GAChB,EAAW1G,KAAKmG,SAAU,WAC1BnG,KAAKkG,KAAOA,EAAKe,KAAKP,GAAW,GAAI1G,KAAKmG,SAC5C,GAKC,CACDtJ,IAAK,WACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoBA,EAAKC,SAASnG,KAAKkG,WAAQhC,CACpE,EASAK,IAAK,SAAa4B,GAChBuD,EAAevD,EAAU,YACzBwD,EAAWxD,EAAU,YACrBnG,KAAKkG,KAAOA,EAAKe,KAAKjH,KAAK0G,SAAW,GAAIP,EAC5C,GAKC,CACDtJ,IAAK,UACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoBA,EAAKU,QAAQ5G,KAAKkG,WAAQhC,CACnE,EASAK,IAAK,SAAaqC,GAGhB,GAFA+C,EAAW/C,EAAS,WACpB,EAAW5G,KAAK0G,QAAS,WACrBE,EAAS,CACX,GAA8B,KAA1BA,EAAQL,WAAW,GACrB,MAAM,IAAI/F,MAAM,iCAElB,GAAIoG,EAAQ6C,SAAS,IAAK,GACxB,MAAM,IAAIjJ,MAAM,yCAEpB,CACAR,KAAKkG,KAAOA,EAAKe,KAAKjH,KAAK0G,QAAS1G,KAAK4J,MAAQhD,GAAW,IAC9D,GAKC,CACD/J,IAAK,OACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoBA,EAAKC,SAASnG,KAAKkG,KAAMlG,KAAK4G,cAAW1C,CAClF,EASAK,IAAK,SAAaqF,GAChBF,EAAeE,EAAM,QACrBD,EAAWC,EAAM,QACjB5J,KAAKkG,KAAOA,EAAKe,KAAKjH,KAAK0G,SAAW,GAAIkD,GAAQ5J,KAAK4G,SAAW,IACpE,GAWC,CACD/J,IAAK,WACLU,MAAO,SAAkBsM,GACvB,OAAQ7J,KAAKzC,OAAS,IAAIpB,SAAS0N,QAAY3F,EACjD,GAkBC,CACDrH,IAAK,UACLU,MAAO,SAAiBkD,EAAQ4E,EAAOC,GACrC,IAAIG,EAAU,IAAIP,EAAazE,EAAQ4E,EAAOC,GAO9C,OANItF,KAAKkG,OACPT,EAAQrI,KAAO4C,KAAKkG,KAAO,IAAMT,EAAQrI,KACzCqI,EAAQI,KAAO7F,KAAKkG,MAEtBT,EAAQE,OAAQ,EAChB3F,KAAKoJ,SAASxI,KAAK6E,GACZA,CACT,GAkBC,CACD5I,IAAK,OACLU,MAAO,SAAckD,EAAQ4E,EAAOC,GAClC,IAAIG,EAAUzF,KAAKyF,QAAQhF,EAAQ4E,EAAOC,GAE1C,OADAG,EAAQE,MAAQ,KACTF,CACT,GAsBC,CACD5I,IAAK,OACLU,MAAO,SAAckD,EAAQ4E,EAAOC,GAClC,IAAIG,EAAUzF,KAAKyF,QAAQhF,EAAQ4E,EAAOC,GAE1C,MADAG,EAAQE,OAAQ,EACVF,CACR,KAEKwD,CACT,CAzWgC,GAqXhC,SAASU,EAAWG,EAAM1M,GACxB,GAAI0M,GAAQA,EAAKL,SAASvD,EAAKqB,KAC7B,MAAM,IAAI/G,MAAM,IAAMpD,EAAO,uCAAyC8I,EAAKqB,IAAM,IAErF,CAYA,SAASmC,EAAeI,EAAM1M,GAC5B,IAAK0M,EACH,MAAM,IAAItJ,MAAM,IAAMpD,EAAO,oBAEjC,CAYA,SAAS,EAAW8I,EAAM9I,GACxB,IAAK8I,EACH,MAAM,IAAI1F,MAAM,YAAcpD,EAAO,kCAEzC,iDC3fe,SAAS2M,EAASvN,GAC/B,OAAO,EAAAwN,EAAA,GAAexN,KAAQ,EAAAyN,EAAA,GAAgBzN,KAAQ,EAAA0N,EAAA,GAA2B1N,KAAQ,EAAA2N,EAAA,IAC3F,CCCO,SAASC,EAAK/J,GACnB,GAAIA,EACF,MAAMA,CAEV,yBCXe,SAAS1D,EAAcY,GACpC,GAAqB,iBAAVA,GAAgC,OAAVA,EAC/B,OAAO,EAET,IAAIvB,EAAYD,OAAO6G,eAAerF,GACtC,QAAsB,OAAdvB,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAO6G,eAAe5G,IAA0BqO,OAAOC,eAAe/M,GAAY8M,OAAOE,YAAYhN,EACvK,CCsIO,SAASiN,EAAKC,EAAYC,GAE/B,IAAIC,EACJ,OAQA,WACE,IAAK,IAAIC,EAAQ1M,UAAUE,OAAQyM,EAAa,IAAIpO,MAAMmO,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IAC1FD,EAAWC,GAAS5M,UAAU4M,GAEhC,IAEI/F,EAFAgG,EAAoBN,EAAWrM,OAASyM,EAAWzM,OAGnD2M,GACFF,EAAWjK,KAAKoK,GAElB,IACEjG,EAAS0F,EAAW7G,MAAM5D,KAAM6K,EAYlC,CAXE,MAAOxK,GACP,IAAI4K,EAAgC5K,EAMpC,GAAI0K,GAAqBJ,EACvB,MAAMM,EAER,OAAOD,EAAKC,EACd,CACKF,IACChG,GAAUA,EAAOmG,MAA+B,mBAAhBnG,EAAOmG,KACzCnG,EAAOmG,KAAKA,EAAMF,GACTjG,aAAkBvE,MAC3BwK,EAAKjG,GAELmG,EAAKnG,GAGX,EAOA,SAASiG,EAAK3K,GACZ,IAAKsK,EAAQ,CACXA,GAAS,EACT,IAAK,IAAIQ,EAAQjN,UAAUE,OAAQgN,EAAS,IAAI3O,MAAM0O,EAAQ,EAAIA,EAAQ,EAAI,GAAIE,EAAQ,EAAGA,EAAQF,EAAOE,IAC1GD,EAAOC,EAAQ,GAAKnN,UAAUmN,GAEhCX,EAAS9G,WAAM,EAAQ,CAACvD,GAAOiL,OAAOF,GACxC,CACF,CAOA,SAASF,EAAK3N,GACZyN,EAAK,KAAMzN,EACb,CACF,CChJA,SAAS,EAAMmH,GACb,OAAO,EAAMA,GAASA,EAAM9E,MAAQ,IAAM,EAAM8E,GAASA,EAAMrF,OACjE,CAMA,SAAS,EAASgC,GAChB,OAAO,EAAMA,GAAOA,EAAI1B,OAAS,IAAM,EAAM0B,GAAOA,EAAIpB,IAC1D,CAMA,SAAS,EAAM1C,GACb,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAQ,CACtD,CC7EA,SAAS,EAAasH,GAAW,IAAIC,EACrC,WAAuC,GAAuB,oBAAZ9B,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQpH,UAAUqH,QAAQ3G,KAAKsG,QAAQC,UAAUG,QAAS,IAAI,WAAa,MAAY,CAAkC,CAA1B,MAAOE,GAAK,OAAO,CAAO,CAAE,CADvQ,GAA6B,OAAO,WAAkC,IAAsCyB,EAAlCC,EAAQtC,EAAgBmC,GAAkB,GAAIC,EAA2B,CAAE,IAAIG,EAAYvC,EAAgB1C,MAAMhD,YAAa+H,EAAS/B,QAAQC,UAAU+B,EAAO9G,UAAW+G,EAAY,MAASF,EAASC,EAAMpB,MAAM5D,KAAM9B,WAAc,OAAOuE,EAA2BzC,KAAM+E,EAAS,CAAG,CAcja,IAAI,EAA4B,SAAUI,GAC/ClD,EAAUiD,EAAcC,GACxB,IAAIC,EAAS,EAAaF,GAmB1B,SAASA,EAAazE,EAAQ4E,EAAOC,GACnC,IAAIC,GACJ,OAAgBvF,KAAMkF,GAEtB,IDT8B3H,ECS1BiI,EAAQ,CAAC,KAAM,MAEf9F,EAAW,CAEbC,MAAO,CACLC,KAAM,KACNP,OAAQ,MAGVY,IAAK,CACHL,KAAM,KACNP,OAAQ,OAQZ,GALAkG,EAAQH,EAAO1I,KAAKsD,MACC,iBAAVqF,IACTC,EAASD,EACTA,OAAQnB,GAEY,iBAAXoB,EAAqB,CAC9B,IAAIX,EAAQW,EAAOlB,QAAQ,MACZ,IAAXO,EACFa,EAAM,GAAKF,GAEXE,EAAM,GAAKF,EAAOtE,MAAM,EAAG2D,GAC3Ba,EAAM,GAAKF,EAAOtE,MAAM2D,EAAQ,GAEpC,CAuJA,OAtJIU,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAM3F,WAGRA,EAAW2F,EAAM3F,UAIZ,UAAW2F,GAAS,QAASA,EAGpC3F,EAAW2F,GAGJ,SAAUA,GAAS,WAAYA,KAEtC3F,EAASC,MAAQ0F,IAWrBE,EAAMnI,ODlEwBG,ECkEC8H,IDhEF,iBAAV9H,EAKjB,aAAcA,GAAS,SAAUA,EAC5B,EAASA,EAAMmC,UAIpB,UAAWnC,GAAS,QAASA,EACxB,EAASA,GAId,SAAUA,GAAS,WAAYA,EAC1B,EAAMA,GAIR,GAnBE,KC+DkC,MAOzCgI,EAAME,QAA4B,iBAAXhF,EAAsBA,EAAOgF,QAAUhF,EAU9D8E,EAAMG,MAAQ,GACQ,iBAAXjF,GAAuBA,EAAOiF,QACvCH,EAAMG,MAAQjF,EAAOiF,OAUvBH,EAAM9E,OAAS8E,EAAME,QAYrBF,EAAMI,MAONJ,EAAM3F,KAAOF,EAASC,MAAMC,KAO5B2F,EAAMlG,OAASK,EAASC,MAAMN,OAO9BkG,EAAM7F,SAAWA,EAOjB6F,EAAMrF,OAASsF,EAAM,GAOrBD,EAAMK,OAASJ,EAAM,GAOrBD,EAAMM,KAYNN,EAAMO,OAONP,EAAMQ,SAUNR,EAAMS,IAONT,EAAMU,KAECV,CACT,CACA,OAAO,OAAaL,EACtB,CA9MuC,CA8MvBnB,EAAiBvD,QACjC,EAAaxE,UAAU6J,KAAO,GAC9B,EAAa7J,UAAUoB,KAAO,GAC9B,EAAapB,UAAUyE,OAAS,GAChC,EAAazE,UAAUyJ,QAAU,GACjC,EAAazJ,UAAU0J,MAAQ,GAC/B,EAAa1J,UAAU2J,MAAQ,KAC/B,EAAa3J,UAAUqD,OAAS,KAChC,EAAarD,UAAU4D,KAAO,KAC9B,EAAa5D,UAAUkE,OAAS,KAChC,EAAalE,UAAU4J,OAAS,KAChC,EAAa5J,UAAU0D,SAAW,KC1L3B,IAAI,EAAO,CAChByG,SAmBF,SAAkBD,EAAME,GACtB,QAAYlC,IAARkC,GAAoC,iBAARA,EAC9B,MAAM,IAAIjH,UAAU,mCAEtB,GAAW+G,GACX,IAIII,EAJA3G,EAAQ,EACRM,GAAO,EACP0E,EAAQuB,EAAK9H,OAGjB,QAAY8F,IAARkC,GAAoC,IAAfA,EAAIhI,QAAgBgI,EAAIhI,OAAS8H,EAAK9H,OAAQ,CACrE,KAAOuG,KACL,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAGlB,GAAI2B,EAAc,CAChB3G,EAAQgF,EAAQ,EAChB,KACF,OACS1E,EAAM,IAGfqG,GAAe,EACfrG,EAAM0E,EAAQ,GAGlB,OAAO1E,EAAM,EAAI,GAAKiG,EAAKlF,MAAMrB,EAAOM,EAC1C,CACA,GAAImG,IAAQF,EACV,MAAO,GAET,IAAIM,GAAoB,EACpBC,EAAWL,EAAIhI,OAAS,EAC5B,KAAOuG,KACL,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAGlB,GAAI2B,EAAc,CAChB3G,EAAQgF,EAAQ,EAChB,KACF,OAEI6B,EAAmB,IAGrBF,GAAe,EACfE,EAAmB7B,EAAQ,GAEzB8B,GAAY,IAEVP,EAAKK,WAAW5B,KAAWyB,EAAIG,WAAWE,KACxCA,EAAW,IAGbxG,EAAM0E,IAKR8B,GAAY,EACZxG,EAAMuG,IAKV7G,IAAUM,EACZA,EAAMuG,EACGvG,EAAM,IACfA,EAAMiG,EAAK9H,QAEb,OAAO8H,EAAKlF,MAAMrB,EAAOM,EAC3B,EAzFEyG,QAmGF,SAAiBR,GAEf,GADA,GAAWA,GACS,IAAhBA,EAAK9H,OACP,MAAO,IAET,IAGIuI,EAHA1G,GAAO,EACP0E,EAAQuB,EAAK9H,OAKjB,OAASuG,GACP,GAA+B,KAA3BuB,EAAKK,WAAW5B,IAClB,GAAIgC,EAAgB,CAClB1G,EAAM0E,EACN,KACF,OACUgC,IAEVA,GAAiB,GAGrB,OAAO1G,EAAM,EAA2B,KAAvBiG,EAAKK,WAAW,GAAsB,IAAM,IAAc,IAARtG,GAAoC,KAAvBiG,EAAKK,WAAW,GAAsB,KAAOL,EAAKlF,MAAM,EAAGf,EAC7I,EAzHE2G,QAmIF,SAAiBV,GACf,GAAWA,GACX,IAQIS,EARAhC,EAAQuB,EAAK9H,OACb6B,GAAO,EACP4G,EAAY,EACZC,GAAY,EAGZC,EAAc,EAGlB,KAAOpC,KAAS,CACd,IAAIqC,EAAOd,EAAKK,WAAW5B,GAC3B,GAAa,KAATqC,EASA/G,EAAM,IAGR0G,GAAiB,EACjB1G,EAAM0E,EAAQ,GAEH,KAATqC,EAEEF,EAAW,EACbA,EAAWnC,EACc,IAAhBoC,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAtBf,GAAIJ,EAAgB,CAClBE,EAAYlC,EAAQ,EACpB,KACF,CAqBJ,CACA,GAAImC,EAAW,GAAK7G,EAAM,GAEV,IAAhB8G,GAEgB,IAAhBA,GAAqBD,IAAa7G,EAAM,GAAK6G,IAAaD,EAAY,EACpE,MAAO,GAET,OAAOX,EAAKlF,MAAM8F,EAAU7G,EAC9B,EAnLEgH,KA6LF,WAIE,IAHA,IAEIC,EAFAvC,GAAS,EAGJwC,EAAOjJ,UAAUE,OAAQgJ,EAAW,IAAI3K,MAAM0K,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IACnFD,EAASC,GAAQnJ,UAAUmJ,GAE7B,OAAS1C,EAAQyC,EAAShJ,QACxB,GAAWgJ,EAASzC,IAChByC,EAASzC,KACXuC,OAAoBhD,IAAXgD,EAAuBE,EAASzC,GAASuC,EAAS,IAAME,EAASzC,IAG9E,YAAkBT,IAAXgD,EAAuB,IAAM,GAAUA,EAChD,EA1MEK,IAAK,KAsNP,SAAS,GAAUrB,GACjB,GAAWA,GACX,IAAIsB,EAAkC,KAAvBtB,EAAKK,WAAW,GAG3BhJ,EAoBN,SAAyB2I,EAAMuB,GAC7B,IAMIT,EAEAU,EARA3C,EAAS,GACT4C,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPlD,GAAS,EAKb,OAASA,GAASuB,EAAK9H,QAAQ,CAC7B,GAAIuG,EAAQuB,EAAK9H,OACf4I,EAAOd,EAAKK,WAAW5B,OAClB,IAAa,KAATqC,EACT,MAEAA,EAAO,EACT,CAEA,GAAa,KAATA,EAAuB,CACzB,GAAIY,IAAcjD,EAAQ,GAAc,IAATkD,QAExB,GAAID,IAAcjD,EAAQ,GAAc,IAATkD,EAAY,CAChD,GAAI9C,EAAO3G,OAAS,GAA2B,IAAtBuJ,GAAoE,KAAzC5C,EAAOwB,WAAWxB,EAAO3G,OAAS,IAAgE,KAAzC2G,EAAOwB,WAAWxB,EAAO3G,OAAS,GAC7I,GAAI2G,EAAO3G,OAAS,GAElB,IADAsJ,EAAiB3C,EAAOtF,YAAY,QACbsF,EAAO3G,OAAS,EAAG,CACpCsJ,EAAiB,GACnB3C,EAAS,GACT4C,EAAoB,GAGpBA,GADA5C,EAASA,EAAO/D,MAAM,EAAG0G,IACEtJ,OAAS,EAAI2G,EAAOtF,YAAY,KAE7DmI,EAAYjD,EACZkD,EAAO,EACP,QACF,OACK,GAAI9C,EAAO3G,OAAS,EAAG,CAC5B2G,EAAS,GACT4C,EAAoB,EACpBC,EAAYjD,EACZkD,EAAO,EACP,QACF,CAEEJ,IACF1C,EAASA,EAAO3G,OAAS,EAAI2G,EAAS,MAAQ,KAC9C4C,EAAoB,EAExB,MACM5C,EAAO3G,OAAS,EAClB2G,GAAU,IAAMmB,EAAKlF,MAAM4G,EAAY,EAAGjD,GAE1CI,EAASmB,EAAKlF,MAAM4G,EAAY,EAAGjD,GAErCgD,EAAoBhD,EAAQiD,EAAY,EAE1CA,EAAYjD,EACZkD,EAAO,CACT,MAAoB,KAATb,GAAyBa,GAAQ,EAC1CA,IAEAA,GAAQ,CAEZ,CACA,OAAO9C,CACT,CAvFc,CAAgBmB,GAAOsB,GAOnC,OANqB,IAAjBjK,EAAMa,QAAiBoJ,IACzBjK,EAAQ,KAENA,EAAMa,OAAS,GAA0C,KAArC8H,EAAKK,WAAWL,EAAK9H,OAAS,KACpDb,GAAS,KAEJiK,EAAW,IAAMjK,EAAQA,CAClC,CAyFA,SAAS,GAAW2I,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAI/G,UAAU,mCAAqC4I,KAAKC,UAAU9B,GAE5E,CCrXO,IAAI,GAAO,CAChBgC,IAEF,WACE,MAAO,GACT,GCmBO,SAAS,GAAME,GACpB,OAAyB,OAAlBA,GAAmD,iBAAlBA,GAExCA,EAAcC,MAEdD,EAAc9C,MAChB,CCrBO,SAAS,GAAUY,GACxB,GAAoB,iBAATA,EACTA,EAAO,IAAIqC,IAAIrC,QACV,IAAK,GAAMA,GAAO,CAEvB,IAAI7F,EAAQ,IAAIlB,UAAU,+EAAiF+G,EAAO,KAElH,MADA7F,EAAM2G,KAAO,uBACP3G,CACR,CACA,GAAsB,UAAlB6F,EAAKsC,SAAsB,CAE7B,IAAIC,EAAS,IAAItJ,UAAU,kCAE3B,MADAsJ,EAAOzB,KAAO,yBACRyB,CACR,CACA,OAWF,SAA6BzC,GAC3B,GAAqB,KAAjBA,EAAI0C,SAAiB,CAEvB,IAAIrI,EAAQ,IAAIlB,UAAU,wDAE1B,MADAkB,EAAM2G,KAAO,4BACP3G,CACR,CACA,IAAIsI,EAAW3C,EAAI2C,SACfhE,GAAS,EACb,OAASA,EAAQgE,EAASvK,QACxB,GAAmC,KAA/BuK,EAASpC,WAAW5B,IAA8D,KAAnCgE,EAASpC,WAAW5B,EAAQ,GAAqB,CAClG,IAAIiE,EAAQD,EAASpC,WAAW5B,EAAQ,GACxC,GAAc,KAAViE,GAAoC,MAAVA,EAAyB,CAErD,IAAIC,EAAU,IAAI1J,UAAU,uDAE5B,MADA0J,EAAQ7B,KAAO,4BACT6B,CACR,CACF,CAEF,OAAOC,mBAAmBH,EAC5B,CAhCS,CAAoBzC,EAC7B,CCyEA,IAAI,GAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WACpD,GAAqB,WAuB9B,SAAS+C,EAAM1L,GAGb,IAAIJ,GAFJ,OAAgB6C,KAAMiJ,GAMpB9L,EAHGI,EAEuB,iBAAVA,GAsYtB,SAAgBA,GACd,OAAO,IAAWA,EACpB,CAxY4C,CAAOA,GACnC,CACRA,MAAOA,GAEA,GAAMA,GACL,CACR2I,KAAM3I,GAGEA,EAVA,CAAC,EAqBbyC,KAAKmJ,KAAO,CAAC,EAObnJ,KAAKoJ,SAAW,GAShBpJ,KAAKqJ,QAAU,GAOfrJ,KAAKkI,IAAM,SAQXlI,KAAKzC,MAYLyC,KAAKsJ,OAULtJ,KAAK+E,OAUL/E,KAAKuJ,IAKL,IADA,IAaI9H,EAbAkD,GAAS,IACJA,EAAQ,GAAMvG,QAAQ,CAC7B,IAAIoL,EAAQ,GAAM7E,GAId6E,KAASrM,QAA8B+G,IAAnB/G,EAAQqM,IAA2C,OAAnBrM,EAAQqM,KAE9DxJ,KAAKwJ,GAAmB,YAAVA,GAAsB,OAAmBrM,EAAQqM,IAAUrM,EAAQqM,GAErF,CAMA,IAAK/H,KAAQtE,EAEN,GAAMsM,SAAShI,KAElBzB,KAAKyB,GAAQtE,EAAQsE,GAG3B,CA6NA,OAtNA,OAAawH,EAAO,CAAC,CACnBpM,IAAK,OACLyH,IAAK,WACH,OAAOtE,KAAKqJ,QAAQrJ,KAAKqJ,QAAQjL,OAAS,EAC5C,EAWAmG,IAAK,SAAa2B,GACZ,GAAMA,KACRA,EAAO,GAAUA,IAEnB,GAAeA,EAAM,QACjBlG,KAAKkG,OAASA,GAChBlG,KAAKqJ,QAAQzI,KAAKsF,EAEtB,GAKC,CACDrJ,IAAK,UACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoB,UAAalG,KAAKkG,WAAQhC,CACnE,EAOAK,IAAK,SAAamC,GAChB,GAAW1G,KAAKmG,SAAU,WAC1BnG,KAAKkG,KAAO,OAAUQ,GAAW,GAAI1G,KAAKmG,SAC5C,GAKC,CACDtJ,IAAK,WACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoB,WAAclG,KAAKkG,WAAQhC,CACpE,EASAK,IAAK,SAAa4B,GAChB,GAAeA,EAAU,YACzB,GAAWA,EAAU,YACrBnG,KAAKkG,KAAO,OAAUlG,KAAK0G,SAAW,GAAIP,EAC5C,GAKC,CACDtJ,IAAK,UACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoB,UAAalG,KAAKkG,WAAQhC,CACnE,EASAK,IAAK,SAAaqC,GAGhB,GAFA,GAAWA,EAAS,WACpB,GAAW5G,KAAK0G,QAAS,WACrBE,EAAS,CACX,GAA8B,KAA1BA,EAAQL,WAAW,GACrB,MAAM,IAAI/F,MAAM,iCAElB,GAAIoG,EAAQ6C,SAAS,IAAK,GACxB,MAAM,IAAIjJ,MAAM,yCAEpB,CACAR,KAAKkG,KAAO,OAAUlG,KAAK0G,QAAS1G,KAAK4J,MAAQhD,GAAW,IAC9D,GAKC,CACD/J,IAAK,OACLyH,IAAK,WACH,MAA4B,iBAAdtE,KAAKkG,KAAoB,WAAclG,KAAKkG,KAAMlG,KAAK4G,cAAW1C,CAClF,EASAK,IAAK,SAAaqF,GAChB,GAAeA,EAAM,QACrB,GAAWA,EAAM,QACjB5J,KAAKkG,KAAO,OAAUlG,KAAK0G,SAAW,GAAIkD,GAAQ5J,KAAK4G,SAAW,IACpE,GAWC,CACD/J,IAAK,WACLU,MAAO,SAAkBsM,GACvB,OAAQ7J,KAAKzC,OAAS,IAAIpB,SAAS0N,QAAY3F,EACjD,GAkBC,CACDrH,IAAK,UACLU,MAAO,SAAiBkD,EAAQ4E,EAAOC,GACrC,IAAIG,EAAU,IAAI,EAAahF,EAAQ4E,EAAOC,GAO9C,OANItF,KAAKkG,OACPT,EAAQrI,KAAO4C,KAAKkG,KAAO,IAAMT,EAAQrI,KACzCqI,EAAQI,KAAO7F,KAAKkG,MAEtBT,EAAQE,OAAQ,EAChB3F,KAAKoJ,SAASxI,KAAK6E,GACZA,CACT,GAkBC,CACD5I,IAAK,OACLU,MAAO,SAAckD,EAAQ4E,EAAOC,GAClC,IAAIG,EAAUzF,KAAKyF,QAAQhF,EAAQ4E,EAAOC,GAE1C,OADAG,EAAQE,MAAQ,KACTF,CACT,GAsBC,CACD5I,IAAK,OACLU,MAAO,SAAckD,EAAQ4E,EAAOC,GAClC,IAAIG,EAAUzF,KAAKyF,QAAQhF,EAAQ4E,EAAOC,GAE1C,MADAG,EAAQE,OAAQ,EACVF,CACR,KAEKwD,CACT,CAzWgC,GAqXhC,SAAS,GAAWa,EAAM1M,GACxB,GAAI0M,GAAQA,EAAKL,SAAS,OACxB,MAAM,IAAIjJ,MAAM,IAAMpD,EAAO,uCAAyC,MAAW,IAErF,CAYA,SAAS,GAAe0M,EAAM1M,GAC5B,IAAK0M,EACH,MAAM,IAAItJ,MAAM,IAAMpD,EAAO,oBAEjC,CAYA,SAAS,GAAW8I,EAAM9I,GACxB,IAAK8I,EACH,MAAM,IAAI1F,MAAM,YAAcpD,EAAO,kCAEzC,CCjeO,IAAImO,GAOX,SAASC,IACP,IAMIC,EANAC,GRGAC,EAAM,GAENC,EAAW,CACbC,IAMF,WACE,IAAK,IAAI1E,EAAOjJ,UAAUE,OAAQ0N,EAAS,IAAIrP,MAAM0K,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IACjFyE,EAAOzE,GAAQnJ,UAAUmJ,GAE3B,IAAI0E,GAAmB,EAEnBrB,EAAWoB,EAAOE,MACtB,GAAwB,mBAAbtB,EACT,MAAM,IAAIvL,UAAU,2CAA6CuL,GAUnE,SAASuB,EAAK5L,GACZ,IAAI8D,EAAKwH,IAAMI,GACXpH,GAAS,EACb,GAAItE,EACFqK,EAASrK,OADX,CAMA,IAAK,IAAI6L,EAAQhO,UAAUE,OAAQgN,EAAS,IAAI3O,MAAMyP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC1Gf,EAAOe,EAAQ,GAAKjO,UAAUiO,GAEhC,OAASxH,EAAQmH,EAAO1N,QACA,OAAlBgN,EAAOzG,SAAqCT,IAAlBkH,EAAOzG,KACnCyG,EAAOzG,GAASmH,EAAOnH,IAK3BmH,EAASV,EAGLjH,EACFqG,EAAKrG,EAAI8H,GAAMrI,WAAM,EAAQwH,GAE7BV,EAAS9G,WAAM,EAAQ,CAAC,MAAM0H,OAAOF,GAnBvC,CAqBF,CAnCAa,EAAKrI,WAAM,EAAQ,CAAC,MAAM0H,QAAO,OAAmBQ,IAoCtD,EAnDEM,IAsDF,SAAaC,GACX,GAA0B,mBAAfA,EACT,MAAM,IAAIlN,UAAU,+CAAiDkN,GAGvE,OADAV,EAAI/K,KAAKyL,GACFT,CACT,GA1DOA,GQPHU,EAAY,GAEZC,EAAY,CAAC,EAGbC,GAAe,ERNd,IAEDb,EAEAC,EQ6BJ,OAvBAa,EAAUtD,KA0CV,SAActM,EAAKU,GACjB,GAAmB,iBAARV,EAET,OAAyB,IAArBqB,UAAUE,QACZsO,GAAe,OAAQjB,GACvBc,EAAU1P,GAAOU,EACVkP,GAIFE,GAAIjQ,KAAK6P,EAAW1P,IAAQ0P,EAAU1P,IAAQ,KAIvD,GAAIA,EAGF,OAFA6P,GAAe,OAAQjB,GACvBc,EAAY1P,EACL4P,EAIT,OAAOF,CACT,EA/DAE,EAAUG,YAAS1I,EACnBuI,EAAUI,cAAW3I,EAGrBuI,EAAUK,OA8DV,WACE,GAAIrB,EACF,OAAOgB,EAET,OAASD,EAAcF,EAAUlO,QAAQ,CACvC,IAAI2O,EAAwBhD,EAASuC,EAAUE,IAC7CQ,EAAWD,EAAsB,GACjC5P,EAAU4P,EAAsB/L,MAAM,GACxC,IAAmB,IAAf7D,EAAQ,GAAZ,EAGmB,IAAfA,EAAQ,KACVA,EAAQ,QAAK+G,GAIf,IAAI+I,EAAcD,EAAStQ,KAAKkH,MAAMoJ,EAAU,CAACP,GAAWnB,QAAO,OAAmBnO,KAC3D,mBAAhB8P,GACTvB,EAAaU,IAAIa,EARnB,CAUF,CAGA,OAFAxB,GAAS,EACTe,EAAcU,OAAOC,kBACdV,CACT,EAnFAA,EAAUH,UAAYA,EAEtBG,EAAUL,IAwFV,SAAa7O,GACX,IAAK,IAAI4J,EAAOjJ,UAAUE,OAAQjB,EAAU,IAAIV,MAAM0K,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACrGlK,EAAQkK,EAAO,GAAKnJ,UAAUmJ,GAGhC,IAAI+F,EAEJ,GADAV,GAAe,MAAOjB,GAClBlO,cAEG,GAAqB,mBAAVA,EAChB8P,EAAUzJ,WAAM,EAAQ,CAACrG,GAAO+N,OAAOnO,QAClC,IAAqB,iBAAVI,EAOhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KANzDd,MAAMF,QAAQgB,GAChB+P,EAAQ/P,GAERgQ,EAAUhQ,EAId,CACI6P,IACFb,EAAUa,SAAWrR,OAAOyR,OAAOjB,EAAUa,UAAY,CAAC,EAAGA,IAE/D,OAAOX,EAMP,SAASgB,EAAIlQ,GACX,GAAqB,mBAAVA,EACT8P,EAAU9P,OACL,IAAqB,iBAAVA,EAUhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KAT7D,GAAId,MAAMF,QAAQgB,GAAQ,CACxB,IAAImQ,EAAS3D,EAASxM,GACpBoQ,EAASD,EAAO,GAChBE,EAAWF,EAAO1M,MAAM,GAC1BqM,EAAUzJ,WAAM,EAAQ,CAAC+J,GAAQrC,QAAO,OAAmBsC,IAC7D,MACEL,EAAUhQ,EAId,CACF,CAMA,SAASgQ,EAAUxI,GACjBuI,EAAQvI,EAAO8I,SACX9I,EAAOqI,WACTA,EAAWrR,OAAOyR,OAAOJ,GAAY,CAAC,EAAGrI,EAAOqI,UAEpD,CAMA,SAASE,EAAQO,GACf,IAAIlJ,GAAS,EACb,GAAIkJ,aAEG,KAAIpR,MAAMF,QAAQsR,GAMvB,MAAM,IAAI1O,UAAU,oCAAsC0O,EAAU,KALpE,OAASlJ,EAAQkJ,EAAQzP,QAAQ,CAE/BqP,EADYI,EAAQlJ,GAEtB,CAGF,CACF,CAOA,SAAS0I,EAAUM,EAAQpQ,GAIzB,IAHA,IAEIuQ,EAFAnJ,GAAS,IAGJA,EAAQ2H,EAAUlO,QACzB,GAAIkO,EAAU3H,GAAO,KAAOgJ,EAAQ,CAClCG,EAAQxB,EAAU3H,GAClB,KACF,CAEEmJ,GACE,EAAWA,EAAM,KAAO,EAAWvQ,KACrCA,EAAQ,KAAO,EAAMuQ,EAAM,GAAIvQ,IAEjCuQ,EAAM,GAAKvQ,GAGX+O,EAAU1L,KAAKnE,MAAMT,UAAUgF,MAAMtE,KAAKwB,WAE9C,CACF,EAzLAuO,EAAUsB,MA4LV,SAAeC,GACbvB,EAAUK,SACV,IAAIjH,EAAOoI,GAAMD,GACbpB,EAASH,EAAUG,OAEvB,GADAsB,GAAa,QAAStB,GAClBuB,GAAQvB,EAAQ,SAElB,OAAO,IAAIA,EAAOwB,OAAOvI,GAAOA,GAAMkI,QAIxC,OAAOnB,EAAOwB,OAAOvI,GAAOA,EAC9B,EAvMA4G,EAAUzE,UA0MV,SAAmBnI,EAAMmO,GACvBvB,EAAUK,SACV,IAAIjH,EAAOoI,GAAMD,GACbnB,EAAWJ,EAAUI,SAGzB,GAFAwB,GAAe,YAAaxB,GAC5ByB,GAAWzO,GACPsO,GAAQtB,EAAU,WAEpB,OAAO,IAAIA,EAAShN,EAAMgG,GAAM0I,UAIlC,OAAO1B,EAAShN,EAAMgG,EACxB,EArNA4G,EAAUZ,IA6NV,SAAahM,EAAMmO,EAAKtD,GACtB4D,GAAWzO,GACX4M,EAAUK,SACLpC,GAA2B,mBAARsD,IACtBtD,EAAWsD,EACXA,OAAM9J,GAER,IAAKwG,EACH,OAAO,IAAI8D,QAAQC,GASrB,SAASA,EAASC,EAASC,GAUzB,SAAS3D,EAAK3K,EAAOuO,EAAM/I,GACzB+I,EAAOA,GAAQ/O,EACXQ,EACFsO,EAAOtO,GACEqO,EACTA,EAAQE,GAGRlE,EAAS,KAAMkE,EAAM/I,EAEzB,CAlBA6F,EAAaG,IAAIhM,EAAMoO,GAAMD,GAAMhD,EAmBrC,CA5BAyD,EAAS,KAAM/D,EA6BjB,EAnQA+B,EAAUoC,QAsQV,SAAiBhP,EAAMgG,GAErB,IAAId,EAEA+J,EAKJ,OAJArC,EAAUZ,IAAIhM,EAAMgG,EAAMmF,GAC1B+D,GAAW,UAAW,MAAOD,GAGtB/J,EAOP,SAASiG,EAAK3K,EAAOuO,GACnBxE,EAAK/J,GACL0E,EAAS6J,EACTE,GAAW,CACb,CACF,EAzRArC,EAAUuC,QAgSV,SAAiBhB,EAAKtD,GAIpB,GAHA+B,EAAUK,SACVoB,GAAa,UAAWzB,EAAUG,QAClCyB,GAAe,UAAW5B,EAAUI,WAC/BnC,EACH,OAAO,IAAI8D,QAAQC,GASrB,SAASA,EAASC,EAASC,GACzB,IAAI9I,EAAOoI,GAAMD,GAuBjB,SAAShD,EAAK3K,EAAOwF,GACfxF,IAAUwF,EACZ8I,EAAOtO,GACEqO,EACTA,EAAQ7I,GAGR6E,EAAS,KAAM7E,EAEnB,CA/BA4G,EAAUZ,IAAIY,EAAUsB,MAAMlI,GAAOA,GAAM,SAAUxF,EAAOuO,EAAM/I,GAChE,IAAIxF,GAAUuO,GAAS/I,EAEhB,CAEL,IAAId,EAAS0H,EAAUzE,UAAU4G,EAAM/I,GACnCd,UAiLY,iBADIxH,EA9KYwH,IA+KJ,IAASxH,GA9KnCsI,EAAKtI,MAAQwH,EAEbc,EAAKd,OAASA,GAEhBiG,EAAK3K,EAAOwF,EACd,MAZEmF,EAAK3K,GAoLf,IAA8B9C,CAvKxB,GAiBF,CAzCAkR,EAAS,KAAM/D,EA0CjB,EAhVA+B,EAAUwC,YAmVV,SAAqBjB,GAEnB,IAAIc,EACJrC,EAAUK,SACVoB,GAAa,cAAezB,EAAUG,QACtCyB,GAAe,cAAe5B,EAAUI,UACxC,IAAIhH,EAAOoI,GAAMD,GAGjB,OAFAvB,EAAUuC,QAAQnJ,EAAMmF,GACxB+D,GAAW,cAAe,UAAWD,GAC9BjJ,EAMP,SAASmF,EAAK3K,GACZyO,GAAW,EACX1E,EAAK/J,EACP,CACF,EAnWOoM,EAIP,SAASA,IAGP,IAFA,IAAIyC,EAAc1D,IACd7G,GAAS,IACJA,EAAQ2H,EAAUlO,QACzB8Q,EAAY9C,IAAIxI,MAAMsL,GAAa,OAAmB5C,EAAU3H,KAGlE,OADAuK,EAAY/F,KAAK,KAAO,EAAM,CAAC,EAAGoD,IAC3B2C,CACT,CAwVF,CA9YqB1D,GAAOsB,SACxBH,GAAM,CAAC,EAAE1Q,eAsZb,SAASkS,GAAQ5Q,EAAOH,GACtB,MAAwB,mBAAVG,GAGdA,EAAMvB,YAcR,SAAcuB,GAEZ,IAAIV,EACJ,IAAKA,KAAOU,EACV,GAAIoP,GAAIjQ,KAAKa,EAAOV,GAClB,OAAO,EAGX,OAAO,CACT,CAlBEsS,CAAK5R,EAAMvB,YAAcoB,KAAQG,EAAMvB,UACzC,CA0BA,SAASkS,GAAa9Q,EAAMG,GAC1B,GAAqB,mBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,qBAE5C,CASA,SAASiR,GAAejR,EAAMG,GAC5B,GAAqB,mBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,uBAE5C,CASA,SAASsP,GAAetP,EAAMqO,GAC5B,GAAIA,EACF,MAAM,IAAIjL,MAAM,gBAAkBpD,EAAO,mHAE7C,CAQA,SAASkR,GAAWzO,GAGlB,IAAK,EAAWA,IAA8B,iBAAdA,EAAK0B,KACnC,MAAM,IAAIpC,UAAU,uBAAyBU,EAAO,IAGxD,CAUA,SAASkP,GAAW3R,EAAMgS,EAAWN,GACnC,IAAKA,EACH,MAAM,IAAItO,MAAM,IAAMpD,EAAO,0BAA4BgS,EAAY,YAEzE,CAMA,SAASnB,GAAM1Q,GACb,OAOF,SAAyBA,GACvB,OAAO6F,QAAQ7F,GAA0B,iBAAVA,GAAsB,YAAaA,GAAS,aAAcA,EAC3F,CATS8R,CAAgB9R,GAASA,EAAQ,IAAI,GAAMA,EACpD,CChhBA,IAAI+R,GAAe,CAAC,EAkCpB,SAASC,GAAIhS,EAAOiS,EAAiBC,GACnC,GA+CF,SAAclS,GACZ,OAAO6F,QAAQ7F,GAA0B,iBAAVA,EACjC,CAjDMsC,CAAKtC,GAAQ,CACf,GAAI,UAAWA,EACb,MAAsB,SAAfA,EAAMgE,MAAoBkO,EAAmBlS,EAAMA,MAAX,GAEjD,GAAIiS,GAAmB,QAASjS,GAASA,EAAMmS,IAC7C,OAAOnS,EAAMmS,IAEf,GAAI,aAAcnS,EAChB,OAAO,GAAIA,EAAMoS,SAAUH,EAAiBC,EAEhD,CACA,OAAIhT,MAAMF,QAAQgB,GACT,GAAIA,EAAOiS,EAAiBC,GAE9B,EACT,CAcA,SAAS,GAAI3D,EAAQ0D,EAAiBC,GAIpC,IAFA,IAAI1K,EAAS,GACTJ,GAAS,IACJA,EAAQmH,EAAO1N,QACtB2G,EAAOJ,GAAS4K,GAAIzD,EAAOnH,GAAQ6K,EAAiBC,GAEtD,OAAO1K,EAAOkC,KAAK,GACrB,CC7DO,SAAS2I,GAAOC,EAAMlQ,EAAOmQ,EAAQC,GAC1C,IAGIlF,EAHA5K,EAAM4P,EAAKzR,OACX4R,EAAa,EAajB,GAPErQ,EADEA,EAAQ,GACDA,EAAQM,EAAM,EAAIA,EAAMN,EAEzBA,EAAQM,EAAMA,EAAMN,EAE9BmQ,EAASA,EAAS,EAAIA,EAAS,EAG3BC,EAAM3R,OAAS,KACjByM,EAAapO,MAAMwT,KAAKF,IACbG,QAAQvQ,EAAOmQ,GAE1BD,EAAKD,OAAOhM,MAAMiM,GAAM,OAAmBhF,SAM3C,IAHIiF,GAAQD,EAAKD,OAAOjQ,EAAOmQ,GAGxBE,EAAaD,EAAM3R,SACxByM,EAAakF,EAAM/O,MAAMgP,EAAYA,EAAa,MACvCE,QAAQvQ,EAAO,GAE1BkQ,EAAKD,OAAOhM,MAAMiM,GAAM,OAAmBhF,IAC3CmF,GAAc,IACdrQ,GAAS,GAGf,CAkBO,SAASiB,GAAKiP,EAAME,GACzB,OAAIF,EAAKzR,OAAS,GAChBwR,GAAOC,EAAMA,EAAKzR,OAAQ,EAAG2R,GACtBF,GAEFE,CACT,CCzEA,IAAI,GAAiB,CAAC,EAAE9T,eA6BxB,SAASkU,GAAgBC,EAAKC,GAE5B,IAAIC,EACJ,IAAKA,KAAQD,EAAW,CACtB,IAEIE,GAFQ,GAAe7T,KAAK0T,EAAKE,GAAQF,EAAIE,QAAQpM,KAEpCkM,EAAIE,GAAQ,CAAC,GAE9BE,EAAQH,EAAUC,GAElBtJ,OAAO,EACX,GAAIwJ,EACF,IAAKxJ,KAAQwJ,EAAO,CACb,GAAe9T,KAAK6T,EAAMvJ,KAAOuJ,EAAKvJ,GAAQ,IACnD,IAAIzJ,EAAQiT,EAAMxJ,GAClByJ,GAEAF,EAAKvJ,GAAOvK,MAAMF,QAAQgB,GAASA,EAAQA,EAAQ,CAACA,GAAS,GAC/D,CAEJ,CACF,CAUA,SAASkT,GAAWC,EAAUb,GAI5B,IAHA,IAAIlL,GAAS,EAETgM,EAAS,KACJhM,EAAQkL,EAAKzR,SAGC,UAApByR,EAAKlL,GAAO8I,IAAkBiD,EAAWC,GAAQ/P,KAAKiP,EAAKlL,IAE9DiL,GAAOc,EAAU,EAAG,EAAGC,EACzB,CCpEO,ICaIC,GAAaC,GAAW,YAcxBC,GAAoBD,GAAW,cAuB/BE,GAAaF,GAAW,uBAa5B,SAASG,GAAahK,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,EAEnC,CAaO,IAAIiK,GAAaJ,GAAW,MAoBxBK,GAAgBL,GAAW,cAe3BM,GAAmBN,GAAW,kBAiBlC,SAASO,GAAmBpK,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,CAClC,CAWO,SAASqK,GAA0BrK,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,EACvC,CAiBO,SAASsK,GAActK,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,CACvC,CAuBO,IAAIuK,GAAqBV,GD/LK,wwCCqN1BW,GAAoBX,GAAW,MAQ1C,SAASA,GAAWY,GAClB,OAUA,SAAezK,GACb,OAAgB,OAATA,GAAiByK,EAAMC,KAAKtD,OAAOuD,aAAa3K,GACzD,CACF,CC3MO,SAAS4K,GAAaC,EAASC,EAAIvQ,EAAMwQ,GAC9C,IAAIC,EAAQD,EAAMA,EAAM,EAAI7E,OAAOC,kBAC/B8E,EAAO,EACX,OAGA,SAAejL,GACb,GAAIsK,GAActK,GAEhB,OADA6K,EAAQK,MAAM3Q,GACP4Q,EAAOnL,GAEhB,OAAO8K,EAAG9K,EACZ,EAGA,SAASmL,EAAOnL,GACd,OAAIsK,GAActK,IAASiL,IAASD,GAClCH,EAAQO,QAAQpL,GACTmL,IAETN,EAAQQ,KAAK9Q,GACNuQ,EAAG9K,GACZ,CACF,CCtDO,IAAI7G,GAAU,CACnBmS,SAOF,SAA2BT,GACzB,IAEIU,EAFAC,EAAeX,EAAQY,QAAQzS,KAAK0S,OAAOjC,WAAWkC,gBAM1D,SAAoC3L,GAClC,GAAa,OAATA,EAEF,YADA6K,EAAQO,QAAQpL,GAMlB,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNT,GAAaC,EAASW,EAAc,aAC7C,IAGA,SAA0BxL,GAExB,OADA6K,EAAQK,MAAM,aACPU,EAAU5L,EACnB,IAlBA,OAAOwL,EAqBP,SAASI,EAAU5L,GACjB,IAAI6L,EAAQhB,EAAQK,MAAM,YAAa,CACrCY,YAAa,OACbP,SAAUA,IAMZ,OAJIA,IACFA,EAAStG,KAAO4G,GAElBN,EAAWM,EACJ1J,EAAKnC,EACd,CAGA,SAASmC,EAAKnC,GACZ,OAAa,OAATA,GACF6K,EAAQQ,KAAK,aACbR,EAAQQ,KAAK,kBACbR,EAAQO,QAAQpL,IAGdoK,GAAmBpK,IACrB6K,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,aACNO,IAITf,EAAQO,QAAQpL,GACTmC,EACT,CACF,GCtDO,IAAI,GAAW,CACpBmJ,SAYF,SAA4BT,GAC1B,IAKIkB,EAEAC,EAEAC,EATA1Q,EAAOvC,KAEP0F,EAAQ,GACRwN,EAAY,EAOhB,OAAOvT,EAGP,SAASA,EAAMqH,GAWb,GAAIkM,EAAYxN,EAAMtH,OAAQ,CAC5B,IAAI+U,EAAOzN,EAAMwN,GAEjB,OADA3Q,EAAK6Q,eAAiBD,EAAK,GACpBtB,EAAQY,QAAQU,EAAK,GAAGE,aAAcC,EAAkBC,EAAxD1B,CAA4E7K,EACrF,CAGA,OAAOuM,EAAmBvM,EAC5B,CAGA,SAASsM,EAAiBtM,GAMxB,GALAkM,IAKI3Q,EAAK6Q,eAAeI,WAAY,CAClCjR,EAAK6Q,eAAeI,gBAAatP,EAC7B6O,GACFU,IAWF,IANA,IAGI/O,EAHAgP,EAAmBnR,EAAKoR,OAAOvV,OAC/BwV,EAAkBF,EAKfE,KACL,GAAwC,SAApCrR,EAAKoR,OAAOC,GAAiB,IAA0D,cAAzCrR,EAAKoR,OAAOC,GAAiB,GAAGrS,KAAsB,CACtGmD,EAAQnC,EAAKoR,OAAOC,GAAiB,GAAG3T,IACxC,KACF,CAEF4T,EAAeX,GAIf,IADA,IAAIvO,EAAQ+O,EACL/O,EAAQpC,EAAKoR,OAAOvV,QACzBmE,EAAKoR,OAAOhP,GAAO,GAAG1E,IAAMlE,OAAOyR,OAAO,CAAC,EAAG9I,GAC9CC,IAQF,OAJAiL,GAAOrN,EAAKoR,OAAQC,EAAkB,EAAG,EAAGrR,EAAKoR,OAAO3S,MAAM0S,IAG9DnR,EAAKoR,OAAOvV,OAASuG,EACd4O,EAAmBvM,EAC5B,CACA,OAAOrH,EAAMqH,EACf,CAGA,SAASuM,EAAmBvM,GAM1B,GAAIkM,IAAcxN,EAAMtH,OAAQ,CAI9B,IAAK2U,EACH,OAAOe,EAAkB9M,GAM3B,GAAI+L,EAAUgB,kBAAoBhB,EAAUgB,iBAAiBC,SAC3D,OAAOC,EAAUjN,GAQnBzE,EAAK2R,UAAY9Q,QAAQ2P,EAAUgB,mBAAqBhB,EAAUoB,8BACpE,CAIA,OADA5R,EAAK6Q,eAAiB,CAAC,EAChBvB,EAAQuC,MAAMC,GAAoBC,EAAsBC,EAAxD1C,CAA+E7K,EACxF,CAGA,SAASsN,EAAqBtN,GAG5B,OAFI+L,GAAWU,IACfI,EAAeX,GACRY,EAAkB9M,EAC3B,CAGA,SAASuN,EAAsBvN,GAG7B,OAFAzE,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,MAAQsT,IAAcxN,EAAMtH,OACxD6U,EAAkB1Q,EAAKkS,MAAMC,OACtBT,EAAUjN,EACnB,CAGA,SAAS8M,EAAkB9M,GAGzB,OADAzE,EAAK6Q,eAAiB,CAAC,EAChBvB,EAAQY,QAAQ4B,GAAoBM,EAAmBV,EAAvDpC,CAAkE7K,EAC3E,CAGA,SAAS2N,EAAkB3N,GAIzB,OAHAkM,IACAxN,EAAM9E,KAAK,CAAC2B,EAAKwR,iBAAkBxR,EAAK6Q,iBAEjCU,EAAkB9M,EAC3B,CAGA,SAASiN,EAAUjN,GACjB,OAAa,OAATA,GACE+L,GAAWU,IACfI,EAAe,QACfhC,EAAQO,QAAQpL,KAGlB+L,EAAYA,GAAaxQ,EAAKmQ,OAAOkC,KAAKrS,EAAKkS,OAC/C5C,EAAQK,MAAM,YAAa,CACzBY,YAAa,OACbP,SAAUS,EACV6B,WAAY9B,IAEP+B,EAAa9N,GACtB,CAGA,SAAS8N,EAAa9N,GACpB,OAAa,OAATA,GACF+N,EAAalD,EAAQQ,KAAK,cAAc,GACxCwB,EAAe,QACfhC,EAAQO,QAAQpL,IAGdoK,GAAmBpK,IACrB6K,EAAQO,QAAQpL,GAChB+N,EAAalD,EAAQQ,KAAK,cAE1Ba,EAAY,EACZ3Q,EAAK2R,eAAYhQ,EACVvE,IAETkS,EAAQO,QAAQpL,GACT8N,EACT,CAOA,SAASC,EAAalC,EAAOmC,GAC3B,IAAIC,EAAS1S,EAAK2S,YAAYrC,GAyC9B,GAxCImC,GAAKC,EAAOrU,KAAK,MACrBiS,EAAMN,SAAWS,EACbA,IAAYA,EAAW/G,KAAO4G,GAClCG,EAAaH,EACbE,EAAUoC,WAAWtC,EAAMlT,OAC3BoT,EAAUqC,MAAMH,GAmCZ1S,EAAKmQ,OAAO8B,KAAK3B,EAAMlT,MAAMC,MAAO,CAEtC,IADA,IAAI+E,EAAQoO,EAAUY,OAAOvV,OACtBuG,KACL,GAEAoO,EAAUY,OAAOhP,GAAO,GAAGhF,MAAM+U,OAASzB,KAEzCF,EAAUY,OAAOhP,GAAO,GAAG1E,KAE5B8S,EAAUY,OAAOhP,GAAO,GAAG1E,IAAIyU,OAASzB,GAGtC,OAcJ,IARA,IAGIoC,EAEA3Q,EALAgP,EAAmBnR,EAAKoR,OAAOvV,OAC/BwV,EAAkBF,EAOfE,KACL,GAAwC,SAApCrR,EAAKoR,OAAOC,GAAiB,IAA0D,cAAzCrR,EAAKoR,OAAOC,GAAiB,GAAGrS,KAAsB,CACtG,GAAI8T,EAAM,CACR3Q,EAAQnC,EAAKoR,OAAOC,GAAiB,GAAG3T,IACxC,KACF,CACAoV,GAAO,CACT,CAMF,IAJAxB,EAAeX,GAGfvO,EAAQ+O,EACD/O,EAAQpC,EAAKoR,OAAOvV,QACzBmE,EAAKoR,OAAOhP,GAAO,GAAG1E,IAAMlE,OAAOyR,OAAO,CAAC,EAAG9I,GAC9CC,IAIFiL,GAAOrN,EAAKoR,OAAQC,EAAkB,EAAG,EAAGrR,EAAKoR,OAAO3S,MAAM0S,IAG9DnR,EAAKoR,OAAOvV,OAASuG,CACvB,CACF,CAMA,SAASkP,EAAe5B,GAItB,IAHA,IAAItN,EAAQe,EAAMtH,OAGXuG,KAAUsN,GAAM,CACrB,IAAInE,EAAQpI,EAAMf,GAClBpC,EAAK6Q,eAAiBtF,EAAM,GAC5BA,EAAM,GAAGuE,KAAK3V,KAAK6F,EAAMsP,EAC3B,CACAnM,EAAMtH,OAAS6T,CACjB,CACA,SAASwB,IACPV,EAAUqC,MAAM,CAAC,OACjBpC,OAAa9O,EACb6O,OAAY7O,EACZ3B,EAAK6Q,eAAeI,gBAAatP,CACnC,CACF,GAtTImQ,GAAqB,CACvB/B,SA2TF,SAA2BT,EAASC,EAAIwD,GAGtC,OAAO1D,GAAaC,EAASA,EAAQY,QAAQzS,KAAK0S,OAAOjC,WAAW8E,SAAUzD,EAAIwD,GAAM,aAActV,KAAK0S,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EACnL,GC/UO,IAAIwR,GAAY,CACrBpD,SAQF,SAA2BT,EAASC,EAAIwD,GACtC,OAgBA,SAAetO,GACb,OAAOsK,GAActK,GAAQ4K,GAAaC,EAAS8D,EAAO,aAA7B/D,CAA2C5K,GAAQ2O,EAAM3O,EACxF,EAgBA,SAAS2O,EAAM3O,GACb,OAAgB,OAATA,GAAiBoK,GAAmBpK,GAAQ8K,EAAG9K,GAAQsO,EAAItO,EACpE,CACF,EA7CE4O,SAAS,GCWJ,SAAS,GAAO/F,EAAMlQ,EAAOmQ,EAAQC,GAC1C,IAGIlF,EAHA5K,EAAM4P,EAAKzR,OACX4R,EAAa,EAajB,GAPErQ,EADEA,EAAQ,GACDA,EAAQM,EAAM,EAAIA,EAAMN,EAEzBA,EAAQM,EAAMA,EAAMN,EAE9BmQ,EAASA,EAAS,EAAIA,EAAS,EAG3BC,EAAM3R,OAAS,KACjByM,EAAapO,MAAMwT,KAAKF,IACbG,QAAQvQ,EAAOmQ,GAE1BD,EAAKD,OAAOhM,MAAMiM,GAAM,OAAmBhF,SAM3C,IAHIiF,GAAQD,EAAKD,OAAOjQ,EAAOmQ,GAGxBE,EAAaD,EAAM3R,SACxByM,EAAakF,EAAM/O,MAAMgP,EAAYA,EAAa,MACvCE,QAAQvQ,EAAO,GAE1BkQ,EAAKD,OAAOhM,MAAMiM,GAAM,OAAmBhF,IAC3CmF,GAAc,IACdrQ,GAAS,GAGf,CC1CO,SAASkW,GAAYlC,GAkB1B,IAhBA,IAGImC,EAEAC,EAEAC,EAEAC,EAEApL,EAEAqL,EAEAC,EAfAC,EAAQ,CAAC,EACTzR,GAAS,IAeJA,EAAQgP,EAAOvV,QAAQ,CAC9B,KAAOuG,KAASyR,GACdzR,EAAQyR,EAAMzR,GAMhB,GAJAmR,EAAQnC,EAAOhP,GAIXA,GAA2B,cAAlBmR,EAAM,GAAGvU,MAAsD,mBAA9BoS,EAAOhP,EAAQ,GAAG,GAAGpD,QAEjEyU,EAAa,IADbE,EAAYJ,EAAM,GAAGjB,WAAWlB,QAELvV,QAA4C,oBAAlC8X,EAAUF,GAAY,GAAGzU,OAC5DyU,GAAc,GAEZA,EAAaE,EAAU9X,QAA4C,YAAlC8X,EAAUF,GAAY,GAAGzU,MAC5D,OAASyU,EAAaE,EAAU9X,QACQ,YAAlC8X,EAAUF,GAAY,GAAGzU,MAGS,cAAlC2U,EAAUF,GAAY,GAAGzU,OAC3B2U,EAAUF,GAAY,GAAGK,6BAA8B,EACvDL,KAOR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGhD,cACX/W,OAAOyR,OAAO4I,EAAOE,GAAW3C,EAAQhP,IACxCA,EAAQyR,EAAMzR,GACdwR,GAAO,QAIN,GAAIL,EAAM,GAAGS,WAAY,CAG5B,IAFAP,EAAarR,EACboR,OAAY7R,EACL8R,MAEsB,gBAD3BC,EAAatC,EAAOqC,IACL,GAAGzU,MAAgD,oBAAvB0U,EAAW,GAAG1U,OACjC,UAAlB0U,EAAW,KACTF,IACFpC,EAAOoC,GAAW,GAAGxU,KAAO,mBAE9B0U,EAAW,GAAG1U,KAAO,aACrBwU,EAAYC,GAMdD,IAEFD,EAAM,GAAG7V,IAAMlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOoC,GAAW,GAAGpW,QAGtDkL,EAAa8I,EAAO3S,MAAM+U,EAAWpR,IAC1BuL,QAAQ4F,GACnB,GAAOnC,EAAQoC,EAAWpR,EAAQoR,EAAY,EAAGlL,GAErD,CACF,CACA,OAAQsL,CACV,CASA,SAASG,GAAW3C,EAAQ6C,GAyB1B,IAxBA,IAYIvB,EAEA1C,EAdAM,EAAQc,EAAO6C,GAAY,GAC3BC,EAAU9C,EAAO6C,GAAY,GAC7BE,EAAgBF,EAAa,EAE7BG,EAAiB,GACjBC,EAAY/D,EAAMgC,YAAc4B,EAAQ/D,OAAOG,EAAMC,aAAaD,EAAMlT,OACxEkX,EAAcD,EAAUjD,OAExByC,EAAQ,GAERU,EAAO,CAAC,EAKRnS,GAAS,EAEToS,EAAUlE,EACVmE,EAAS,EACTrX,EAAQ,EACRsX,EAAS,CAACtX,GAIPoX,GAAS,CAEd,KAAOpD,IAAS+C,GAAe,KAAOK,IAGtCJ,EAAe/V,KAAK8V,GACfK,EAAQlC,aACXI,EAASwB,EAAQvB,YAAY6B,GACxBA,EAAQ9K,MACXgJ,EAAOrU,KAAK,MAEV2R,GACFqE,EAAUzB,WAAW4B,EAAQpX,OAE3BoX,EAAQV,8BACVO,EAAUM,oCAAqC,GAEjDN,EAAUxB,MAAMH,GACZ8B,EAAQV,8BACVO,EAAUM,wCAAqChT,IAKnDqO,EAAWwE,EACXA,EAAUA,EAAQ9K,IACpB,CAKA,IADA8K,EAAUlE,IACDlO,EAAQkS,EAAYzY,QAGD,SAA1ByY,EAAYlS,GAAO,IAA+C,UAA9BkS,EAAYlS,EAAQ,GAAG,IAAkBkS,EAAYlS,GAAO,GAAGpD,OAASsV,EAAYlS,EAAQ,GAAG,GAAGpD,MAAQsV,EAAYlS,GAAO,GAAGhF,MAAMC,OAASiX,EAAYlS,GAAO,GAAG1E,IAAIL,OAC3MD,EAAQgF,EAAQ,EAChBsS,EAAOrW,KAAKjB,GAEZoX,EAAQlC,gBAAa3Q,EACrB6S,EAAQxE,cAAWrO,EACnB6S,EAAUA,EAAQ9K,MAqBtB,IAhBA2K,EAAUjD,OAAS,GAKfoD,GAEFA,EAAQlC,gBAAa3Q,EACrB6S,EAAQxE,cAAWrO,GAEnB+S,EAAOjL,MAKTrH,EAAQsS,EAAO7Y,OACRuG,KAAS,CACd,IAAI3D,EAAQ6V,EAAY7V,MAAMiW,EAAOtS,GAAQsS,EAAOtS,EAAQ,IACxDwS,EAASR,EAAe3K,MAC5BoK,EAAMlG,QAAQ,CAACiH,EAAQA,EAASnW,EAAM5C,OAAS,IAC/C,GAAOuV,EAAQwD,EAAQ,EAAGnW,EAC5B,CAEA,IADA2D,GAAS,IACAA,EAAQyR,EAAMhY,QACrB0Y,EAAKE,EAASZ,EAAMzR,GAAO,IAAMqS,EAASZ,EAAMzR,GAAO,GACvDqS,GAAUZ,EAAMzR,GAAO,GAAKyR,EAAMzR,GAAO,GAAK,EAEhD,OAAOmS,CACT,CC7LO,IAAI,GAAU,CACnBxE,SAyBF,SAAyBT,EAASC,GAEhC,IAAIS,EACJ,OAYA,SAAoBvL,GAKlB,OAJA6K,EAAQK,MAAM,WACdK,EAAWV,EAAQK,MAAM,eAAgB,CACvCY,YAAa,YAERsE,EAAYpQ,EACrB,EAYA,SAASoQ,EAAYpQ,GACnB,OAAa,OAATA,EACKqQ,EAAWrQ,GAKhBoK,GAAmBpK,GACd6K,EAAQuC,MAAMkD,GAAuBC,EAAiBF,EAAtDxF,CAAkE7K,IAI3E6K,EAAQO,QAAQpL,GACToQ,EACT,CAOA,SAASC,EAAWrQ,GAGlB,OAFA6K,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,WACNP,EAAG9K,EACZ,CAOA,SAASuQ,EAAgBvQ,GAQvB,OAPA6K,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,gBACbE,EAAStG,KAAO4F,EAAQK,MAAM,eAAgB,CAC5CY,YAAa,UACbP,SAAUA,IAEZA,EAAWA,EAAStG,KACbmL,CACT,CACF,EAnGE1I,QAeF,SAAwBiF,GAEtB,OADAkC,GAAYlC,GACLA,CACT,GAdI2D,GAAwB,CAC1BhF,SAoGF,SAA8BT,EAASC,EAAIwD,GACzC,IAAI/S,EAAOvC,KACX,OAOA,SAAwBgH,GAKtB,OAJA6K,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNT,GAAaC,EAAS2F,EAAU,aACzC,EAOA,SAASA,EAASxQ,GAChB,GAAa,OAATA,GAAiBoK,GAAmBpK,GACtC,OAAOsO,EAAItO,GAKb,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAC5C,OAAKmE,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,iBAAmBgO,GAAyB,eAAjBA,EAAK,GAAGlW,MAAyBkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,QAAU,EACrJ0T,EAAG9K,GAEL6K,EAAQqC,UAAU3R,EAAKmQ,OAAOjC,WAAWmE,KAAMU,EAAKxD,EAApDD,CAAwD7K,EACjE,CACF,EAtIE4O,SAAS,GCbJ,IAAIhB,GAAO,CAChBtC,SAOF,SAAwBT,GACtB,IAAItP,EAAOvC,KACP2X,EAAU9F,EAAQY,QAEtBiD,IAMA,SAAuB1O,GACrB,GAAa,OAATA,EAEF,YADA6K,EAAQO,QAAQpL,GAOlB,OAJA6K,EAAQK,MAAM,mBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,mBACb9P,EAAKwR,sBAAmB7P,EACjByT,CACT,GAdA9F,EAAQY,QAAQzS,KAAK0S,OAAOjC,WAAWmH,YAAaC,EAAgBjG,GAAaC,EAASA,EAAQY,QAAQzS,KAAK0S,OAAOjC,WAAWmE,KAAMiD,EAAgBhG,EAAQY,QAAQ,GAASoF,IAAkB,gBAClM,OAAOF,EAgBP,SAASE,EAAe7Q,GACtB,GAAa,OAATA,EAQJ,OAJA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACb9P,EAAKwR,sBAAmB7P,EACjByT,EAPL9F,EAAQO,QAAQpL,EAQpB,CACF,GC5CO,IAAI8Q,GAAW,CACpBC,WAAYC,MAEHC,GAASC,GAAkB,UAC3B,GAAOA,GAAkB,QAMpC,SAASA,GAAkBC,GACzB,MAAO,CACL7F,SAQF,SAAwBT,GACtB,IAAItP,EAAOvC,KACPyQ,EAAazQ,KAAK0S,OAAOjC,WAAW0H,GACpCC,EAAOvG,EAAQY,QAAQhC,EAAY9Q,EAAO0Y,GAC9C,OAAO1Y,EAGP,SAASA,EAAMqH,GACb,OAAOsR,EAAQtR,GAAQoR,EAAKpR,GAAQqR,EAAQrR,EAC9C,CAGA,SAASqR,EAAQrR,GACf,GAAa,OAATA,EAMJ,OAFA6K,EAAQK,MAAM,QACdL,EAAQO,QAAQpL,GACTmC,EALL0I,EAAQO,QAAQpL,EAMpB,CAGA,SAASmC,EAAKnC,GACZ,OAAIsR,EAAQtR,IACV6K,EAAQQ,KAAK,QACN+F,EAAKpR,KAId6K,EAAQO,QAAQpL,GACTmC,EACT,CAMA,SAASmP,EAAQtR,GACf,GAAa,OAATA,EACF,OAAO,EAET,IAAI6I,EAAOY,EAAWzJ,GAClBrC,GAAS,EACb,GAAIkL,EAGF,OAASlL,EAAQkL,EAAKzR,QAAQ,CAC5B,IAAI+U,EAAOtD,EAAKlL,GAChB,IAAKwO,EAAKZ,UAAYY,EAAKZ,SAAS7V,KAAK6F,EAAMA,EAAKgQ,UAClD,OAAO,CAEX,CAEF,OAAO,CACT,CACF,EA/DEwF,WAAYC,GAAyB,SAAVG,EAAmBI,QAAyBrU,GAgE3E,CAMA,SAAS8T,GAAeQ,GACtB,OAGA,SAAwB7E,EAAQ8C,GAC9B,IAEIvE,EAFAvN,GAAS,EAMb,OAASA,GAASgP,EAAOvV,aACT8F,IAAVgO,EACEyB,EAAOhP,IAAoC,SAA1BgP,EAAOhP,GAAO,GAAGpD,OACpC2Q,EAAQvN,EACRA,KAEQgP,EAAOhP,IAAoC,SAA1BgP,EAAOhP,GAAO,GAAGpD,OAExCoD,IAAUuN,EAAQ,IACpByB,EAAOzB,GAAO,GAAGjS,IAAM0T,EAAOhP,EAAQ,GAAG,GAAG1E,IAC5C0T,EAAO/D,OAAOsC,EAAQ,EAAGvN,EAAQuN,EAAQ,GACzCvN,EAAQuN,EAAQ,GAElBA,OAAQhO,GAGZ,OAAOsU,EAAgBA,EAAc7E,EAAQ8C,GAAW9C,CAC1D,CACF,CAaA,SAAS4E,GAAuB5E,EAAQ8C,GAGtC,IAFA,IAAID,EAAa,IAERA,GAAc7C,EAAOvV,QAC5B,IAAKoY,IAAe7C,EAAOvV,QAAyC,eAA/BuV,EAAO6C,GAAY,GAAGjV,OAA6D,SAAnCoS,EAAO6C,EAAa,GAAG,GAAGjV,KAAiB,CAQ9H,IAPA,IAAI4H,EAAOwK,EAAO6C,EAAa,GAAG,GAC9BiC,EAAShC,EAAQvB,YAAY/L,GAC7BxE,EAAQ8T,EAAOra,OACfsa,GAAe,EACfzG,EAAO,EAEP0G,OAAO,EACJhU,KAAS,CACd,IAAIiU,EAAQH,EAAO9T,GACnB,GAAqB,iBAAViU,EAAoB,CAE7B,IADAF,EAAcE,EAAMxa,OACyB,KAAtCwa,EAAMrS,WAAWmS,EAAc,IACpCzG,IACAyG,IAEF,GAAIA,EAAa,MACjBA,GAAe,CACjB,MAEK,IAAe,IAAXE,EACPD,GAAO,EACP1G,SACK,IAAe,IAAX2G,EAEJ,CAELjU,IACA,KACF,CACF,CACA,GAAIsN,EAAM,CACR,IAAIY,EAAQ,CACVtR,KAAMiV,IAAe7C,EAAOvV,QAAUua,GAAQ1G,EAAO,EAAI,aAAe,oBACxEtS,MAAO,CACLC,KAAMuJ,EAAKlJ,IAAIL,KACfP,OAAQ8J,EAAKlJ,IAAIZ,OAAS4S,EAC1ByC,OAAQvL,EAAKlJ,IAAIyU,OAASzC,EAC1B4G,OAAQ1P,EAAKxJ,MAAMkZ,OAASlU,EAC5BmU,aAAcnU,EAAQ+T,EAAcvP,EAAKxJ,MAAMmZ,aAAeJ,GAEhEzY,IAAKlE,OAAOyR,OAAO,CAAC,EAAGrE,EAAKlJ,MAE9BkJ,EAAKlJ,IAAMlE,OAAOyR,OAAO,CAAC,EAAGqF,EAAMlT,OAC/BwJ,EAAKxJ,MAAM+U,SAAWvL,EAAKlJ,IAAIyU,OACjC3Y,OAAOyR,OAAOrE,EAAM0J,IAEpBc,EAAO/D,OAAO4G,EAAY,EAAG,CAAC,QAAS3D,EAAO4D,GAAU,CAAC,OAAQ5D,EAAO4D,IACxED,GAAc,EAElB,CACAA,GACF,CAEF,OAAO7C,CACT,CC/KO,SAASoE,GAAWtH,EAAYkD,EAAQ8C,GAI7C,IAFA,IAAI9L,EAAS,GACThG,GAAS,IACJA,EAAQ8L,EAAWrS,QAAQ,CAClC,IAAIsQ,EAAU+B,EAAW9L,GAAOoT,WAC5BrJ,IAAY/D,EAAOlB,SAASiF,KAC9BiF,EAASjF,EAAQiF,EAAQ8C,GACzB9L,EAAO/J,KAAK8N,GAEhB,CACA,OAAOiF,CACT,CCkBO,SAASoF,GAAgBrG,EAAQsG,EAAY/I,GAElD,IAAIvL,EAAQ3I,OAAOyR,OAAOyC,EAAOlU,OAAOyR,OAAO,CAAC,EAAGyC,GAAQ,CACzDrQ,KAAM,EACNP,OAAQ,EACRqV,OAAQ,GACP,CACDmE,OAAQ,EACRC,cAAe,IAGbG,EAAc,CAAC,EAEfC,EAAuB,GAEvBT,EAAS,GAET/S,EAAQ,GASRmM,EAAU,CACZO,QAoJF,SAAiBpL,GACXoK,GAAmBpK,IACrBtC,EAAM9E,OACN8E,EAAMrF,OAAS,EACfqF,EAAMgQ,SAAoB,IAAV1N,EAAc,EAAI,EAClCmS,MACmB,IAAVnS,IACTtC,EAAMrF,SACNqF,EAAMgQ,UAIJhQ,EAAMoU,aAAe,EACvBpU,EAAMmU,UAENnU,EAAMoU,eAKFpU,EAAMoU,eAAiBL,EAAO/T,EAAMmU,QAAQza,SAC9CsG,EAAMoU,cAAgB,EACtBpU,EAAMmU,WAKVpC,EAAQlE,SAAWvL,GAGR,CACb,EAlLEkL,MAqLF,SAAe3Q,EAAM6X,GAGnB,IAAIvG,EAAQuG,GAAU,CAAC,EAKvB,OAJAvG,EAAMtR,KAAOA,EACbsR,EAAMlT,MAAQ8U,IACdgC,EAAQ9C,OAAO/S,KAAK,CAAC,QAASiS,EAAO4D,IACrC/Q,EAAM9E,KAAKiS,GACJA,CACT,EA7LER,KAgMF,SAAc9Q,GACZ,IAAIsR,EAAQnN,EAAMsG,MAGlB,OAFA6G,EAAM5S,IAAMwU,IACZgC,EAAQ9C,OAAO/S,KAAK,CAAC,OAAQiS,EAAO4D,IAC7B5D,CACT,EApMEJ,QAAS4G,GA2MX,SAA+BpW,EAAWqW,GACxCC,EAAUtW,EAAWqW,EAAKrJ,KAC5B,IA5MEmE,MAAOiF,EAAiBG,GACxBtF,UAAWmF,EAAiBG,EAAmB,CAC7CtF,WAAW,KASXuC,EAAU,CACZlE,SAAU,KACVvL,KAAM,KACNoM,eAAgB,CAAC,EACjBO,OAAQ,GACRjB,OAAQA,EACRwC,YAAaA,EACbwC,eA6CF,SAAwB7E,EAAO4G,GAC7B,OAoXJ,SAAyBhB,EAAQgB,GAC/B,IAIIC,EAJA/U,GAAS,EAETI,EAAS,GAGb,OAASJ,EAAQ8T,EAAOra,QAAQ,CAC9B,IAAIwa,EAAQH,EAAO9T,GAEfpH,OAAQ,EACZ,GAAqB,iBAAVqb,EACTrb,EAAQqb,OACH,OAAQA,GACb,KAAM,EAEFrb,EAAQ,KACR,MAEJ,KAAM,EAEFA,EAAQ,KACR,MAEJ,KAAM,EAEFA,EAAQ,OACR,MAEJ,KAAM,EAEFA,EAAQkc,EAAa,IAAM,KAC3B,MAEJ,KAAM,EAEF,IAAKA,GAAcC,EAAO,SAC1Bnc,EAAQ,IACR,MAEJ,QAGIA,EAAQ6Q,OAAOuD,aAAaiH,GAGlCc,GAAmB,IAAXd,EACR7T,EAAOnE,KAAKrD,EACd,CACA,OAAOwH,EAAOkC,KAAK,GACrB,CAraW0S,CAAgBzE,EAAYrC,GAAQ4G,EAC7C,EA9CEhF,IAAKA,EACLU,WAuEF,SAAoB5X,GAClB0b,EAAY1b,EAAMqC,MAAQrC,EAAM8B,OAChC8Z,GACF,EAzEE/D,MAsBF,SAAepU,GAKb,GAJAyX,EAAS7X,GAAK6X,EAAQzX,GACtB4Y,IAGkC,OAA9BnB,EAAOA,EAAOra,OAAS,GACzB,MAAO,GAMT,OAJAmb,EAAUP,EAAY,GAGtBvC,EAAQ9C,OAASoE,GAAWmB,EAAsBzC,EAAQ9C,OAAQ8C,GAC3DA,EAAQ9C,MACjB,GA3BIkG,EAAQb,EAAW1G,SAAS5V,KAAK+Z,EAAS5E,GAW9C,OAHImH,EAAWjB,YACbmB,EAAqBtY,KAAKoY,GAErBvC,EA4BP,SAASvB,EAAYrC,GACnB,OA4UJ,SAAqB4F,EAAQ5F,GAC3B,IAKIiH,EALAC,EAAalH,EAAMlT,MAAMkZ,OACzBmB,EAAmBnH,EAAMlT,MAAMmZ,aAC/BmB,EAAWpH,EAAM5S,IAAI4Y,OACrBqB,EAAiBrH,EAAM5S,IAAI6Y,aAG/B,GAAIiB,IAAeE,EAEjBH,EAAO,CAACrB,EAAOsB,GAAY/Y,MAAMgZ,EAAkBE,QAC9C,CAEL,GADAJ,EAAOrB,EAAOzX,MAAM+Y,EAAYE,GAC5BD,GAAoB,EAAG,CACzB,IAAIG,EAAOL,EAAK,GACI,iBAATK,EACTL,EAAK,GAAKK,EAAKnZ,MAAMgZ,GAErBF,EAAKM,OAET,CACIF,EAAiB,GAEnBJ,EAAKlZ,KAAK6X,EAAOwB,GAAUjZ,MAAM,EAAGkZ,GAExC,CACA,OAAOJ,CACT,CAtWWO,CAAY5B,EAAQ5F,EAC7B,CAGA,SAAS4B,IAEP,IAAI6F,EAAS5V,EAMb,MAAO,CACL9E,KANO0a,EAAO1a,KAOdP,OANSib,EAAOjb,OAOhBqV,OANS4F,EAAO5F,OAOhBmE,OANSyB,EAAOzB,OAOhBC,aANewB,EAAOxB,aAQ1B,CAsBA,SAASc,IAGP,IADA,IAAIW,EACG7V,EAAMmU,OAASJ,EAAOra,QAAQ,CACnC,IAAIwa,EAAQH,EAAO/T,EAAMmU,QAGzB,GAAqB,iBAAVD,EAKT,IAJA2B,EAAa7V,EAAMmU,OACfnU,EAAMoU,aAAe,IACvBpU,EAAMoU,aAAe,GAEhBpU,EAAMmU,SAAW0B,GAAc7V,EAAMoU,aAAeF,EAAMxa,QAC/Doc,EAAG5B,EAAMrS,WAAW7B,EAAMoU,oBAG5B0B,EAAG5B,EAEP,CACF,CAQA,SAAS4B,EAAGxT,QACC9C,EACI8C,EACf6S,EAAQA,EAAM7S,EAChB,CAsEA,SAASwS,EAAkBiB,EAAGnB,GAC5BA,EAAKoB,SACP,CAQA,SAASrB,EAAiBsB,EAAUvB,GAClC,OAWA,SAAc3I,EAAYmK,EAAaC,GAErC,IAAIC,EAEAC,EAEAhH,EAEAuF,EACJ,OAAO7c,MAAMF,QAAQkU,GAAqCuK,EAAuBvK,GAAc,aAAcA,EAE7GuK,EAAuB,CAACvK,IAQxB,SAA+BlH,GAC7B,OAAO5J,EAGP,SAASA,EAAMqH,GACb,IAAIiU,EAAe,OAATjU,GAAiBuC,EAAIvC,GAC3BoJ,EAAe,OAATpJ,GAAiBuC,EAAIkM,KAE/B,OAAOuF,EADI,GAAG1P,QAAO,OAAmB7O,MAAMF,QAAQ0e,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAAK,OAAmBxe,MAAMF,QAAQ6T,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAC3I4K,CAA6BhU,EACtC,CACF,CAlBuCkU,CAAsBzK,GA0B7D,SAASuK,EAAuBnL,GAG9B,OAFAiL,EAAmBjL,EACnBkL,EAAiB,EACG,IAAhBlL,EAAKzR,OACAyc,EAEFM,EAAgBtL,EAAKkL,GAC9B,CAQA,SAASI,EAAgBlY,GACvB,OAGA,SAAe+D,GAKbsS,EA4DR,WACE,IAAI8B,EAAa3G,IACb4G,EAAgB5E,EAAQlE,SACxB+I,EAAwB7E,EAAQ1C,iBAChCwH,EAAmB9E,EAAQ9C,OAAOvV,OAClCod,EAAa/e,MAAMwT,KAAKvK,GAC5B,MAAO,CACLgV,QAASA,EACTzK,KAAMsL,GAQR,SAASb,IACPhW,EAAQ0W,EACR3E,EAAQlE,SAAW8I,EACnB5E,EAAQ1C,iBAAmBuH,EAC3B7E,EAAQ9C,OAAOvV,OAASmd,EACxB7V,EAAQ8V,EACRrC,GACF,CACF,CApFesC,GACP1H,EAAmB9Q,EACdA,EAAU2S,UACba,EAAQ1C,iBAAmB9Q,GAK7B,GAAIA,EAAU7F,MAAQqZ,EAAQ/D,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAASxG,EAAU7F,MAC9E,OAAOkY,EAAItO,GAEb,OAAO/D,EAAUqP,SAAS5V,KAI1B0c,EAASrd,OAAOyR,OAAOzR,OAAOqG,OAAOqU,GAAU2C,GAAU3C,EAAS5E,EAASC,EAAIwD,EAJxErS,CAI6E+D,EACtF,CACF,CAGA,SAAS8K,EAAG9K,GAGV,OAFW,EACX2T,EAAS5G,EAAkBuF,GACpBsB,CACT,CAGA,SAAStF,EAAItO,GAGX,OAFW,EACXsS,EAAKoB,YACCK,EAAiBD,EAAiB1c,OAC/B+c,EAAgBL,EAAiBC,IAEnCF,CACT,CACF,CACF,CAOA,SAAStB,EAAUtW,EAAWgN,GACxBhN,EAAU8U,aAAemB,EAAqBzP,SAASxG,IACzDiW,EAAqBtY,KAAKqC,GAExBA,EAAUyL,SACZkB,GAAO6G,EAAQ9C,OAAQ1D,EAAMwG,EAAQ9C,OAAOvV,OAAS6R,EAAMhN,EAAUyL,QAAQ+H,EAAQ9C,OAAO3S,MAAMiP,GAAOwG,IAEvGxT,EAAUyY,YACZjF,EAAQ9C,OAAS1Q,EAAUyY,UAAUjF,EAAQ9C,OAAQ8C,GAEzD,CAuCA,SAAS0C,IACHzU,EAAM9E,QAAQqZ,GAAevU,EAAMrF,OAAS,IAC9CqF,EAAMrF,OAAS4Z,EAAYvU,EAAM9E,MACjC8E,EAAMgQ,QAAUuE,EAAYvU,EAAM9E,MAAQ,EAE9C,CACF,CC5cO,IAAI+b,GAAgB,CACzBve,KAAM,gBACNkV,SAOF,SAA+BT,EAASC,EAAIwD,GAC1C,IAEIsG,EAFA3J,EAAO,EAGX,OAYA,SAAejL,GAGb,OAFA6K,EAAQK,MAAM,iBAehB,SAAgBlL,GAEd,OADA4U,EAAS5U,EACFsR,EAAQtR,EACjB,CAhBS2J,CAAO3J,EAChB,EA2BA,SAASsR,EAAQtR,GACf,OAAIA,IAAS4U,GACX/J,EAAQK,MAAM,yBACP2J,EAAS7U,IAEdiL,GAAQ,IAAe,OAATjL,GAAiBoK,GAAmBpK,KACpD6K,EAAQQ,KAAK,iBACNP,EAAG9K,IAELsO,EAAItO,EACb,CAYA,SAAS6U,EAAS7U,GAChB,OAAIA,IAAS4U,GACX/J,EAAQO,QAAQpL,GAChBiL,IACO4J,IAEThK,EAAQQ,KAAK,yBACNf,GAActK,GAAQ4K,GAAaC,EAASyG,EAAS,aAA/B1G,CAA6C5K,GAAQsR,EAAQtR,GAC5F,CACF,GClFO,IAAI6I,GAAO,CAChBzS,KAAM,OACNkV,SA0BF,SAA2BT,EAASC,EAAIwD,GACtC,IAAI/S,EAAOvC,KACPyX,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GACxC0d,EAAcrE,GAAyB,eAAjBA,EAAK,GAAGlW,KAAwBkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,OAAS,EACrG6T,EAAO,EACX,OAGA,SAAejL,GACb,IAAI+U,EAAOxZ,EAAK6Q,eAAe7R,OAAkB,KAATyF,GAAwB,KAATA,GAAwB,KAATA,EAAc,gBAAkB,eACtG,GAAa,kBAAT+U,GAA4BxZ,EAAK6Q,eAAewI,QAAU5U,IAASzE,EAAK6Q,eAAewI,OAAS3K,GAAWjK,GAAO,CAOpH,GANKzE,EAAK6Q,eAAe7R,OACvBgB,EAAK6Q,eAAe7R,KAAOwa,EAC3BlK,EAAQK,MAAM6J,EAAM,CAClBxF,YAAY,KAGH,kBAATwF,EAEF,OADAlK,EAAQK,MAAM,kBACE,KAATlL,GAAwB,KAATA,EAAc6K,EAAQuC,MAAMuH,GAAerG,EAAK0G,EAAlCnK,CAA4C7K,GAAQgV,EAAShV,GAEnG,IAAKzE,EAAK2R,WAAsB,KAATlN,EAGrB,OAFA6K,EAAQK,MAAM,kBACdL,EAAQK,MAAM,iBACP+J,EAAOjV,EAElB,CACA,OAAOsO,EAAItO,EACb,EAGA,SAASiV,EAAOjV,GACd,OAAIiK,GAAWjK,MAAWiL,EAAO,IAC/BJ,EAAQO,QAAQpL,GACTiV,KAEH1Z,EAAK2R,WAAajC,EAAO,KAAO1P,EAAK6Q,eAAewI,OAAS5U,IAASzE,EAAK6Q,eAAewI,OAAkB,KAAT5U,GAAwB,KAATA,IACtH6K,EAAQQ,KAAK,iBACN2J,EAAShV,IAEXsO,EAAItO,EACb,CAKA,SAASgV,EAAShV,GAKhB,OAJA6K,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACb9P,EAAK6Q,eAAewI,OAASrZ,EAAK6Q,eAAewI,QAAU5U,EACpD6K,EAAQuC,MAAMsB,GAErBnT,EAAK2R,UAAYoB,EAAM4G,EAASrK,EAAQY,QAAQ0J,GAAmCC,EAAaC,GAClG,CAGA,SAASH,EAAQlV,GAGf,OAFAzE,EAAK6Q,eAAekJ,kBAAmB,EACvCR,IACOM,EAAYpV,EACrB,CAGA,SAASqV,EAAYrV,GACnB,OAAIsK,GAActK,IAChB6K,EAAQK,MAAM,4BACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,4BACN+J,GAEF9G,EAAItO,EACb,CAGA,SAASoV,EAAYpV,GAEnB,OADAzE,EAAK6Q,eAAenB,KAAO6J,EAAcvZ,EAAKmV,eAAe7F,EAAQQ,KAAK,mBAAmB,GAAMjU,OAC5F0T,EAAG9K,EACZ,CACF,EAxGEqM,aAAc,CACZf,SA6GJ,SAAkCT,EAASC,EAAIwD,GAC7C,IAAI/S,EAAOvC,KAEX,OADAuC,EAAK6Q,eAAeI,gBAAatP,EAC1B2N,EAAQuC,MAAMsB,GAAWwG,EAASK,GAGzC,SAASL,EAAQlV,GAKf,OAJAzE,EAAK6Q,eAAeoJ,kBAAoBja,EAAK6Q,eAAeoJ,mBAAqBja,EAAK6Q,eAAekJ,iBAI9F1K,GAAaC,EAASC,EAAI,iBAAkBvP,EAAK6Q,eAAenB,KAAO,EAAvEL,CAA0E5K,EACnF,CAGA,SAASuV,EAASvV,GAChB,OAAIzE,EAAK6Q,eAAeoJ,oBAAsBlL,GAActK,IAC1DzE,EAAK6Q,eAAeoJ,uBAAoBtY,EACxC3B,EAAK6Q,eAAekJ,sBAAmBpY,EAChCuY,EAAiBzV,KAE1BzE,EAAK6Q,eAAeoJ,uBAAoBtY,EACxC3B,EAAK6Q,eAAekJ,sBAAmBpY,EAChC2N,EAAQY,QAAQiK,GAAiB5K,EAAI2K,EAArC5K,CAAuD7K,GAChE,CAGA,SAASyV,EAAiBzV,GAOxB,OALAzE,EAAK6Q,eAAeI,YAAa,EAEjCjR,EAAK2R,eAAYhQ,EAGV0N,GAAaC,EAASA,EAAQY,QAAQ5C,GAAMiC,EAAIwD,GAAM,aAAc/S,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EAA/I0N,CAAkJ5K,EAC3J,CACF,GA/IEqL,KAoKF,SAAyBR,GACvBA,EAAQQ,KAAKrS,KAAKoT,eAAe7R,KACnC,GAlKI4a,GAAoC,CACtC7J,SAuKF,SAA0CT,EAASC,EAAIwD,GACrD,IAAI/S,EAAOvC,KAIX,OAAO4R,GAAaC,GAGpB,SAAqB7K,GACnB,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAC5C,OAAQkT,GAActK,IAASyQ,GAAyB,6BAAjBA,EAAK,GAAGlW,KAAsCuQ,EAAG9K,GAAQsO,EAAItO,EACtG,GAN0C,2BAA4BzE,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EAOnJ,EAlLE0R,SAAS,GAIP8G,GAAkB,CACpBpK,SA0IF,SAAwBT,EAASC,EAAIwD,GACnC,IAAI/S,EAAOvC,KACX,OAAO4R,GAAaC,GAGpB,SAAqB7K,GACnB,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAC5C,OAAOqZ,GAAyB,mBAAjBA,EAAK,GAAGlW,MAA6BkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,SAAWmE,EAAK6Q,eAAenB,KAAOH,EAAG9K,GAAQsO,EAAItO,EACjJ,GAN0C,iBAAkBzE,EAAK6Q,eAAenB,KAAO,EAOzF,EAlJE2D,SAAS,GCvBJ,IAAI+G,GAAa,CACtBvf,KAAM,aACNkV,SAWF,SAAiCT,EAASC,EAAIwD,GAC5C,IAAI/S,EAAOvC,KACX,OAYA,SAAegH,GACb,GAAa,KAATA,EAAa,CACf,IAAI6S,EAAQtX,EAAK6Q,eAWjB,OAVKyG,EAAM+C,OACT/K,EAAQK,MAAM,aAAc,CAC1BqE,YAAY,IAEdsD,EAAM+C,MAAO,GAEf/K,EAAQK,MAAM,oBACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,oBACNsD,CACT,CACA,OAAOL,EAAItO,EACb,EAYA,SAAS2O,EAAM3O,GACb,OAAIsK,GAActK,IAChB6K,EAAQK,MAAM,8BACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,8BACbR,EAAQQ,KAAK,oBACNP,IAETD,EAAQQ,KAAK,oBACNP,EAAG9K,GACZ,CACF,EA/DEqM,aAAc,CACZf,SA4EJ,SAAwCT,EAASC,EAAIwD,GACnD,IAAI/S,EAAOvC,KACX,OAeA,SAAmBgH,GACjB,GAAIsK,GAActK,GAGhB,OAAO4K,GAAaC,EAASgL,EAAY,aAActa,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EAA3H0N,CAA8H5K,GAEvI,OAAO6V,EAAW7V,EACpB,EAeA,SAAS6V,EAAW7V,GAClB,OAAO6K,EAAQY,QAAQkK,GAAY7K,EAAIwD,EAAhCzD,CAAqC7K,EAC9C,CACF,GApHEqL,KAuHF,SAAcR,GACZA,EAAQQ,KAAK,aACf,GC9FO,SAASyK,GAAmBjL,EAASC,EAAIwD,EAAK/T,EAAMwb,EAAaC,EAAmBC,EAASC,EAAYnL,GAC9G,IAAIC,EAAQD,GAAO7E,OAAOC,kBACtBgQ,EAAU,EACd,OAcA,SAAenW,GACb,GAAa,KAATA,EAMF,OALA6K,EAAQK,MAAM3Q,GACdsQ,EAAQK,MAAM6K,GACdlL,EAAQK,MAAM8K,GACdnL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK2K,GACNI,EAIT,GAAa,OAATpW,GAA0B,KAATA,GAAwB,KAATA,GAAegK,GAAahK,GAC9D,OAAOsO,EAAItO,GAQb,OANA6K,EAAQK,MAAM3Q,GACdsQ,EAAQK,MAAM+K,GACdpL,EAAQK,MAAMgL,GACdrL,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAERuK,EAAIrW,EACb,EAYA,SAASoW,EAAepW,GACtB,OAAa,KAATA,GACF6K,EAAQK,MAAM8K,GACdnL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK2K,GACbnL,EAAQQ,KAAK0K,GACblL,EAAQQ,KAAK9Q,GACNuQ,IAETD,EAAQK,MAAMgL,GACdrL,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAERwK,EAAStW,GAClB,CAYA,SAASsW,EAAStW,GAChB,OAAa,KAATA,GACF6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK6K,GACNE,EAAepW,IAEX,OAATA,GAA0B,KAATA,GAAeoK,GAAmBpK,GAC9CsO,EAAItO,IAEb6K,EAAQO,QAAQpL,GACA,KAATA,EAAcuW,EAAiBD,EACxC,CAYA,SAASC,EAAevW,GACtB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC6K,EAAQO,QAAQpL,GACTsW,GAEFA,EAAStW,EAClB,CAYA,SAASqW,EAAIrW,GACX,OAAKmW,GAAqB,OAATnW,GAA0B,KAATA,IAAeqK,GAA0BrK,GAOvEmW,EAAUnL,GAAkB,KAAThL,GACrB6K,EAAQO,QAAQpL,GAChBmW,IACOE,GAEI,KAATrW,GACF6K,EAAQO,QAAQpL,GAChBmW,IACOE,GAMI,OAATrW,GAA0B,KAATA,GAAwB,KAATA,GAAegK,GAAahK,GACvDsO,EAAItO,IAEb6K,EAAQO,QAAQpL,GACA,KAATA,EAAcwW,EAAYH,IAxB/BxL,EAAQQ,KAAK,eACbR,EAAQQ,KAAK6K,GACbrL,EAAQQ,KAAK4K,GACbpL,EAAQQ,KAAK9Q,GACNuQ,EAAG9K,GAqBd,CAYA,SAASwW,EAAUxW,GACjB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC6K,EAAQO,QAAQpL,GACTqW,GAEFA,EAAIrW,EACb,CACF,CCxKO,SAASyW,GAAa5L,EAASC,EAAIwD,EAAK/T,EAAMmc,EAAYR,GAC/D,IAGI7H,EAHA9S,EAAOvC,KACPiS,EAAO,EAGX,OAYA,SAAejL,GAMb,OALA6K,EAAQK,MAAM3Q,GACdsQ,EAAQK,MAAMwL,GACd7L,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAKqL,GACb7L,EAAQK,MAAMgL,GACP5E,CACT,EAYA,SAASA,EAAQtR,GACf,OAAIiL,EAAO,KAAgB,OAATjL,GAA0B,KAATA,GAAwB,KAATA,IAAgBqO,GAMzD,KAATrO,IAAgBiL,GAAQ,2BAA4B1P,EAAKmQ,OAAOjC,WACvD6E,EAAItO,GAEA,KAATA,GACF6K,EAAQQ,KAAK6K,GACbrL,EAAQK,MAAMwL,GACd7L,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAKqL,GACb7L,EAAQQ,KAAK9Q,GACNuQ,GAILV,GAAmBpK,IACrB6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNiG,IAETzG,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAER6K,EAAY3W,GACrB,CAYA,SAAS2W,EAAY3W,GACnB,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAeoK,GAAmBpK,IAASiL,IAAS,KACtFJ,EAAQQ,KAAK,eACNiG,EAAQtR,KAEjB6K,EAAQO,QAAQpL,GACXqO,IAAMA,GAAQ/D,GAActK,IACjB,KAATA,EAAc4W,EAAcD,EACrC,CAYA,SAASC,EAAY5W,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC6K,EAAQO,QAAQpL,GAChBiL,IACO0L,GAEFA,EAAY3W,EACrB,CACF,CCzGO,SAAS6W,GAAahM,EAASC,EAAIwD,EAAK/T,EAAMmc,EAAYR,GAE/D,IAAItB,EACJ,OAYA,SAAe5U,GACb,GAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EAMhC,OALA6K,EAAQK,MAAM3Q,GACdsQ,EAAQK,MAAMwL,GACd7L,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAKqL,GACb9B,EAAkB,KAAT5U,EAAc,GAAKA,EACrB8W,EAET,OAAOxI,EAAItO,EACb,EAcA,SAAS8W,EAAM9W,GACb,OAAIA,IAAS4U,GACX/J,EAAQK,MAAMwL,GACd7L,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAKqL,GACb7L,EAAQQ,KAAK9Q,GACNuQ,IAETD,EAAQK,MAAMgL,GACP5E,EAAQtR,GACjB,CAYA,SAASsR,EAAQtR,GACf,OAAIA,IAAS4U,GACX/J,EAAQQ,KAAK6K,GACNY,EAAMlC,IAEF,OAAT5U,EACKsO,EAAItO,GAIToK,GAAmBpK,IAErB6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNT,GAAaC,EAASyG,EAAS,gBAExCzG,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAERmJ,EAAOjV,GAChB,CAOA,SAASiV,EAAOjV,GACd,OAAIA,IAAS4U,GAAmB,OAAT5U,GAAiBoK,GAAmBpK,IACzD6K,EAAQQ,KAAK,eACNiG,EAAQtR,KAEjB6K,EAAQO,QAAQpL,GACA,KAATA,EAAc+W,EAAS9B,EAChC,CAYA,SAAS8B,EAAO/W,GACd,OAAIA,IAAS4U,GAAmB,KAAT5U,GACrB6K,EAAQO,QAAQpL,GACTiV,GAEFA,EAAOjV,EAChB,CACF,CClIO,SAASgX,GAAkBnM,EAASC,GAEzC,IAAIuD,EACJ,OAGA,SAAS1V,EAAMqH,GACb,GAAIoK,GAAmBpK,GAKrB,OAJA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACbgD,GAAO,EACA1V,EAET,GAAI2R,GAActK,GAChB,OAAO4K,GAAaC,EAASlS,EAAO0V,EAAO,aAAe,aAAnDzD,CAAiE5K,GAE1E,OAAO8K,EAAG9K,EACZ,CACF,CCzBO,SAASiX,GAAoB1gB,GAClC,OAAOA,EAEN0B,QAAQ,cAAe,KAEvBA,QAAQ,SAAU,IAOlBif,cAAcC,aACjB,CCjBO,IAAIC,GAAa,CACtBhhB,KAAM,aACNkV,SAaF,SAA4BT,EAASC,EAAIwD,GACvC,IAEI+I,EAFA9b,EAAOvC,KAGX,OAYA,SAAegH,GAKb,OADA6K,EAAQK,MAAM,cAchB,SAAgBlL,GAGd,OAAOyW,GAAa/gB,KAAK6F,EAAMsP,EAASyM,EAExChJ,EAAK,kBAAmB,wBAAyB,wBAF1CmI,CAEmEzW,EAC5E,CAnBS2J,CAAO3J,EAChB,EA8BA,SAASsX,EAAWtX,GAElB,OADAqX,EAAaJ,GAAoB1b,EAAKmV,eAAenV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAAG,IAAI4C,MAAM,GAAI,IAC1F,KAATgG,GACF6K,EAAQK,MAAM,oBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,oBACNkM,GAEFjJ,EAAItO,EACb,CAYA,SAASuX,EAAYvX,GAEnB,OAAOqK,GAA0BrK,GAAQgX,GAAkBnM,EAAS2M,EAA3BR,CAA8ChX,GAAQwX,EAAkBxX,EACnH,CAYA,SAASwX,EAAkBxX,GACzB,OAAO8V,GAAmBjL,EAAS4M,EAEnCnJ,EAAK,wBAAyB,+BAAgC,qCAAsC,2BAA4B,8BAFzHwH,CAEwJ9V,EACjK,CAYA,SAASyX,EAAiBzX,GACxB,OAAO6K,EAAQY,QAAQiM,GAAa/I,EAAOA,EAApC9D,CAA2C7K,EACpD,CAcA,SAAS2O,EAAM3O,GACb,OAAOsK,GAActK,GAAQ4K,GAAaC,EAAS8M,EAAiB,aAAvC/M,CAAqD5K,GAAQ2X,EAAgB3X,EAC5G,CAcA,SAAS2X,EAAgB3X,GACvB,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,cAKb9P,EAAKmQ,OAAOkM,QAAQhe,KAAKyd,GAKlBvM,EAAG9K,IAELsO,EAAItO,EACb,CACF,GAjKI0X,GAAc,CAChBpM,SAsKF,SAA6BT,EAASC,EAAIwD,GACxC,OAcA,SAAqBtO,GACnB,OAAOqK,GAA0BrK,GAAQgX,GAAkBnM,EAASgN,EAA3Bb,CAAyChX,GAAQsO,EAAItO,EAChG,EAaA,SAAS6X,EAAa7X,GACpB,OAAO6W,GAAahM,EAASiN,EAAYxJ,EAAK,kBAAmB,wBAAyB,wBAAnFuI,CAA4G7W,EACrH,CAYA,SAAS8X,EAAW9X,GAClB,OAAOsK,GAActK,GAAQ4K,GAAaC,EAASkN,EAA8B,aAApDnN,CAAkE5K,GAAQ+X,EAA6B/X,EACtI,CAYA,SAAS+X,EAA6B/X,GACpC,OAAgB,OAATA,GAAiBoK,GAAmBpK,GAAQ8K,EAAG9K,GAAQsO,EAAItO,EACpE,CACF,EAlOE4O,SAAS,GCbJ,IAAIoJ,GAAe,CACxB5hB,KAAM,eACNkV,SAaF,SAA8BT,EAASC,EAAIwD,GACzC,IAAI/S,EAAOvC,KACX,OAgBA,SAAegH,GAMb,OAHA6K,EAAQK,MAAM,gBAGPN,GAAaC,EAASoN,EAAa,aAAc,EAAjDrN,CAAwD5K,EACjE,EAYA,SAASiY,EAAYjY,GACnB,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAC5C,OAAOqZ,GAAyB,eAAjBA,EAAK,GAAGlW,MAAyBkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,QAAU,EAAIka,EAAQtR,GAAQsO,EAAItO,EAC1H,CAYA,SAASsR,EAAQtR,GACf,OAAa,OAATA,EACK2O,EAAM3O,GAEXoK,GAAmBpK,GACd6K,EAAQY,QAAQyM,GAAc5G,EAAS3C,EAAvC9D,CAA8C7K,IAEvD6K,EAAQK,MAAM,iBACP+J,EAAOjV,GAChB,CAYA,SAASiV,EAAOjV,GACd,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,iBACNiG,EAAQtR,KAEjB6K,EAAQO,QAAQpL,GACTiV,EACT,CAGA,SAAStG,EAAM3O,GAKb,OAJA6K,EAAQQ,KAAK,gBAINP,EAAG9K,EACZ,CACF,GAnGIkY,GAAe,CACjB5M,SAwGF,SAA8BT,EAASC,EAAIwD,GACzC,IAAI/S,EAAOvC,KACX,OAAOkf,EAaP,SAASA,EAAalY,GAGpB,OAAIzE,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,MACvB0V,EAAItO,GAEToK,GAAmBpK,IACrB6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACN6M,GASFtN,GAAaC,EAASoN,EAAa,aAAc,EAAjDrN,CAAwD5K,EACjE,CAYA,SAASiY,EAAYjY,GACnB,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAC5C,OAAOqZ,GAAyB,eAAjBA,EAAK,GAAGlW,MAAyBkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,QAAU,EAAI0T,EAAG9K,GAAQoK,GAAmBpK,GAAQkY,EAAalY,GAAQsO,EAAItO,EACrK,CACF,EA1JE4O,SAAS,GCLJ,IAAIuJ,GAAa,CACtB/hB,KAAM,aACNkV,SA8CF,SAA4BT,EAASC,EAAIwD,GACvC,IAAIrD,EAAO,EACX,OAYA,SAAejL,GAGb,OADA6K,EAAQK,MAAM,cAchB,SAAgBlL,GAEd,OADA6K,EAAQK,MAAM,sBACPkN,EAAapY,EACtB,CAhBS2J,CAAO3J,EAChB,EA2BA,SAASoY,EAAapY,GACpB,OAAa,KAATA,GAAeiL,IAAS,GAC1BJ,EAAQO,QAAQpL,GACToY,GAII,OAATpY,GAAiBqK,GAA0BrK,IAC7C6K,EAAQQ,KAAK,sBACNiG,EAAQtR,IAEVsO,EAAItO,EACb,CAYA,SAASsR,EAAQtR,GACf,OAAa,KAATA,GACF6K,EAAQK,MAAM,sBACPmN,EAAgBrY,IAEZ,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,cAINP,EAAG9K,IAERsK,GAActK,GACT4K,GAAaC,EAASyG,EAAS,aAA/B1G,CAA6C5K,IAKtD6K,EAAQK,MAAM,kBACP/I,EAAKnC,GACd,CAcA,SAASqY,EAAgBrY,GACvB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTqY,IAETxN,EAAQQ,KAAK,sBACNiG,EAAQtR,GACjB,CAYA,SAASmC,EAAKnC,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAeqK,GAA0BrK,IAC5D6K,EAAQQ,KAAK,kBACNiG,EAAQtR,KAEjB6K,EAAQO,QAAQpL,GACTmC,EACT,CACF,EA/KEuF,QAIF,SAA2BiF,EAAQ8C,GACjC,IAGItW,EAEAiY,EALAf,EAAa1D,EAAOvV,OAAS,EAC7BoU,EAAe,EAOkB,eAAjCmB,EAAOnB,GAAc,GAAGjR,OAC1BiR,GAAgB,GAId6E,EAAa,EAAI7E,GAA+C,eAA/BmB,EAAO0D,GAAY,GAAG9V,OACzD8V,GAAc,GAEmB,uBAA/B1D,EAAO0D,GAAY,GAAG9V,OAAkCiR,IAAiB6E,EAAa,GAAKA,EAAa,EAAI7E,GAAmD,eAAnCmB,EAAO0D,EAAa,GAAG,GAAG9V,QACxJ8V,GAAc7E,EAAe,IAAM6E,EAAa,EAAI,GAElDA,EAAa7E,IACfrS,EAAU,CACRoB,KAAM,iBACN5B,MAAOgU,EAAOnB,GAAc,GAAG7S,MAC/BM,IAAK0T,EAAO0D,GAAY,GAAGpX,KAE7BmY,EAAO,CACL7W,KAAM,YACN5B,MAAOgU,EAAOnB,GAAc,GAAG7S,MAC/BM,IAAK0T,EAAO0D,GAAY,GAAGpX,IAC3B6S,YAAa,QAEflD,GAAO+D,EAAQnB,EAAc6E,EAAa7E,EAAe,EAAG,CAAC,CAAC,QAASrS,EAASsW,GAAU,CAAC,QAAS2B,EAAM3B,GAAU,CAAC,OAAQ2B,EAAM3B,GAAU,CAAC,OAAQtW,EAASsW,MAEjK,OAAO9C,CACT,GC3CO,IAAI2L,GAAkB,CAC3BliB,KAAM,kBACNkV,SAkEF,SAAiCT,EAASC,EAAIwD,GAC5C,IAEIsG,EAFArZ,EAAOvC,KAGX,OAaA,SAAegH,GACb,IAEIuY,EAFA5a,EAAQpC,EAAKoR,OAAOvV,OAIxB,KAAOuG,KAGL,GAAmC,eAA/BpC,EAAKoR,OAAOhP,GAAO,GAAGpD,MAAwD,eAA/BgB,EAAKoR,OAAOhP,GAAO,GAAGpD,MAAwD,YAA/BgB,EAAKoR,OAAOhP,GAAO,GAAGpD,KAAoB,CAC1Ige,EAA2C,cAA/Bhd,EAAKoR,OAAOhP,GAAO,GAAGpD,KAClC,KACF,CAKF,IAAKgB,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,QAAU2C,EAAK2R,WAAaqL,GAG3D,OAFA1N,EAAQK,MAAM,qBACd0J,EAAS5U,EAiBb,SAAgBA,GAEd,OADA6K,EAAQK,MAAM,6BACP+J,EAAOjV,EAChB,CAnBW2J,CAAO3J,GAEhB,OAAOsO,EAAItO,EACb,EA6BA,SAASiV,EAAOjV,GACd,OAAIA,IAAS4U,GACX/J,EAAQO,QAAQpL,GACTiV,IAETpK,EAAQQ,KAAK,6BACNf,GAActK,GAAQ4K,GAAaC,EAAS8D,EAAO,aAA7B/D,CAA2C5K,GAAQ2O,EAAM3O,GACxF,CAaA,SAAS2O,EAAM3O,GACb,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,qBACNP,EAAG9K,IAELsO,EAAItO,EACb,CACF,EAhKE0U,UAIF,SAAkC/H,EAAQ8C,GAExC,IAEItW,EAEAiY,EAEAgG,EANAzZ,EAAQgP,EAAOvV,OAUnB,KAAOuG,KACL,GAAyB,UAArBgP,EAAOhP,GAAO,GAAgB,CAChC,GAA8B,YAA1BgP,EAAOhP,GAAO,GAAGpD,KAAoB,CACvCpB,EAAUwE,EACV,KACF,CAC8B,cAA1BgP,EAAOhP,GAAO,GAAGpD,OACnB6W,EAAOzT,EAEX,KAGgC,YAA1BgP,EAAOhP,GAAO,GAAGpD,MAEnBoS,EAAO/D,OAAOjL,EAAO,GAElByZ,GAAwC,eAA1BzK,EAAOhP,GAAO,GAAGpD,OAClC6c,EAAazZ,GAInB,IAAI6a,EAAU,CACZje,KAAM,gBACN5B,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOyE,GAAM,GAAGzY,OACzCM,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOA,EAAOvV,OAAS,GAAG,GAAG6B,MAItD0T,EAAOyE,GAAM,GAAG7W,KAAO,oBAInB6c,GACFzK,EAAO/D,OAAOwI,EAAM,EAAG,CAAC,QAASoH,EAAS/I,IAC1C9C,EAAO/D,OAAOwO,EAAa,EAAG,EAAG,CAAC,OAAQzK,EAAOxT,GAAS,GAAIsW,IAC9D9C,EAAOxT,GAAS,GAAGF,IAAMlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOyK,GAAY,GAAGne,MAEjE0T,EAAOxT,GAAS,GAAKqf,EAKvB,OADA7L,EAAO/S,KAAK,CAAC,OAAQ4e,EAAS/I,IACvB9C,CACT,GC3DO,IAAI8L,GAAiB,CAAC,UAAW,UAAW,QAAS,OAAQ,WAAY,aAAc,OAAQ,UAAW,SAAU,MAAO,WAAY,KAAM,UAAW,SAAU,MAAO,MAAO,KAAM,KAAM,WAAY,aAAc,SAAU,SAAU,OAAQ,QAAS,WAAY,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,SAAU,KAAM,OAAQ,SAAU,SAAU,KAAM,OAAQ,OAAQ,OAAQ,WAAY,MAAO,WAAY,KAAM,WAAY,SAAU,IAAK,QAAS,SAAU,UAAW,UAAW,QAAS,QAAS,KAAM,QAAS,KAAM,QAAS,QAAS,KAAM,QAAS,MAc1iBC,GAAe,CAAC,MAAO,SAAU,QAAS,YCf1CC,GAAW,CACpBviB,KAAM,WACNkV,SAsCF,SAA0BT,EAASC,EAAIwD,GACrC,IAEIsG,EAEAgE,EAEA1W,EAEAvE,EAEAkb,EAVAtd,EAAOvC,KAWX,OAYA,SAAegH,GAEb,OAaF,SAAgBA,GAId,OAHA6K,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQpL,GACT4V,CACT,CAlBSjM,CAAO3J,EAChB,EAiCA,SAAS4V,EAAK5V,GACZ,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT8Y,GAEI,KAAT9Y,GACF6K,EAAQO,QAAQpL,GAChB4Y,GAAa,EACNG,GAEI,KAAT/Y,GACF6K,EAAQO,QAAQpL,GAChB4U,EAAS,EAMFrZ,EAAK2R,UAAYpC,EAAKkO,GAI3BpP,GAAW5J,IACb6K,EAAQO,QAAQpL,GAEhBkC,EAASkF,OAAOuD,aAAa3K,GACtBnL,GAEFyZ,EAAItO,EACb,CAgBA,SAAS8Y,EAAgB9Y,GACvB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChB4U,EAAS,EACFqE,GAEI,KAATjZ,GACF6K,EAAQO,QAAQpL,GAChB4U,EAAS,EACTjX,EAAQ,EACDub,GAILtP,GAAW5J,IACb6K,EAAQO,QAAQpL,GAChB4U,EAAS,EAGFrZ,EAAK2R,UAAYpC,EAAKkO,GAExB1K,EAAItO,EACb,CAYA,SAASiZ,EAAkBjZ,GACzB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAGTzE,EAAK2R,UAAYpC,EAAKkO,GAExB1K,EAAItO,EACb,CAYA,SAASkZ,EAAgBlZ,GACvB,IAAIzJ,EAAQ,SACZ,OAAIyJ,IAASzJ,EAAMgJ,WAAW5B,MAC5BkN,EAAQO,QAAQpL,GACZrC,IAAUpH,EAAMa,OAGXmE,EAAK2R,UAAYpC,EAAKuB,EAExB6M,GAEF5K,EAAItO,EACb,CAYA,SAAS+Y,EAAc/Y,GACrB,OAAI4J,GAAW5J,IACb6K,EAAQO,QAAQpL,GAEhBkC,EAASkF,OAAOuD,aAAa3K,GACtBnL,GAEFyZ,EAAItO,EACb,CAcA,SAASnL,EAAQmL,GACf,GAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAeqK,GAA0BrK,GAAO,CAClF,IAAImZ,EAAiB,KAATnZ,EACR5J,EAAO8L,EAAOgV,cAClB,OAAKiC,GAAUP,IAAcF,GAAajW,SAASrM,GAM/CqiB,GAAehW,SAASP,EAAOgV,gBACjCtC,EAAS,EACLuE,GACFtO,EAAQO,QAAQpL,GACToZ,GAKF7d,EAAK2R,UAAYpC,EAAG9K,GAAQqM,EAAarM,KAElD4U,EAAS,EAEFrZ,EAAK2R,YAAc3R,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,MAAQ0V,EAAItO,GAAQ4Y,EAAaS,EAAwBrZ,GAAQsZ,EAA4BtZ,KAlBjJ4U,EAAS,EAGFrZ,EAAK2R,UAAYpC,EAAG9K,GAAQqM,EAAarM,GAgBpD,CAGA,OAAa,KAATA,GAAe8J,GAAkB9J,IACnC6K,EAAQO,QAAQpL,GAChBkC,GAAUkF,OAAOuD,aAAa3K,GACvBnL,GAEFyZ,EAAItO,EACb,CAYA,SAASoZ,EAAiBpZ,GACxB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAGTzE,EAAK2R,UAAYpC,EAAKuB,GAExBiC,EAAItO,EACb,CAYA,SAASqZ,EAAwBrZ,GAC/B,OAAIsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACTqZ,GAEFE,EAAYvZ,EACrB,CAyBA,SAASsZ,EAA4BtZ,GACnC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTuZ,GAII,KAATvZ,GAAwB,KAATA,GAAe4J,GAAW5J,IAC3C6K,EAAQO,QAAQpL,GACTwZ,GAELlP,GAActK,IAChB6K,EAAQO,QAAQpL,GACTsZ,GAEFC,EAAYvZ,EACrB,CAgBA,SAASwZ,EAAsBxZ,GAE7B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,IAChF6K,EAAQO,QAAQpL,GACTwZ,GAEFC,EAA2BzZ,EACpC,CAeA,SAASyZ,EAA2BzZ,GAClC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT0Z,GAELpP,GAActK,IAChB6K,EAAQO,QAAQpL,GACTyZ,GAEFH,EAA4BtZ,EACrC,CAeA,SAAS0Z,EAA6B1Z,GACpC,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzDsO,EAAItO,GAEA,KAATA,GAAwB,KAATA,GACjB6K,EAAQO,QAAQpL,GAChB6Y,EAAU7Y,EACH2Z,GAELrP,GAActK,IAChB6K,EAAQO,QAAQpL,GACT0Z,GAEFE,EAA+B5Z,EACxC,CAcA,SAAS2Z,EAA6B3Z,GACpC,OAAIA,IAAS6Y,GACXhO,EAAQO,QAAQpL,GAChB6Y,EAAU,KACHgB,GAEI,OAAT7Z,GAAiBoK,GAAmBpK,GAC/BsO,EAAItO,IAEb6K,EAAQO,QAAQpL,GACT2Z,EACT,CAYA,SAASC,EAA+B5Z,GACtC,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAeqK,GAA0BrK,GAC/IyZ,EAA2BzZ,IAEpC6K,EAAQO,QAAQpL,GACT4Z,EACT,CAaA,SAASC,EAAkC7Z,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAesK,GAActK,GACvCsZ,EAA4BtZ,GAE9BsO,EAAItO,EACb,CAYA,SAASuZ,EAAYvZ,GACnB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT8Z,GAEFxL,EAAItO,EACb,CAYA,SAAS8Z,EAAc9Z,GACrB,OAAa,OAATA,GAAiBoK,GAAmBpK,GAG/BqM,EAAarM,GAElBsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACT8Z,GAEFxL,EAAItO,EACb,CAYA,SAASqM,EAAarM,GACpB,OAAa,KAATA,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACT+Z,GAEI,KAAT/Z,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACTga,GAEI,KAATha,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACTia,GAEI,KAATja,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACTgZ,GAEI,KAAThZ,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACTka,IAEL9P,GAAmBpK,IAAqB,IAAX4U,GAA2B,IAAXA,EAIpC,OAAT5U,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,gBACN8O,EAAkBna,KAE3B6K,EAAQO,QAAQpL,GACTqM,IARLxB,EAAQQ,KAAK,gBACNR,EAAQuC,MAAMgN,GAAiBC,EAAmBF,EAAlDtP,CAAqE7K,GAQhF,CAaA,SAASma,EAAkBna,GACzB,OAAO6K,EAAQuC,MAAMkN,GAA0BC,EAA0BF,EAAlExP,CAAqF7K,EAC9F,CAaA,SAASua,EAAyBva,GAIhC,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNmP,CACT,CAaA,SAASA,EAAmBxa,GAC1B,OAAa,OAATA,GAAiBoK,GAAmBpK,GAC/Bma,EAAkBna,IAE3B6K,EAAQK,MAAM,gBACPmB,EAAarM,GACtB,CAYA,SAAS+Z,EAA0B/Z,GACjC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTgZ,GAEF3M,EAAarM,EACtB,CAYA,SAASga,EAAuBha,GAC9B,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChBkC,EAAS,GACFuY,GAEFpO,EAAarM,EACtB,CAYA,SAASya,EAAsBza,GAC7B,GAAa,KAATA,EAAa,CACf,IAAI5J,EAAO8L,EAAOgV,cAClB,OAAIwB,GAAajW,SAASrM,IACxByU,EAAQO,QAAQpL,GACTia,GAEF5N,EAAarM,EACtB,CACA,OAAI4J,GAAW5J,IAASkC,EAAO9K,OAAS,GACtCyT,EAAQO,QAAQpL,GAEhBkC,GAAUkF,OAAOuD,aAAa3K,GACvBya,GAEFpO,EAAarM,EACtB,CAYA,SAASka,EAAwBla,GAC/B,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTgZ,GAEF3M,EAAarM,EACtB,CAoBA,SAASgZ,EAA8BhZ,GACrC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTia,GAII,KAATja,GAA0B,IAAX4U,GACjB/J,EAAQO,QAAQpL,GACTgZ,GAEF3M,EAAarM,EACtB,CAYA,SAASia,EAAkBja,GACzB,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,gBACNgP,EAAkBra,KAE3B6K,EAAQO,QAAQpL,GACTia,EACT,CAYA,SAASI,EAAkBra,GAMzB,OALA6K,EAAQQ,KAAK,YAKNP,EAAG9K,EACZ,CACF,EA9wBE0U,UAeF,SAA2B/H,GACzB,IAAIhP,EAAQgP,EAAOvV,OACnB,KAAOuG,MACoB,UAArBgP,EAAOhP,GAAO,IAA4C,aAA1BgP,EAAOhP,GAAO,GAAGpD,QAInDoD,EAAQ,GAAmC,eAA9BgP,EAAOhP,EAAQ,GAAG,GAAGpD,OAEpCoS,EAAOhP,GAAO,GAAGhF,MAAQgU,EAAOhP,EAAQ,GAAG,GAAGhF,MAE9CgU,EAAOhP,EAAQ,GAAG,GAAGhF,MAAQgU,EAAOhP,EAAQ,GAAG,GAAGhF,MAElDgU,EAAO/D,OAAOjL,EAAQ,EAAG,IAE3B,OAAOgP,CACT,EA9BEK,UAAU,GAIRoN,GAAkB,CACpB9O,SA2zBF,SAAiCT,EAASC,EAAIwD,GAC5C,OAaA,SAAetO,GAIb,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNR,EAAQY,QAAQiD,GAAW5D,EAAIwD,EACxC,CACF,EA90BEM,SAAS,GAEP0L,GAA2B,CAC7BhP,SA0wBF,SAA0CT,EAASC,EAAIwD,GACrD,IAAI/S,EAAOvC,KACX,OAaA,SAAegH,GACb,GAAIoK,GAAmBpK,GAIrB,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNsD,EAET,OAAOL,EAAItO,EACb,EAaA,SAAS2O,EAAM3O,GACb,OAAOzE,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,MAAQ0V,EAAItO,GAAQ8K,EAAG9K,EAC5D,CACF,EAhzBE4O,SAAS,GCjBX,IAAI8L,GAAsB,CACxBpP,SA+ZF,SAAqCT,EAASC,EAAIwD,GAChD,IAAI/S,EAAOvC,KACX,OAOA,SAAegH,GACb,GAAa,OAATA,EACF,OAAOsO,EAAItO,GAKb,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNO,CACT,EAOA,SAASA,EAAU5L,GACjB,OAAOzE,EAAKmQ,OAAO8B,KAAKjS,EAAKkS,MAAM7U,MAAQ0V,EAAItO,GAAQ8K,EAAG9K,EAC5D,CACF,EAzbE4O,SAAS,GAIA+L,GAAa,CACtBvkB,KAAM,aACNkV,SAQF,SAA4BT,EAASC,EAAIwD,GACvC,IASIsG,EATArZ,EAAOvC,KAEP4hB,EAAa,CACftP,SAiSF,SAA4BT,EAASC,EAAIwD,GACvC,IAAIrD,EAAO,EACX,OAAO4P,EAOP,SAASA,EAAY7a,GAInB,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACN1S,CACT,CAcA,SAASA,EAAMqH,GAKb,OADA6K,EAAQK,MAAM,mBACPZ,GAActK,GAAQ4K,GAAaC,EAASiQ,EAAqB,aAAcvf,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EAApI0N,CAAuI5K,GAAQ8a,EAAoB9a,EAClM,CAcA,SAAS8a,EAAoB9a,GAC3B,OAAIA,IAAS4U,GACX/J,EAAQK,MAAM,2BACP6P,EAAc/a,IAEhBsO,EAAItO,EACb,CAcA,SAAS+a,EAAc/a,GACrB,OAAIA,IAAS4U,GACX3J,IACAJ,EAAQO,QAAQpL,GACT+a,GAEL9P,GAAQ+P,GACVnQ,EAAQQ,KAAK,2BACNf,GAActK,GAAQ4K,GAAaC,EAASoQ,EAAoB,aAA1CrQ,CAAwD5K,GAAQib,EAAmBjb,IAE3GsO,EAAItO,EACb,CAcA,SAASib,EAAmBjb,GAC1B,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,mBACNP,EAAG9K,IAELsO,EAAItO,EACb,CACF,EApYE4O,SAAS,GAEPsM,EAAgB,EAChBF,EAAW,EAGf,OAcA,SAAehb,GAEb,OAeF,SAA4BA,GAC1B,IAAIyQ,EAAOlV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAM5C,OALA8jB,EAAgBzK,GAAyB,eAAjBA,EAAK,GAAGlW,KAAwBkW,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMrZ,OAAS,EACvGwd,EAAS5U,EACT6K,EAAQK,MAAM,cACdL,EAAQK,MAAM,mBACdL,EAAQK,MAAM,2BACPkN,EAAapY,EACtB,CAvBSmb,CAAmBnb,EAC5B,EAoCA,SAASoY,EAAapY,GACpB,OAAIA,IAAS4U,GACXoG,IACAnQ,EAAQO,QAAQpL,GACToY,GAEL4C,EAAW,EACN1M,EAAItO,IAEb6K,EAAQQ,KAAK,2BACNf,GAActK,GAAQ4K,GAAaC,EAASuQ,EAAY,aAAlCxQ,CAAgD5K,GAAQob,EAAWpb,GAClG,CAcA,SAASob,EAAWpb,GAClB,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,mBACN9P,EAAK2R,UAAYpC,EAAG9K,GAAQ6K,EAAQuC,MAAMsN,GAAqBW,EAAgB1M,EAAnD9D,CAA0D7K,KAE/F6K,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAERwG,EAAKtS,GACd,CAcA,SAASsS,EAAKtS,GACZ,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACN+P,EAAWpb,IAEhBsK,GAActK,IAChB6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACNT,GAAaC,EAASyQ,EAAY,aAAlC1Q,CAAgD5K,IAE5C,KAATA,GAAeA,IAAS4U,EACnBtG,EAAItO,IAEb6K,EAAQO,QAAQpL,GACTsS,EACT,CAcA,SAASgJ,EAAWtb,GAClB,OAAa,OAATA,GAAiBoK,GAAmBpK,GAC/Bob,EAAWpb,IAEpB6K,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3BY,YAAa,WAERyP,EAAKvb,GACd,CAcA,SAASub,EAAKvb,GACZ,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACN+P,EAAWpb,IAEP,KAATA,GAAeA,IAAS4U,EACnBtG,EAAItO,IAEb6K,EAAQO,QAAQpL,GACTub,EACT,CAeA,SAASF,EAAerb,GACtB,OAAO6K,EAAQY,QAAQmP,EAAYjM,EAAO6M,EAAnC3Q,CAAkD7K,EAC3D,CAcA,SAASwb,EAAcxb,GAIrB,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNG,CACT,CAcA,SAASA,EAAaxL,GACpB,OAAOkb,EAAgB,GAAK5Q,GAActK,GAAQ4K,GAAaC,EAAS4Q,EAAoB,aAAcP,EAAgB,EAAxEtQ,CAA2E5K,GAAQyb,EAAmBzb,EAC1J,CAcA,SAASyb,EAAmBzb,GAC1B,OAAa,OAATA,GAAiBoK,GAAmBpK,GAC/B6K,EAAQuC,MAAMsN,GAAqBW,EAAgB1M,EAAnD9D,CAA0D7K,IAEnE6K,EAAQK,MAAM,iBACPwQ,EAAa1b,GACtB,CAcA,SAAS0b,EAAa1b,GACpB,OAAa,OAATA,GAAiBoK,GAAmBpK,IACtC6K,EAAQQ,KAAK,iBACNoQ,EAAmBzb,KAE5B6K,EAAQO,QAAQpL,GACT0b,EACT,CAcA,SAAS/M,EAAM3O,GAEb,OADA6K,EAAQQ,KAAK,cACNP,EAAG9K,EACZ,CA2GF,EAjZEgN,UAAU,GChBZ,IAAI,GAAUuB,SAASoN,cAAc,KAM9B,SAASC,GAA8BrlB,GAC5C,IAAIslB,EAAqB,IAAMtlB,EAAQ,IACvC,GAAQulB,UAAYD,EACpB,IAAIE,EAAO,GAAQC,YAUnB,OAAyC,KAArCD,EAAKxc,WAAWwc,EAAK3kB,OAAS,IAAiC,SAAVb,KAQlDwlB,IAASF,GAA6BE,EAC/C,CCrBO,IAAIF,GAAqB,CAC9BzlB,KAAM,qBACNkV,SAOF,SAAoCT,EAASC,EAAIwD,GAC/C,IAGIvD,EAEAL,EALAnP,EAAOvC,KACPiS,EAAO,EAKX,OAgBA,SAAejL,GAKb,OAJA6K,EAAQK,MAAM,sBACdL,EAAQK,MAAM,4BACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,4BACNuK,CACT,EAiBA,SAASA,EAAK5V,GACZ,OAAa,KAATA,GACF6K,EAAQK,MAAM,mCACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,mCACN4Q,IAETpR,EAAQK,MAAM,2BACdH,EAAM,GACNL,EAAOZ,GACAvT,EAAMyJ,GACf,CAcA,SAASic,EAAQjc,GACf,OAAa,KAATA,GAAwB,MAATA,GACjB6K,EAAQK,MAAM,uCACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,uCACbR,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOR,GACA3T,IAETsU,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOT,GACA1T,EAAMyJ,GACf,CAmBA,SAASzJ,EAAMyJ,GACb,GAAa,KAATA,GAAeiL,EAAM,CACvB,IAAIY,EAAQhB,EAAQQ,KAAK,2BACzB,OAAIX,IAASZ,IAAsB8R,GAA8BrgB,EAAKmV,eAAe7E,KAMrFhB,EAAQK,MAAM,4BACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,4BACbR,EAAQQ,KAAK,sBACNP,GATEwD,EAAItO,EAUf,CACA,OAAI0K,EAAK1K,IAASiL,IAASF,GACzBF,EAAQO,QAAQpL,GACTzJ,GAEF+X,EAAItO,EACb,CACF,GCxIO,IAAIkc,GAAkB,CAC3B9lB,KAAM,kBACNkV,SAOF,SAAiCT,EAASC,EAAIwD,GAC5C,OAYA,SAAetO,GAKb,OAJA6K,EAAQK,MAAM,mBACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,gBACN4J,CACT,EAYA,SAASA,EAAOjV,GAEd,OAAImK,GAAiBnK,IACnB6K,EAAQK,MAAM,wBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,wBACbR,EAAQQ,KAAK,mBACNP,GAEFwD,EAAItO,EACb,CACF,GClDO,IAAImc,GAAa,CACtB/lB,KAAM,aACNkV,SAOF,SAA4BT,EAASC,GACnC,OAGA,SAAe9K,GAIb,OAHA6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNT,GAAaC,EAASC,EAAI,aACnC,CACF,GCVO,IAAIsR,GAAW,CACpBhmB,KAAM,WACNkV,SAoHF,SAA0BT,EAASC,EAAIwD,GACrC,IAGI+N,EAEAzE,EALArc,EAAOvC,KACP2E,EAAQpC,EAAKoR,OAAOvV,OAOxB,KAAOuG,KACL,IAAoC,eAA/BpC,EAAKoR,OAAOhP,GAAO,GAAGpD,MAAwD,cAA/BgB,EAAKoR,OAAOhP,GAAO,GAAGpD,QAA0BgB,EAAKoR,OAAOhP,GAAO,GAAG2e,UAAW,CACnID,EAAa9gB,EAAKoR,OAAOhP,GAAO,GAChC,KACF,CAEF,OAiBA,SAAeqC,GAEb,IAAKqc,EACH,OAAO/N,EAAItO,GAYb,GAAIqc,EAAWE,UACb,OAAOC,EAAYxc,GAWrB,OATA4X,EAAUrc,EAAKmQ,OAAOkM,QAAQnV,SAASwU,GAAoB1b,EAAKmV,eAAe,CAC7E/X,MAAO0jB,EAAWpjB,IAClBA,IAAKsC,EAAKkS,UAEZ5C,EAAQK,MAAM,YACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,YACNsD,CACT,EAkBA,SAASA,EAAM3O,GAKb,OAAa,KAATA,EACK6K,EAAQY,QAAQgR,GAAmBC,EAAY9E,EAAU8E,EAAaF,EAAtE3R,CAAmF7K,GAI/E,KAATA,EACK6K,EAAQY,QAAQkR,GAAwBD,EAAY9E,EAAUgF,EAAmBJ,EAAjF3R,CAA8F7K,GAIhG4X,EAAU8E,EAAW1c,GAAQwc,EAAYxc,EAClD,CAgBA,SAAS4c,EAAiB5c,GACxB,OAAO6K,EAAQY,QAAQoR,GAA6BH,EAAYF,EAAzD3R,CAAsE7K,EAC/E,CAkBA,SAAS0c,EAAW1c,GAElB,OAAO8K,EAAG9K,EACZ,CAkBA,SAASwc,EAAYxc,GAEnB,OADAqc,EAAWC,WAAY,EAChBhO,EAAItO,EACb,CACF,EA9QE0U,UAiCF,SAA2B/H,EAAQ8C,GACjC,IAGI5D,EAEA+J,EAEAkH,EAEAC,EATApf,EAAQgP,EAAOvV,OACfsW,EAAS,EAWb,KAAO/P,KAEL,GADAkO,EAAQc,EAAOhP,GAAO,GAClBiY,EAAM,CAER,GAAmB,SAAf/J,EAAMtR,MAAkC,cAAfsR,EAAMtR,MAAwBsR,EAAM0Q,UAC/D,MAKuB,UAArB5P,EAAOhP,GAAO,IAAiC,cAAfkO,EAAMtR,OACxCsR,EAAM0Q,WAAY,EAEtB,MAAO,GAAIO,GACT,GAAyB,UAArBnQ,EAAOhP,GAAO,KAAkC,eAAfkO,EAAMtR,MAAwC,cAAfsR,EAAMtR,QAA0BsR,EAAMyQ,YACxG1G,EAAOjY,EACY,cAAfkO,EAAMtR,MAAsB,CAC9BmT,EAAS,EACT,KACF,MAEsB,aAAf7B,EAAMtR,OACfuiB,EAAQnf,GAGZ,IAAIqf,EAAQ,CACVziB,KAA+B,cAAzBoS,EAAOiJ,GAAM,GAAGrb,KAAuB,OAAS,QACtD5B,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,GAAM,GAAGjd,OACzCM,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOA,EAAOvV,OAAS,GAAG,GAAG6B,MAElDgkB,EAAQ,CACV1iB,KAAM,QACN5B,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,GAAM,GAAGjd,OACzCM,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOmQ,GAAO,GAAG7jB,MAEtCmY,EAAO,CACT7W,KAAM,YACN5B,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,EAAOlI,EAAS,GAAG,GAAGzU,KACtDA,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOmQ,EAAQ,GAAG,GAAGnkB,QAwB9C,OAnBAokB,EAAQnjB,GAHRmjB,EAAQ,CAAC,CAAC,QAASC,EAAOvN,GAAU,CAAC,QAASwN,EAAOxN,IAGjC9C,EAAO3S,MAAM4b,EAAO,EAAGA,EAAOlI,EAAS,IAG3DqP,EAAQnjB,GAAKmjB,EAAO,CAAC,CAAC,QAAS3L,EAAM3B,KAKrCsN,EAAQnjB,GAAKmjB,EAAOhM,GAAWtB,EAAQ/D,OAAOjC,WAAWyT,WAAWzO,KAAM9B,EAAO3S,MAAM4b,EAAOlI,EAAS,EAAGoP,EAAQ,GAAIrN,IAGtHsN,EAAQnjB,GAAKmjB,EAAO,CAAC,CAAC,OAAQ3L,EAAM3B,GAAU9C,EAAOmQ,EAAQ,GAAInQ,EAAOmQ,EAAQ,GAAI,CAAC,OAAQG,EAAOxN,KAGpGsN,EAAQnjB,GAAKmjB,EAAOpQ,EAAO3S,MAAM8iB,EAAQ,IAGzCC,EAAQnjB,GAAKmjB,EAAO,CAAC,CAAC,OAAQC,EAAOvN,KACrC7G,GAAO+D,EAAQiJ,EAAMjJ,EAAOvV,OAAQ2lB,GAC7BpQ,CACT,EA5GEoE,WAiBF,SAA4BpE,GAC1B,IAAIhP,GAAS,EACb,OAASA,EAAQgP,EAAOvV,QAAQ,CAC9B,IAAIyU,EAAQc,EAAOhP,GAAO,GACP,eAAfkO,EAAMtR,MAAwC,cAAfsR,EAAMtR,MAAuC,aAAfsR,EAAMtR,OAErEoS,EAAO/D,OAAOjL,EAAQ,EAAkB,eAAfkO,EAAMtR,KAAwB,EAAI,GAC3DsR,EAAMtR,KAAO,OACboD,IAEJ,CACA,OAAOgP,CACT,GAzBI8P,GAAoB,CACtBnR,SA8QF,SAA0BT,EAASC,EAAIwD,GACrC,OAYA,SAAuBtO,GAKrB,OAJA6K,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACN8R,CACT,EAYA,SAASA,EAAend,GACtB,OAAOqK,GAA0BrK,GAAQgX,GAAkBnM,EAASuS,EAA3BpG,CAAyChX,GAAQod,EAAapd,EACzG,CAYA,SAASod,EAAapd,GACpB,OAAa,KAATA,EACKqd,EAAYrd,GAEd8V,GAAmBjL,EAASyS,EAA0BC,EAA4B,sBAAuB,6BAA8B,mCAAoC,yBAA0B,4BAA6B,GAAlOzH,CAAsO9V,EAC/O,CAYA,SAASsd,EAAyBtd,GAChC,OAAOqK,GAA0BrK,GAAQgX,GAAkBnM,EAAS2S,EAA3BxG,CAA4ChX,GAAQqd,EAAYrd,EAC3G,CAYA,SAASud,EAA2Bvd,GAClC,OAAOsO,EAAItO,EACb,CAYA,SAASwd,EAAgBxd,GACvB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzB6W,GAAahM,EAAS4S,EAAoBnP,EAAK,gBAAiB,sBAAuB,sBAAvFuI,CAA8G7W,GAEhHqd,EAAYrd,EACrB,CAYA,SAASyd,EAAmBzd,GAC1B,OAAOqK,GAA0BrK,GAAQgX,GAAkBnM,EAASwS,EAA3BrG,CAAwChX,GAAQqd,EAAYrd,EACvG,CAYA,SAASqd,EAAYrd,GACnB,OAAa,KAATA,GACF6K,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,GAEFwD,EAAItO,EACb,CACF,GA9YI2c,GAAyB,CAC3BrR,SAmZF,SAA+BT,EAASC,EAAIwD,GAC1C,IAAI/S,EAAOvC,KACX,OAYA,SAAuBgH,GACrB,OAAOyW,GAAa/gB,KAAK6F,EAAMsP,EAAS6S,EAAoBC,EAAsB,YAAa,kBAAmB,kBAA3GlH,CAA8HzW,EACvI,EAYA,SAAS0d,EAAmB1d,GAC1B,OAAOzE,EAAKmQ,OAAOkM,QAAQnV,SAASwU,GAAoB1b,EAAKmV,eAAenV,EAAKoR,OAAOpR,EAAKoR,OAAOvV,OAAS,GAAG,IAAI4C,MAAM,GAAI,KAAO8Q,EAAG9K,GAAQsO,EAAItO,EACtJ,CAYA,SAAS2d,EAAqB3d,GAC5B,OAAOsO,EAAItO,EACb,CACF,GA7bI6c,GAA8B,CAChCvR,SAkcF,SAAoCT,EAASC,EAAIwD,GAC/C,OAcA,SAAiCtO,GAO/B,OAJA6K,EAAQK,MAAM,aACdL,EAAQK,MAAM,mBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,mBACNuS,CACT,EAcA,SAASA,EAAuB5d,GAC9B,OAAa,KAATA,GACF6K,EAAQK,MAAM,mBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,mBACbR,EAAQQ,KAAK,aACNP,GAEFwD,EAAItO,EACb,CACF,GC3gBO,IAAI6d,GAAkB,CAC3BznB,KAAM,kBACNkV,SAQF,SAAiCT,EAASC,EAAIwD,GAC5C,IAAI/S,EAAOvC,KACX,OAYA,SAAegH,GAKb,OAJA6K,EAAQK,MAAM,cACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,oBACNuK,CACT,EAYA,SAASA,EAAK5V,GACZ,OAAa,KAATA,GACF6K,EAAQK,MAAM,eACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,cACNsD,GAEFL,EAAItO,EACb,CA6BA,SAAS2O,EAAM3O,GAMb,OAAgB,KAATA,GAAe,2BAA4BzE,EAAKmQ,OAAOjC,WAAa6E,EAAItO,GAAQ8K,EAAG9K,EAC5F,CACF,EArFE+Q,WAAYqL,GAASrL,YCMhB,SAAS+M,GAAkB9d,GAChC,OAAa,OAATA,GAAiBqK,GAA0BrK,IAASwK,GAAkBxK,GACjE,EAELuK,GAAmBvK,GACd,OADT,CAGF,CCVO,IAAI+d,GAAY,CACrB3nB,KAAM,YACNkV,SA8HF,SAA2BT,EAASC,GAClC,IAKI8J,EALAoJ,EAAmBhlB,KAAK0S,OAAOjC,WAAWuU,iBAAiBvP,KAC3DlD,EAAWvS,KAAKuS,SAChB5B,EAASmU,GAAkBvS,GAI/B,OAYA,SAAevL,GAGb,OAFA4U,EAAS5U,EACT6K,EAAQK,MAAM,qBACP+J,EAAOjV,EAChB,EAYA,SAASiV,EAAOjV,GACd,GAAIA,IAAS4U,EAEX,OADA/J,EAAQO,QAAQpL,GACTiV,EAET,IAAIpJ,EAAQhB,EAAQQ,KAAK,qBAGrBsD,EAAQmP,GAAkB9d,GAI1B4V,GAAQjH,GAAmB,IAAVA,GAAehF,GAAUqU,EAAiBvb,SAASzC,GACpE8c,GAASnT,GAAqB,IAAXA,GAAgBgF,GAASqP,EAAiBvb,SAAS8I,GAG1E,OAFAM,EAAMoS,MAAQ7hB,QAAmB,KAAXwY,EAAgBgB,EAAOA,IAASjM,IAAWmT,IACjEjR,EAAMqS,OAAS9hB,QAAmB,KAAXwY,EAAgBkI,EAAQA,IAAUnO,IAAUiH,IAC5D9K,EAAG9K,EACZ,CACF,EAlLE+Q,WAQF,SAA6BpE,EAAQ8C,GACnC,IAEImG,EAEAoH,EAEA5L,EAEA+M,EAEAC,EAEAhZ,EAEAiZ,EAEA3Q,EAhBA/P,GAAS,EAsBb,OAASA,EAAQgP,EAAOvV,QAEtB,GAAyB,UAArBuV,EAAOhP,GAAO,IAA4C,sBAA1BgP,EAAOhP,GAAO,GAAGpD,MAAgCoS,EAAOhP,GAAO,GAAGugB,OAIpG,IAHAtI,EAAOjY,EAGAiY,KAEL,GAAwB,SAApBjJ,EAAOiJ,GAAM,IAA0C,sBAAzBjJ,EAAOiJ,GAAM,GAAGrb,MAAgCoS,EAAOiJ,GAAM,GAAGqI,OAElGxO,EAAQiB,eAAe/D,EAAOiJ,GAAM,IAAIrW,WAAW,KAAOkQ,EAAQiB,eAAe/D,EAAOhP,GAAO,IAAI4B,WAAW,GAAI,CAKhH,IAAKoN,EAAOiJ,GAAM,GAAGsI,QAAUvR,EAAOhP,GAAO,GAAGsgB,SAAWtR,EAAOhP,GAAO,GAAG1E,IAAIyU,OAASf,EAAOhP,GAAO,GAAGhF,MAAM+U,QAAU,MAAQf,EAAOiJ,GAAM,GAAG3c,IAAIyU,OAASf,EAAOiJ,GAAM,GAAGjd,MAAM+U,OAASf,EAAOhP,GAAO,GAAG1E,IAAIyU,OAASf,EAAOhP,GAAO,GAAGhF,MAAM+U,QAAU,GAC3P,SAIFtI,EAAMuH,EAAOiJ,GAAM,GAAG3c,IAAIyU,OAASf,EAAOiJ,GAAM,GAAGjd,MAAM+U,OAAS,GAAKf,EAAOhP,GAAO,GAAG1E,IAAIyU,OAASf,EAAOhP,GAAO,GAAGhF,MAAM+U,OAAS,EAAI,EAAI,EAC7I,IAAI/U,EAAQ5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,GAAM,GAAG3c,KAC1CA,EAAMlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOhP,GAAO,GAAGhF,OAC7C2lB,GAAU3lB,GAAQyM,GAClBkZ,GAAUrlB,EAAKmM,GACf+Y,EAAkB,CAChB5jB,KAAM6K,EAAM,EAAI,iBAAmB,mBACnCzM,MAAOA,EACPM,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,GAAM,GAAG3c,MAEzCmlB,EAAkB,CAChB7jB,KAAM6K,EAAM,EAAI,iBAAmB,mBACnCzM,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOhP,GAAO,GAAGhF,OAC1CM,IAAKA,GAEPmY,EAAO,CACL7W,KAAM6K,EAAM,EAAI,aAAe,eAC/BzM,MAAO5D,OAAOyR,OAAO,CAAC,EAAGmG,EAAOiJ,GAAM,GAAG3c,KACzCA,IAAKlE,OAAOyR,OAAO,CAAC,EAAGmG,EAAOhP,GAAO,GAAGhF,QAE1CqkB,EAAQ,CACNziB,KAAM6K,EAAM,EAAI,SAAW,WAC3BzM,MAAO5D,OAAOyR,OAAO,CAAC,EAAG2X,EAAgBxlB,OACzCM,IAAKlE,OAAOyR,OAAO,CAAC,EAAG4X,EAAgBnlB,MAEzC0T,EAAOiJ,GAAM,GAAG3c,IAAMlE,OAAOyR,OAAO,CAAC,EAAG2X,EAAgBxlB,OACxDgU,EAAOhP,GAAO,GAAGhF,MAAQ5D,OAAOyR,OAAO,CAAC,EAAG4X,EAAgBnlB,KAC3DolB,EAAa,GAGT1R,EAAOiJ,GAAM,GAAG3c,IAAIyU,OAASf,EAAOiJ,GAAM,GAAGjd,MAAM+U,SACrD2Q,EAAazkB,GAAKykB,EAAY,CAAC,CAAC,QAAS1R,EAAOiJ,GAAM,GAAInG,GAAU,CAAC,OAAQ9C,EAAOiJ,GAAM,GAAInG,MAIhG4O,EAAazkB,GAAKykB,EAAY,CAAC,CAAC,QAASrB,EAAOvN,GAAU,CAAC,QAAS0O,EAAiB1O,GAAU,CAAC,OAAQ0O,EAAiB1O,GAAU,CAAC,QAAS2B,EAAM3B,KAKnJ4O,EAAazkB,GAAKykB,EAAYtN,GAAWtB,EAAQ/D,OAAOjC,WAAWyT,WAAWzO,KAAM9B,EAAO3S,MAAM4b,EAAO,EAAGjY,GAAQ8R,IAGnH4O,EAAazkB,GAAKykB,EAAY,CAAC,CAAC,OAAQjN,EAAM3B,GAAU,CAAC,QAAS2O,EAAiB3O,GAAU,CAAC,OAAQ2O,EAAiB3O,GAAU,CAAC,OAAQuN,EAAOvN,KAG7I9C,EAAOhP,GAAO,GAAG1E,IAAIyU,OAASf,EAAOhP,GAAO,GAAGhF,MAAM+U,QACvDA,EAAS,EACT2Q,EAAazkB,GAAKykB,EAAY,CAAC,CAAC,QAAS1R,EAAOhP,GAAO,GAAI8R,GAAU,CAAC,OAAQ9C,EAAOhP,GAAO,GAAI8R,MAEhG/B,EAAS,EAEX9E,GAAO+D,EAAQiJ,EAAO,EAAGjY,EAAQiY,EAAO,EAAGyI,GAC3C1gB,EAAQiY,EAAOyI,EAAWjnB,OAASsW,EAAS,EAC5C,KACF,CAMN/P,GAAS,EACT,OAASA,EAAQgP,EAAOvV,QACQ,sBAA1BuV,EAAOhP,GAAO,GAAGpD,OACnBoS,EAAOhP,GAAO,GAAGpD,KAAO,QAG5B,OAAOoS,CACT,GAuEA,SAAS2R,GAAU5gB,EAAOgQ,GACxBhQ,EAAMrF,QAAUqV,EAChBhQ,EAAMgQ,QAAUA,EAChBhQ,EAAMoU,cAAgBpE,CACxB,CC5MO,IAAI6Q,GAAW,CACpBnoB,KAAM,WACNkV,SAOF,SAA0BT,EAASC,EAAIwD,GACrC,IAAIrD,EAAO,EACX,OAcA,SAAejL,GAMb,OALA6K,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACbR,EAAQK,MAAM,oBACP0K,CACT,EAcA,SAASA,EAAK5V,GACZ,OAAI4J,GAAW5J,IACb6K,EAAQO,QAAQpL,GACTwe,GAEFC,EAAWze,EACpB,CAcA,SAASwe,EAAmBxe,GAE1B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,IAEjEiL,EAAO,EACAyT,EAAyB1e,IAE3Bye,EAAWze,EACpB,CAcA,SAAS0e,EAAyB1e,GAChC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChBiL,EAAO,EACA0T,IAIK,KAAT3e,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,KAAUiL,IAAS,IACrFJ,EAAQO,QAAQpL,GACT0e,IAETzT,EAAO,EACAwT,EAAWze,GACpB,CAYA,SAAS2e,EAAU3e,GACjB,OAAa,KAATA,GACF6K,EAAQQ,KAAK,oBACbR,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,GAII,OAAT9K,GAA0B,KAATA,GAAwB,KAATA,GAAegK,GAAahK,GACvDsO,EAAItO,IAEb6K,EAAQO,QAAQpL,GACT2e,EACT,CAYA,SAASF,EAAWze,GAClB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT4e,GAEL7U,GAAW/J,IACb6K,EAAQO,QAAQpL,GACTye,GAEFnQ,EAAItO,EACb,CAYA,SAAS4e,EAAiB5e,GACxB,OAAO8J,GAAkB9J,GAAQ6e,EAAW7e,GAAQsO,EAAItO,EAC1D,CAYA,SAAS6e,EAAW7e,GAClB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChBiL,EAAO,EACA2T,GAEI,KAAT5e,GAEF6K,EAAQQ,KAAK,oBAAoB9Q,KAAO,gBACxCsQ,EAAQK,MAAM,kBACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,GAEFgU,EAAW9e,EACpB,CAcA,SAAS8e,EAAW9e,GAElB,IAAc,KAATA,GAAe8J,GAAkB9J,KAAUiL,IAAS,GAAI,CAC3D,IAAIhG,EAAgB,KAATjF,EAAc8e,EAAaD,EAEtC,OADAhU,EAAQO,QAAQpL,GACTiF,CACT,CACA,OAAOqJ,EAAItO,EACb,CACF,GCvNO,IAAI+e,GAAW,CACpB3oB,KAAM,WACNkV,SAOF,SAA0BT,EAASC,EAAIwD,GACrC,IAEIsG,EAEAjX,EAEAiW,EANArY,EAAOvC,KAOX,OAYA,SAAegH,GAIb,OAHA6K,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQpL,GACT4V,CACT,EAgBA,SAASA,EAAK5V,GACZ,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT8Y,GAEI,KAAT9Y,GACF6K,EAAQO,QAAQpL,GACT+Y,GAEI,KAAT/Y,GACF6K,EAAQO,QAAQpL,GACTgf,GAILpV,GAAW5J,IACb6K,EAAQO,QAAQpL,GACTif,GAEF3Q,EAAItO,EACb,CAgBA,SAAS8Y,EAAgB9Y,GACvB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTiZ,GAEI,KAATjZ,GACF6K,EAAQO,QAAQpL,GAChBrC,EAAQ,EACDub,GAELtP,GAAW5J,IACb6K,EAAQO,QAAQpL,GACTxF,GAEF8T,EAAItO,EACb,CAYA,SAASiZ,EAAkBjZ,GACzB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTkf,GAEF5Q,EAAItO,EACb,CAYA,SAAS5F,EAAQ4F,GACf,OAAa,OAATA,EACKsO,EAAItO,GAEA,KAATA,GACF6K,EAAQO,QAAQpL,GACTmf,GAEL/U,GAAmBpK,IACrB4T,EAAcxZ,EACPglB,EAAiBpf,KAE1B6K,EAAQO,QAAQpL,GACT5F,EACT,CAYA,SAAS+kB,EAAanf,GACpB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTkf,GAEF9kB,EAAQ4F,EACjB,CAYA,SAASkf,EAAWlf,GAClB,OAAgB,KAATA,EAAc/G,EAAI+G,GAAiB,KAATA,EAAcmf,EAAanf,GAAQ5F,EAAQ4F,EAC9E,CAYA,SAASkZ,EAAgBlZ,GACvB,IAAIzJ,EAAQ,SACZ,OAAIyJ,IAASzJ,EAAMgJ,WAAW5B,MAC5BkN,EAAQO,QAAQpL,GACTrC,IAAUpH,EAAMa,OAASioB,EAAQnG,GAEnC5K,EAAItO,EACb,CAYA,SAASqf,EAAMrf,GACb,OAAa,OAATA,EACKsO,EAAItO,GAEA,KAATA,GACF6K,EAAQO,QAAQpL,GACTsf,GAELlV,GAAmBpK,IACrB4T,EAAcyL,EACPD,EAAiBpf,KAE1B6K,EAAQO,QAAQpL,GACTqf,EACT,CAYA,SAASC,EAAWtf,GAClB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACTuf,GAEFF,EAAMrf,EACf,CAYA,SAASuf,EAASvf,GAChB,OAAa,KAATA,EACK/G,EAAI+G,GAEA,KAATA,GACF6K,EAAQO,QAAQpL,GACTuf,GAEFF,EAAMrf,EACf,CAYA,SAASxF,EAAYwF,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZ/G,EAAI+G,GAEToK,GAAmBpK,IACrB4T,EAAcpZ,EACP4kB,EAAiBpf,KAE1B6K,EAAQO,QAAQpL,GACTxF,EACT,CAYA,SAASwkB,EAAYhf,GACnB,OAAa,OAATA,EACKsO,EAAItO,GAEA,KAATA,GACF6K,EAAQO,QAAQpL,GACTwf,GAELpV,GAAmBpK,IACrB4T,EAAcoL,EACPI,EAAiBpf,KAE1B6K,EAAQO,QAAQpL,GACTgf,EACT,CAYA,SAASQ,EAAiBxf,GACxB,OAAgB,KAATA,EAAc/G,EAAI+G,GAAQgf,EAAYhf,EAC/C,CAYA,SAAS+Y,EAAc/Y,GAErB,OAAI4J,GAAW5J,IACb6K,EAAQO,QAAQpL,GACTyf,GAEFnR,EAAItO,EACb,CAYA,SAASyf,EAASzf,GAEhB,OAAa,KAATA,GAAe8J,GAAkB9J,IACnC6K,EAAQO,QAAQpL,GACTyf,GAEFC,EAAgB1f,EACzB,CAYA,SAAS0f,EAAgB1f,GACvB,OAAIoK,GAAmBpK,IACrB4T,EAAc8L,EACPN,EAAiBpf,IAEtBsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACT0f,GAEFzmB,EAAI+G,EACb,CAYA,SAASif,EAAQjf,GAEf,OAAa,KAATA,GAAe8J,GAAkB9J,IACnC6K,EAAQO,QAAQpL,GACTif,GAEI,KAATjf,GAAwB,KAATA,GAAeqK,GAA0BrK,GACnD2f,EAAe3f,GAEjBsO,EAAItO,EACb,CAYA,SAAS2f,EAAe3f,GACtB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT/G,GAII,KAAT+G,GAAwB,KAATA,GAAe4J,GAAW5J,IAC3C6K,EAAQO,QAAQpL,GACT4f,GAELxV,GAAmBpK,IACrB4T,EAAc+L,EACPP,EAAiBpf,IAEtBsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACT2f,GAEF1mB,EAAI+G,EACb,CAYA,SAAS4f,EAAqB5f,GAE5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,IAChF6K,EAAQO,QAAQpL,GACT4f,GAEFC,EAA0B7f,EACnC,CAaA,SAAS6f,EAA0B7f,GACjC,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GACT8f,GAEL1V,GAAmBpK,IACrB4T,EAAciM,EACPT,EAAiBpf,IAEtBsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACT6f,GAEFF,EAAe3f,EACxB,CAaA,SAAS8f,EAA4B9f,GACnC,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzDsO,EAAItO,GAEA,KAATA,GAAwB,KAATA,GACjB6K,EAAQO,QAAQpL,GAChB4U,EAAS5U,EACF+f,GAEL3V,GAAmBpK,IACrB4T,EAAckM,EACPV,EAAiBpf,IAEtBsK,GAActK,IAChB6K,EAAQO,QAAQpL,GACT8f,IAETjV,EAAQO,QAAQpL,GACTggB,EACT,CAYA,SAASD,EAA4B/f,GACnC,OAAIA,IAAS4U,GACX/J,EAAQO,QAAQpL,GAChB4U,OAAS1X,EACF+iB,GAEI,OAATjgB,EACKsO,EAAItO,GAEToK,GAAmBpK,IACrB4T,EAAcmM,EACPX,EAAiBpf,KAE1B6K,EAAQO,QAAQpL,GACT+f,EACT,CAYA,SAASC,EAA8BhgB,GACrC,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACxEsO,EAAItO,GAEA,KAATA,GAAwB,KAATA,GAAeqK,GAA0BrK,GACnD2f,EAAe3f,IAExB6K,EAAQO,QAAQpL,GACTggB,EACT,CAaA,SAASC,EAAiCjgB,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAeqK,GAA0BrK,GACnD2f,EAAe3f,GAEjBsO,EAAItO,EACb,CAYA,SAAS/G,EAAI+G,GACX,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,YACNP,GAEFwD,EAAItO,EACb,CAgBA,SAASof,EAAiBpf,GAKxB,OAJA6K,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACN6U,CACT,CAgBA,SAASA,EAAgBlgB,GAGvB,OAAOsK,GAActK,GAAQ4K,GAAaC,EAASsV,EAAuB,aAAc5kB,EAAKmQ,OAAOjC,WAAW+E,QAAQC,KAAKhM,SAAS,qBAAkBvF,EAAY,EAAtI0N,CAAyI5K,GAAQmgB,EAAsBngB,EACtM,CAgBA,SAASmgB,EAAsBngB,GAE7B,OADA6K,EAAQK,MAAM,gBACP0I,EAAY5T,EACrB,CACF,GCxpBO,IAAIogB,GAAiB,CAC1BhqB,KAAM,iBACNkV,SAQF,SAAgCT,EAASC,EAAIwD,GAC3C,IAAI/S,EAAOvC,KACX,OAYA,SAAegH,GAMb,OALA6K,EAAQK,MAAM,aACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,aACNsD,CACT,EAGA,SAASA,EAAM3O,GAKb,OAAgB,KAATA,GAAe,2BAA4BzE,EAAKmQ,OAAOjC,WAAa6E,EAAItO,GAAQ8K,EAAG9K,EAC5F,CACF,EAtCE+Q,WAAYqL,GAASrL,YCJhB,IAAIsP,GAAkB,CAC3BjqB,KAAM,kBACNkV,SAOF,SAAiCT,EAASC,EAAIwD,GAC5C,OAaA,SAAetO,GAGb,OAFA6K,EAAQK,MAAM,mBACdL,EAAQO,QAAQpL,GACT2O,CACT,EAaA,SAASA,EAAM3O,GACb,OAAIoK,GAAmBpK,IACrB6K,EAAQQ,KAAK,mBACNP,EAAG9K,IAELsO,EAAItO,EACb,CACF,GC5CO,ICXHsgB,GAAWC,GAAcC,GAAOC,GAASC,GDWlCC,GAAW,CACpBvqB,KAAM,WACNkV,SAmEF,SAA0BT,EAASC,EAAIwD,GACrC,IAGIrD,EAEAY,EAJAmP,EAAW,EAKf,OAcA,SAAehb,GAGb,OAFA6K,EAAQK,MAAM,YACdL,EAAQK,MAAM,oBACPkN,EAAapY,EACtB,EAYA,SAASoY,EAAapY,GACpB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChBgb,IACO5C,IAETvN,EAAQQ,KAAK,oBACNuV,EAAQ5gB,GACjB,CAYA,SAAS4gB,EAAQ5gB,GAEf,OAAa,OAATA,EACKsO,EAAItO,GAMA,KAATA,GACF6K,EAAQK,MAAM,SACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,SACNuV,GAII,KAAT5gB,GACF6L,EAAQhB,EAAQK,MAAM,oBACtBD,EAAO,EACA8P,EAAc/a,IAEnBoK,GAAmBpK,IACrB6K,EAAQK,MAAM,cACdL,EAAQO,QAAQpL,GAChB6K,EAAQQ,KAAK,cACNuV,IAIT/V,EAAQK,MAAM,gBACP/I,EAAKnC,GACd,CAYA,SAASmC,EAAKnC,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAeoK,GAAmBpK,IACpE6K,EAAQQ,KAAK,gBACNuV,EAAQ5gB,KAEjB6K,EAAQO,QAAQpL,GACTmC,EACT,CAYA,SAAS4Y,EAAc/a,GAErB,OAAa,KAATA,GACF6K,EAAQO,QAAQpL,GAChBiL,IACO8P,GAIL9P,IAAS+P,GACXnQ,EAAQQ,KAAK,oBACbR,EAAQQ,KAAK,YACNP,EAAG9K,KAIZ6L,EAAMtR,KAAO,eACN4H,EAAKnC,GACd,CACF,EA7ME0H,QAMF,SAAyBiF,GACvB,IAGIhP,EAEAuN,EALA2V,EAAgBlU,EAAOvV,OAAS,EAChC0pB,EAAiB,EAOrB,KAAwC,eAAnCnU,EAAOmU,GAAgB,GAAGvmB,MAA4D,UAAnCoS,EAAOmU,GAAgB,GAAGvmB,MAAwD,eAAlCoS,EAAOkU,GAAe,GAAGtmB,MAA2D,UAAlCoS,EAAOkU,GAAe,GAAGtmB,MAIjL,IAHAoD,EAAQmjB,IAGCnjB,EAAQkjB,GACf,GAA8B,iBAA1BlU,EAAOhP,GAAO,GAAGpD,KAAyB,CAE5CoS,EAAOmU,GAAgB,GAAGvmB,KAAO,kBACjCoS,EAAOkU,GAAe,GAAGtmB,KAAO,kBAChCumB,GAAkB,EAClBD,GAAiB,EACjB,KACF,CAKJljB,EAAQmjB,EAAiB,EACzBD,IACA,OAASljB,GAASkjB,QACF3jB,IAAVgO,EACEvN,IAAUkjB,GAA2C,eAA1BlU,EAAOhP,GAAO,GAAGpD,OAC9C2Q,EAAQvN,GAEDA,IAAUkjB,GAA2C,eAA1BlU,EAAOhP,GAAO,GAAGpD,OACrDoS,EAAOzB,GAAO,GAAG3Q,KAAO,eACpBoD,IAAUuN,EAAQ,IACpByB,EAAOzB,GAAO,GAAGjS,IAAM0T,EAAOhP,EAAQ,GAAG,GAAG1E,IAC5C0T,EAAO/D,OAAOsC,EAAQ,EAAGvN,EAAQuN,EAAQ,GACzC2V,GAAiBljB,EAAQuN,EAAQ,EACjCvN,EAAQuN,EAAQ,GAElBA,OAAQhO,GAGZ,OAAOyP,CACT,EAlDEpB,SAwDF,SAAkBvL,GAEhB,OAAgB,KAATA,GAA+D,oBAAhDhH,KAAK2T,OAAO3T,KAAK2T,OAAOvV,OAAS,GAAG,GAAGmD,IAC/D,GCjEO,IAAI,IAAY+lB,GAAY,CAAC,GAAG,OAAgBA,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAIzX,KAAO,OAAgByX,GAAW,GAAI3K,IAAa2K,IAGtjB3U,IAAiB,OAAgB,CAAC,EAAG,GAAIyL,IAGzCxG,IAAe2P,GAAe,CAAC,GAAG,OAAgBA,IAAe,EAAGvI,KAAe,OAAgBuI,IAAe,EAAGvI,KAAe,OAAgBuI,GAAc,GAAIvI,IAAeuI,IAGrL,IAAQC,GAAQ,CAAC,GAAG,OAAgBA,GAAO,GAAIrI,KAAa,OAAgBqI,GAAO,GAAI7L,KAAgB,OAAgB6L,GAAO,GAAI,CAAClI,GAAiB3D,MAAiB,OAAgB6L,GAAO,GAAI7H,KAAW,OAAgB6H,GAAO,GAAIlI,KAAkB,OAAgBkI,GAAO,GAAI7L,KAAgB,OAAgB6L,GAAO,GAAI7F,KAAa,OAAgB6F,GAAO,IAAK7F,IAAa6F,IAGpX,IAAUC,GAAU,CAAC,GAAG,OAAgBA,GAAS,GAAI5E,KAAqB,OAAgB4E,GAAS,GAAIvE,IAAkBuE,IAGzH,IAAQC,GAAQ,CAAC,GAAG,OAAgBA,IAAQ,EAAGvE,KAAa,OAAgBuE,IAAQ,EAAGvE,KAAa,OAAgBuE,IAAQ,EAAGvE,KAAa,OAAgBuE,GAAO,GAAI7C,KAAkB,OAAgB6C,GAAO,GAAI7E,KAAqB,OAAgB6E,GAAO,GAAI3C,KAAY,OAAgB2C,GAAO,GAAI,CAACnC,GAAUQ,MAAY,OAAgB2B,GAAO,GAAIN,KAAiB,OAAgBM,GAAO,GAAI,CAACL,GAAiBnE,MAAmB,OAAgBwE,GAAO,GAAItE,KAAW,OAAgBsE,GAAO,GAAI3C,KAAY,OAAgB2C,GAAO,GAAIC,IAAWD,IAGjiBxD,GAAa,CACtBzO,KAAM,CAACsP,GAAW,KAITC,GAAmB,CAC5BvP,KAAM,CAAC,GAAI,KAIFD,GAAU,CACnBC,KAAM,IClBD,SAAS1H,GAAM5Q,GACpB,IAAIiQ,EAAWjQ,GAAW,CAAC,EACvBsT,E3CLC,SAA2BsX,GAIhC,IAFA,IAAI3X,EAAM,CAAC,EACPzL,GAAS,IACJA,EAAQojB,EAAW3pB,QAC1B+R,GAAgBC,EAAK2X,EAAWpjB,IAElC,OAAOyL,CACT,C2CFE4X,CAAkB,CAAC,GAAmB1c,QAAO,OAAmB8B,EAAS2a,YAAc,MAGnFrV,EAAS,CACXkM,QAAS,GACTpK,KAAM,CAAC,EACP/D,WAAYA,EACZtQ,QAASiC,EAAOjC,IAChBoV,SAAUnT,EAAO,IACjBwS,KAAMxS,EAAOwS,IACbqD,OAAQ7V,EAAO6V,IACfG,KAAMhW,EAAO,KAEf,OAAOsQ,EAKP,SAAStQ,EAAOuV,GACd,OAEA,SAAiB1H,GACf,OAAO8I,GAAgBrG,EAAQiF,EAAS1H,EAC1C,CACF,CACF,CClCA,IAAIgY,GAAS,cCDN,SAASC,GAAgC3qB,EAAOiO,GACrD,IAAIxE,EAAOkG,OAAOib,SAAS5qB,EAAOiO,GAClC,OAEAxE,EAAO,GAAc,KAATA,GAAeA,EAAO,IAAMA,EAAO,IAE/CA,EAAO,KAAOA,EAAO,KAErBA,EAAO,OAASA,EAAO,OAEvBA,EAAO,OAASA,EAAO,OAA4D,QAAX,MAAPA,IAA8C,QAAX,MAAPA,IAE7FA,EAAO,QACE,IAEFoH,OAAOuD,aAAa3K,EAC7B,CC5BA,IAAIohB,GAA6B,oEAwBjC,SAASC,GAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAKT,GAAa,KADFC,EAAGjiB,WAAW,GACR,CACf,IAAIkiB,EAAQD,EAAGjiB,WAAW,GACtBmiB,EAAgB,MAAVD,GAA2B,KAAVA,EAC3B,OAAOP,GAAgCM,EAAGxnB,MAAM0nB,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC3E,CACA,OAAO9F,GAA8B4F,IAAOF,CAC9C,CCoHA,IAAI,GAAM,CAAC,EAAErsB,eAYF0sB,GAcX,SAAsBprB,EAAOsM,EAAU1M,GAKrC,MAJwB,iBAAb0M,IACT1M,EAAU0M,EACVA,OAAW3F,GAUf,SAAkB/G,GAEhB,IAAIyrB,EAAS,CACXC,WAAY,GACZC,eAAgB,CAAC,WAAY,WAAY,UAAW,YAAa,UACjE5W,MAAO,CACLqT,SAAUwD,EAAOC,IACjBC,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYL,EAAOvJ,GACnB7C,WAAYoM,EAAOpM,GACnBuG,gBAAiBgG,EACjBrG,mBAAoBqG,EACpBvH,WAAYoH,EAAOM,GACnBC,oBAAqBpgB,EACrBqgB,oBAAqBrgB,EACrB8V,aAAc+J,EAAOM,EAAUngB,GAC/Bye,SAAUoB,EAAOpB,EAAUze,GAC3BsgB,aAAcN,EACd/f,KAAM+f,EACNO,cAAeP,EACf9K,WAAY2K,EAAO3K,GACnBsL,4BAA6BxgB,EAC7BygB,sBAAuBzgB,EACvB0gB,sBAAuB1gB,EACvB2gB,SAAUd,EAAOc,GACjBxC,gBAAiB0B,EAAOe,IACxBC,kBAAmBhB,EAAOe,IAC1BnK,SAAUoJ,EAAOiB,GAAM9gB,GACvB+gB,aAAcf,EACdnD,SAAUgD,EAAOiB,GAAM9gB,GACvBghB,aAAchB,EACdiB,MAAOpB,EAAOoB,IACdlG,MAAO/a,EACP8f,KAAMD,EAAOC,IACboB,SAAUrB,EAAOqB,IACjBC,cAAeC,EACfC,YAAaxB,EAAOlZ,GAAM2a,GAC1BC,cAAe1B,EAAOlZ,IACtB0P,UAAWwJ,EAAOxJ,IAClBmL,UAAWC,EACXC,gBAAiB1hB,EACjB2hB,0BAA2B3hB,EAC3B4hB,oBAAqB5hB,EACrB6hB,cAAehC,EAAOvJ,GACtBwL,OAAQjC,EAAOiC,IACfrP,cAAeoN,EAAOpN,KAExBtJ,KAAM,CACJ+W,WAAY6B,IACZC,mBAAoBC,EACpB5F,SAAU0F,IACV9B,cAAeiC,EACfnC,iBAAkBoC,EAClB1O,WAAYsO,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzBjK,WAAYsJ,EAAOY,GACnBC,gBAAiBC,EACjBzC,oBAAqB0C,EACrBzC,oBAAqB0C,EACrBxC,cAAe8B,EACfvM,aAAciM,EAAOiB,GACrBvE,SAAUsD,EAAOkB,GACjB3C,aAAc+B,EACdpiB,KAAMoiB,EACNnN,WAAY6M,IACZvB,4BAA6B0C,EAC7BzC,sBAAuB0C,EACvBzC,sBAAuB0C,EACvBzC,SAAUoB,IACV5D,gBAAiB4D,EAAOsB,GACxBxC,kBAAmBkB,EAAOsB,GAC1B5M,SAAUsL,EAAOuB,GACjBvC,aAAcsB,EACdxF,SAAUkF,EAAOwB,GACjBvC,aAAcqB,EACdpB,MAAOc,EAAOyB,GACdzI,MAAO0I,EACPC,UAAWC,EACX1J,WAAY2J,EACZ9D,KAAMiC,EAAO8B,GACb3C,SAAUa,IACVV,YAAaU,IACbR,cAAeQ,IACf1L,UAAW0L,IACXL,gBAAiBoC,EACjBnC,0BAA2BoC,EAC3BnC,oBAAqBoC,EACrBC,SAAUC,EACVrC,cAAeE,EAAOoC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnBzC,OAAQC,IACRtP,cAAesP,MAGnByC,GAAU9E,GAASzrB,GAAW,CAAC,GAAGwwB,iBAAmB,IAGrD,IAAIxkB,EAAO,CAAC,EACZ,OAAOoF,EAUP,SAASA,EAAQoF,GAqBf,IAnBA,IAAI/E,EAAO,CACTrN,KAAM,OACNoO,SAAU,IAGR8G,EAAU,CACZ/Q,MAAO,CAACkJ,GACRgf,WAAY,GACZhF,OAAQA,EACR1W,MAAOA,EACPG,KAAMA,EACNnJ,OAAQA,EACR2kB,OAAQA,EACRC,QAASA,EACTC,QAASA,GAGPC,EAAY,GACZrpB,GAAS,IACJA,EAAQgP,EAAOvV,QAAQ,CAG9B,GAA8B,gBAA1BuV,EAAOhP,GAAO,GAAGpD,MAAoD,kBAA1BoS,EAAOhP,GAAO,GAAGpD,KAC9D,GAAyB,UAArBoS,EAAOhP,GAAO,GAChBqpB,EAAUptB,KAAK+D,QAGfA,EAAQspB,EAAYta,EADTqa,EAAUhiB,MACarH,EAGxC,CAEA,IADAA,GAAS,IACAA,EAAQgP,EAAOvV,QAAQ,CAC9B,IAAI8vB,EAAUtF,EAAOjV,EAAOhP,GAAO,IAC/B,GAAIjI,KAAKwxB,EAASva,EAAOhP,GAAO,GAAGpD,OACrC2sB,EAAQva,EAAOhP,GAAO,GAAGpD,MAAM7E,KAAKX,OAAOyR,OAAO,CAChDkK,eAAgB/D,EAAOhP,GAAO,GAAG+S,gBAChCjB,GAAU9C,EAAOhP,GAAO,GAE/B,CAGA,GAAI8R,EAAQmX,WAAWxvB,OAAS,EAAG,CACjC,IAAI+vB,EAAQ1X,EAAQmX,WAAWnX,EAAQmX,WAAWxvB,OAAS,IAC5C+vB,EAAM,IAAMC,IAClB1xB,KAAK+Z,OAASvS,EAAWiqB,EAAM,GAC1C,CAkBA,IAfAvf,EAAKlP,SAAW,CACdC,MAAO,GAAMgU,EAAOvV,OAAS,EAAIuV,EAAO,GAAG,GAAGhU,MAAQ,CACpDC,KAAM,EACNP,OAAQ,EACRqV,OAAQ,IAEVzU,IAAK,GAAM0T,EAAOvV,OAAS,EAAIuV,EAAOA,EAAOvV,OAAS,GAAG,GAAG6B,IAAM,CAChEL,KAAM,EACNP,OAAQ,EACRqV,OAAQ,KAKZ/P,GAAS,IACAA,EAAQikB,EAAOC,WAAWzqB,QACjCwQ,EAAOga,EAAOC,WAAWlkB,GAAOiK,IAASA,EAE3C,OAAOA,CACT,CAQA,SAASqf,EAAYta,EAAQhU,EAAOvB,GAYlC,IAXA,IAIIgsB,EAEArU,EAEAsY,EAEArS,EAVArX,EAAQhF,EAAQ,EAChB2uB,GAAoB,EACpBC,GAAa,IASR5pB,GAASvG,GAAQ,CACxB,IAAI0X,EAAQnC,EAAOhP,GAoBnB,GAnBsB,kBAAlBmR,EAAM,GAAGvU,MAA8C,gBAAlBuU,EAAM,GAAGvU,MAA4C,eAAlBuU,EAAM,GAAGvU,MAClE,UAAbuU,EAAM,GACRwY,IAEAA,IAEFtS,OAAW9X,GACgB,oBAAlB4R,EAAM,GAAGvU,KACD,UAAbuU,EAAM,MACJsU,GAAapO,GAAasS,GAAqBD,IACjDA,EAAsB1pB,GAExBqX,OAAW9X,GAEc,eAAlB4R,EAAM,GAAGvU,MAA2C,kBAAlBuU,EAAM,GAAGvU,MAA8C,mBAAlBuU,EAAM,GAAGvU,MAA+C,mBAAlBuU,EAAM,GAAGvU,MAA+C,6BAAlBuU,EAAM,GAAGvU,OAGrKya,OAAW9X,IAERoqB,GAAiC,UAAbxY,EAAM,IAAoC,mBAAlBA,EAAM,GAAGvU,OAAmD,IAAtB+sB,GAAwC,SAAbxY,EAAM,KAAoC,kBAAlBA,EAAM,GAAGvU,MAA8C,gBAAlBuU,EAAM,GAAGvU,MAAyB,CAC/M,GAAI6oB,EAAU,CACZ,IAAIoE,EAAY7pB,EAEhB,IADAoR,OAAY7R,EACLsqB,KAAa,CAClB,IAAIC,EAAY9a,EAAO6a,GACvB,GAA0B,eAAtBC,EAAU,GAAGltB,MAA+C,oBAAtBktB,EAAU,GAAGltB,KAA4B,CACjF,GAAqB,SAAjBktB,EAAU,GAAe,SACzB1Y,IACFpC,EAAOoC,GAAW,GAAGxU,KAAO,kBAC5BgtB,GAAa,GAEfE,EAAU,GAAGltB,KAAO,aACpBwU,EAAYyY,CACd,MAAO,GAA0B,eAAtBC,EAAU,GAAGltB,MAA+C,qBAAtBktB,EAAU,GAAGltB,MAAqD,+BAAtBktB,EAAU,GAAGltB,MAA+D,qBAAtBktB,EAAU,GAAGltB,MAAqD,mBAAtBktB,EAAU,GAAGltB,KAG1M,KAEJ,CACI8sB,KAAyBtY,GAAasY,EAAsBtY,KAC9DqU,EAASsE,SAAU,GAIrBtE,EAASnqB,IAAMlE,OAAOyR,OAAO,CAAC,EAAGuI,EAAYpC,EAAOoC,GAAW,GAAGpW,MAAQmW,EAAM,GAAG7V,KACnF0T,EAAO/D,OAAOmG,GAAapR,EAAO,EAAG,CAAC,OAAQylB,EAAUtU,EAAM,KAC9DnR,IACAvG,GACF,CAGsB,mBAAlB0X,EAAM,GAAGvU,OACX6oB,EAAW,CACT7oB,KAAM,WACNmtB,SAAS,EACT/uB,MAAO5D,OAAOyR,OAAO,CAAC,EAAGsI,EAAM,GAAGnW,OAElCM,SAAKiE,GAGPyP,EAAO/D,OAAOjL,EAAO,EAAG,CAAC,QAASylB,EAAUtU,EAAM,KAClDnR,IACAvG,IACAiwB,OAAsBnqB,EACtB8X,GAAW,EAEf,CACF,CAEA,OADArI,EAAOhU,GAAO,GAAG+uB,QAAUH,EACpBnwB,CACT,CAcA,SAAS0vB,EAAQjxB,EAAKU,GACpB4L,EAAKtM,GAAOU,CACd,CAYA,SAASwwB,EAAQlxB,GACf,OAAOsM,EAAKtM,EACd,CAYA,SAASksB,EAAO3mB,EAAQusB,GACtB,OAAO/R,EAOP,SAASA,EAAK/J,GACZX,EAAMxV,KAAKsD,KAAMoC,EAAOyQ,GAAQA,GAC5B8b,GAAKA,EAAIjyB,KAAKsD,KAAM6S,EAC1B,CACF,CAMA,SAAS3J,IACPlJ,KAAK0F,MAAM9E,KAAK,CACdW,KAAM,WACNoO,SAAU,IAEd,CAgBA,SAASuC,EAAMrS,EAAMgT,EAAO+b,GAU1B,OATa5uB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAErCuR,SAAS/O,KAAKf,GACrBG,KAAK0F,MAAM9E,KAAKf,GAChBG,KAAK4tB,WAAWhtB,KAAK,CAACiS,EAAO+b,IAE7B/uB,EAAKH,SAAW,CACdC,MAAO,GAAMkT,EAAMlT,QAEdE,CACT,CAUA,SAASorB,EAAO0D,GACd,OAAO7K,EAOP,SAASA,EAAMjR,GACT8b,GAAKA,EAAIjyB,KAAKsD,KAAM6S,GACxBR,EAAK3V,KAAKsD,KAAM6S,EAClB,CACF,CAYA,SAASR,EAAKQ,EAAOgc,GACnB,IAAIhvB,EAAOG,KAAK0F,MAAMsG,MAClB4Q,EAAO5c,KAAK4tB,WAAW5hB,MAC3B,IAAK4Q,EACH,MAAM,IAAIpc,MAAM,iBAAmBqS,EAAMtR,KAAO,MAAQkD,EAAkB,CACxE9E,MAAOkT,EAAMlT,MACbM,IAAK4S,EAAM5S,MACR,oBAUP,OATW2c,EAAK,GAAGrb,OAASsR,EAAMtR,OAC5BstB,EACFA,EAAYnyB,KAAKsD,KAAM6S,EAAO+J,EAAK,KAErBA,EAAK,IAAMwR,IACjB1xB,KAAKsD,KAAM6S,EAAO+J,EAAK,KAGnC/c,EAAKH,SAASO,IAAM,GAAM4S,EAAM5S,KACzBJ,CACT,CAMA,SAASguB,IACP,OjDllBG,SAAkBtwB,EAAOJ,GAC9B,IAAIiQ,EAAWjQ,GAAWmS,GAG1B,OAAOC,GAAIhS,EAF+C,kBAA7B6P,EAASoC,iBAAgCpC,EAASoC,gBAC7B,kBAAzBpC,EAASqC,aAA4BrC,EAASqC,YAEzE,CiD6kBW,CAASzP,KAAK0F,MAAMsG,MAC7B,CAUA,SAASwe,IACPsD,EAAQ,+BAA+B,EACzC,CAMA,SAASxD,EAAqBzX,GACxBkb,EAAQ,iCACK/tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCuB,MAAQuN,OAAOib,SAASnoB,KAAK0X,eAAe7E,GAAQ,IAC7Dib,EAAQ,+BAEZ,CAMA,SAAS9B,IACP,IAAI7iB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC0wB,KAAO3lB,CACd,CAMA,SAAS8iB,IACP,IAAI9iB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCmkB,KAAOpZ,CACd,CAMA,SAAS4iB,IAEHgC,EAAQ,oBACZ/tB,KAAKkJ,SACL4kB,EAAQ,kBAAkB,GAC5B,CAMA,SAASjC,IACP,IAAI1iB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCb,MAAQ4L,EAAKlK,QAAQ,2BAA4B,IACtD6uB,EAAQ,iBACV,CAMA,SAAS5B,IACP,IAAI/iB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCb,MAAQ4L,EAAKlK,QAAQ,eAAgB,GAC5C,CAMA,SAASotB,EAA4BxZ,GACnC,IAAIoR,EAAQjkB,KAAK6tB,SACbhuB,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAC1CyB,EAAKokB,MAAQA,EACbpkB,EAAKwe,WAAaJ,GAAoBje,KAAK0X,eAAe7E,IAAQqL,aACpE,CAMA,SAASoO,IACP,IAAInjB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC2wB,MAAQ5lB,CACf,CAMA,SAASijB,IACP,IAAIjjB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC4H,IAAMmD,CACb,CAMA,SAASgiB,EAAyBtY,GAChC,IAAIhT,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAC1C,IAAKyB,EAAKmvB,MAAO,CACf,IAAIA,EAAQhvB,KAAK0X,eAAe7E,GAAOzU,OACvCyB,EAAKmvB,MAAQA,CACf,CACF,CAMA,SAASvB,IACPK,EAAQ,gCAAgC,EAC1C,CAMA,SAASP,EAAgC1a,GAC5B7S,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC4wB,MAAqD,KAA7ChvB,KAAK0X,eAAe7E,GAAOtM,WAAW,GAAY,EAAI,CACrE,CAMA,SAAS8mB,IACPS,EAAQ,+BACV,CAOA,SAAS5E,EAAYrW,GACnB,IAAIhT,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACtCqZ,EAAO5X,EAAK8P,SAAS9P,EAAK8P,SAASvR,OAAS,GAC3CqZ,GAAsB,SAAdA,EAAKlW,QAEhBkW,EAAOW,MAEF1Y,SAAW,CACdC,MAAO,GAAMkT,EAAMlT,QAGrBE,EAAK8P,SAAS/O,KAAK6W,IAErBzX,KAAK0F,MAAM9E,KAAK6W,EAClB,CAOA,SAAS8T,EAAW1Y,GAClB,IAAI4E,EAAOzX,KAAK0F,MAAMsG,MACtByL,EAAKla,OAASyC,KAAK0X,eAAe7E,GAClC4E,EAAK/X,SAASO,IAAM,GAAM4S,EAAM5S,IAClC,CAOA,SAAS6sB,EAAiBja,GACxB,IAAI4D,EAAUzW,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAE7C,GAAI2vB,EAAQ,eAIV,OAHWtX,EAAQ9G,SAAS8G,EAAQ9G,SAASvR,OAAS,GACjDsB,SAASO,IAAM,GAAM4S,EAAM5S,UAChC6tB,EAAQ,gBAGLC,EAAQ,iCAAmCnF,EAAOE,eAAerf,SAASgN,EAAQlV,QACrF2nB,EAAYxsB,KAAKsD,KAAM6S,GACvB0Y,EAAW7uB,KAAKsD,KAAM6S,GAE1B,CAOA,SAAS0Z,IACPuB,EAAQ,eAAe,EACzB,CAOA,SAAStB,IACP,IAAIrjB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCb,MAAQ4L,CACf,CAOA,SAASsjB,IACP,IAAItjB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCb,MAAQ4L,CACf,CAOA,SAASgjB,IACP,IAAIhjB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrCb,MAAQ4L,CACf,CAOA,SAAS4jB,IACP,IAAIltB,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAI1C,GAAI2vB,EAAQ,eAAgB,CAE1B,IAAIkB,EAAgBlB,EAAQ,kBAAoB,WAChDluB,EAAK0B,MAAQ,YAEb1B,EAAKovB,cAAgBA,SAEdpvB,EAAKmG,WACLnG,EAAKkvB,KACd,aAESlvB,EAAKwe,kBAELxe,EAAKokB,MAEd6J,EAAQ,gBACV,CAOA,SAASpB,IACP,IAAI7sB,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAI1C,GAAI2vB,EAAQ,eAAgB,CAE1B,IAAIkB,EAAgBlB,EAAQ,kBAAoB,WAChDluB,EAAK0B,MAAQ,YAEb1B,EAAKovB,cAAgBA,SAEdpvB,EAAKmG,WACLnG,EAAKkvB,KACd,aAESlvB,EAAKwe,kBAELxe,EAAKokB,MAEd6J,EAAQ,gBACV,CAOA,SAASjB,EAAgBha,GACvB,IAAIoF,EAASjY,KAAK0X,eAAe7E,GAC7Bqc,EAAWlvB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAG9C8wB,EAASjL,MDh5BN,SAAsB1mB,GAC3B,OAAOA,EAAM0B,QAAQmpB,GAA4BC,GACnD,CC84BqB8G,CAAalX,GAE9BiX,EAAS7Q,WAAaJ,GAAoBhG,GAAQiG,aACpD,CAOA,SAASyO,IACP,IAAIyC,EAAWpvB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAC1Cb,EAAQyC,KAAK6tB,SACbhuB,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAG1C,GADA0vB,EAAQ,eAAe,GACL,SAAdjuB,EAAK0B,KAAiB,CAGxB,IAAIoO,EAAWyf,EAASzf,SACxB9P,EAAK8P,SAAWA,CAClB,MACE9P,EAAK6P,IAAMnS,CAEf,CAOA,SAAS0vB,IACP,IAAI9jB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC4H,IAAMmD,CACb,CAOA,SAAS+jB,IACP,IAAI/jB,EAAOnJ,KAAK6tB,SACL7tB,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC2wB,MAAQ5lB,CACf,CAOA,SAASikB,IACPU,EAAQ,cACV,CAOA,SAASnD,IACPmD,EAAQ,gBAAiB,YAC3B,CAOA,SAASd,EAAsBna,GAC7B,IAAIoR,EAAQjkB,KAAK6tB,SACbhuB,EAAOG,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GAG1CyB,EAAKokB,MAAQA,EAEbpkB,EAAKwe,WAAaJ,GAAoBje,KAAK0X,eAAe7E,IAAQqL,cAClE4P,EAAQ,gBAAiB,OAC3B,CAOA,SAASrC,EAA+B5Y,GACtCib,EAAQ,yBAA0Bjb,EAAMtR,KAC1C,CAMA,SAASqqB,EAA8B/Y,GACrC,IAGItV,EAHA4L,EAAOnJ,KAAK0X,eAAe7E,GAC3BtR,EAAOwsB,EAAQ,0BAGfxsB,GACFhE,EAAQ2qB,GAAgC/e,EAAe,oCAAT5H,EAA6C,GAAK,IAChGusB,EAAQ,2BAGRvwB,EADaqlB,GAA8BzZ,GAG7C,IAAIsO,EAAOzX,KAAK0F,MAAMsG,MACtByL,EAAKla,OAASA,EACdka,EAAK/X,SAASO,IAAM,GAAM4S,EAAM5S,IAClC,CAMA,SAASorB,EAAuBxY,GAC9B0Y,EAAW7uB,KAAKsD,KAAM6S,GACX7S,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC4H,IAAMhG,KAAK0X,eAAe7E,EACjC,CAMA,SAASuY,EAAoBvY,GAC3B0Y,EAAW7uB,KAAKsD,KAAM6S,GACX7S,KAAK0F,MAAM1F,KAAK0F,MAAMtH,OAAS,GACrC4H,IAAM,UAAYhG,KAAK0X,eAAe7E,EAC7C,CAOA,SAAS8J,IACP,MAAO,CACLpb,KAAM,aACNoO,SAAU,GAEd,CAGA,SAAS0Z,IACP,MAAO,CACL9nB,KAAM,OACNutB,KAAM,KACNvM,KAAM,KACNhlB,MAAO,GAEX,CAGA,SAASoqB,IACP,MAAO,CACLpmB,KAAM,aACNhE,MAAO,GAEX,CAGA,SAAS6gB,IACP,MAAO,CACL7c,KAAM,aACN8c,WAAY,GACZ4F,MAAO,KACP8K,MAAO,KACP/oB,IAAK,GAET,CAGA,SAAS6jB,IACP,MAAO,CACLtoB,KAAM,WACNoO,SAAU,GAEd,CAGA,SAAS6P,IAEP,MAAO,CACLje,KAAM,UACNytB,WAAO9qB,EACPyL,SAAU,GAEd,CAGA,SAASma,KACP,MAAO,CACLvoB,KAAM,QAEV,CAGA,SAASyoB,KACP,MAAO,CACLzoB,KAAM,OACNhE,MAAO,GAEX,CAGA,SAAS4sB,KACP,MAAO,CACL5oB,KAAM,QACNwtB,MAAO,KACP/oB,IAAK,GACL0J,IAAK,KAET,CAGA,SAASsZ,KACP,MAAO,CACLznB,KAAM,OACNwtB,MAAO,KACP/oB,IAAK,GACL2J,SAAU,GAEd,CAMA,SAASE,GAAKgD,GACZ,MAAO,CACLtR,KAAM,OACN8tB,QAAwB,gBAAfxc,EAAMtR,KACf5B,MAAO,KACP2vB,OAAQzc,EAAM6b,QACd/e,SAAU,GAEd,CAMA,SAASya,GAASvX,GAChB,MAAO,CACLtR,KAAM,WACN+tB,OAAQzc,EAAM6b,QACda,QAAS,KACT5f,SAAU,GAEd,CAGA,SAAS4P,KACP,MAAO,CACLhe,KAAM,YACNoO,SAAU,GAEd,CAGA,SAASqb,KACP,MAAO,CACLzpB,KAAM,SACNoO,SAAU,GAEd,CAGA,SAASyI,KACP,MAAO,CACL7W,KAAM,OACNhE,MAAO,GAEX,CAGA,SAASoe,KACP,MAAO,CACLpa,KAAM,gBAEV,CACF,CAhgCSiuB,CAASryB,EAATqyB,CCjLF,SAAqB7b,GAC1B,MAAQkC,GAAYlC,KAGpB,OAAOA,CACT,CD4K2B8b,CAAY1hB,GAAM5Q,GAASoY,WAAWH,MHvK1D,WACL,IAKIsa,EALArwB,EAAS,EACT6J,EAAS,GAETvJ,GAAQ,EAGZ,OAGA,SAAsBpC,EAAOsM,EAAU5J,GAErC,IAEIT,EAEAyM,EAEAyK,EAEAiZ,EAEA3oB,EAVAyR,EAAS,GAuBb,IAVAlb,EAAQ2L,EAAS3L,EAAMpB,SAAS0N,GAChC6M,EAAgB,EAChBxN,EAAS,GACLvJ,IAE0B,QAAxBpC,EAAMgJ,WAAW,IACnBmQ,IAEF/W,OAAQuE,GAEHwS,EAAgBnZ,EAAMa,QAAQ,CAKnC,GAJA6pB,GAAO2H,UAAYlZ,EAEnBiZ,GADAnwB,EAAQyoB,GAAOlnB,KAAKxD,UACmB2G,IAAhB1E,EAAMmF,MAAsBnF,EAAMmF,MAAQpH,EAAMa,OACvE4I,EAAOzJ,EAAMgJ,WAAWopB,IACnBnwB,EAAO,CACV0J,EAAS3L,EAAMyD,MAAM0V,GACrB,KACF,CACA,GAAa,KAAT1P,GAAe0P,IAAkBiZ,GAAeD,EAClDjX,EAAO7X,MAAM,GACb8uB,OAAmBxrB,OAUnB,OARIwrB,IACFjX,EAAO7X,MAAM,GACb8uB,OAAmBxrB,GAEjBwS,EAAgBiZ,IAClBlX,EAAO7X,KAAKrD,EAAMyD,MAAM0V,EAAeiZ,IACvCtwB,GAAUswB,EAAcjZ,GAElB1P,GACN,KAAK,EAEDyR,EAAO7X,KAAK,OACZvB,IACA,MAEJ,KAAK,EAID,IAFA4M,EAA+B,EAAxB4jB,KAAKC,KAAKzwB,EAAS,GAC1BoZ,EAAO7X,MAAM,GACNvB,IAAW4M,GAChBwM,EAAO7X,MAAM,GAEf,MAEJ,KAAK,GAED6X,EAAO7X,MAAM,GACbvB,EAAS,EACT,MAEJ,QAEIqwB,GAAmB,EACnBrwB,EAAS,EAIjBqX,EAAgBiZ,EAAc,CAChC,CAMA,OALI1vB,IACEyvB,GAAkBjX,EAAO7X,MAAM,GAC/BsI,GAAQuP,EAAO7X,KAAKsI,GACxBuP,EAAO7X,KAAK,OAEP6X,CACT,CACF,CGyEuEsX,GAAaxyB,EAAOsM,GAAU,KACrG,EAygCA,SAAS,GAAMmmB,GACb,MAAO,CACLpwB,KAAMowB,EAAEpwB,KACRP,OAAQ2wB,EAAE3wB,OACVqV,OAAQsb,EAAEtb,OAEd,CAOA,SAASgZ,GAAUuC,EAAUlI,GAE3B,IADA,IAAIpjB,GAAS,IACJA,EAAQojB,EAAW3pB,QAAQ,CAClC,IAAIb,EAAQwqB,EAAWpjB,GACnBlI,MAAMF,QAAQgB,GAChBmwB,GAAUuC,EAAU1yB,GAEpB8S,GAAU4f,EAAU1yB,EAExB,CACF,CAOA,SAAS8S,GAAU4f,EAAU5f,GAE3B,IAAIxT,EACJ,IAAKA,KAAOwT,EACV,GAAI,GAAI3T,KAAK2T,EAAWxT,GACtB,GAAY,mBAARA,EAA0B,CAC5B,IAEMqzB,EAFF1f,EAAQH,EAAUxT,GACtB,GAAI2T,GAED0f,EAAgBD,EAASpzB,IAAM+D,KAAKgD,MAAMssB,GAAe,OAAmB1f,GAEjF,MAAO,GAAY,eAAR3T,EAAsB,CAC/B,IAEMszB,EAFFC,EAAS/f,EAAUxT,GACvB,GAAIuzB,GAEDD,EAAiBF,EAASpzB,IAAM+D,KAAKgD,MAAMusB,GAAgB,OAAmBC,GAEnF,MAAO,GAAY,UAARvzB,GAA2B,SAARA,EAAgB,CAC5C,IAAIwzB,EAAUhgB,EAAUxT,GACpBwzB,GACFt0B,OAAOyR,OAAOyiB,EAASpzB,GAAMwzB,EAEjC,CAGN,CAGA,SAASjC,GAAe7d,EAAMC,GAC5B,MAAID,EACI,IAAI/P,MAAM,iBAAmB+P,EAAKhP,KAAO,MAAQkD,EAAkB,CACvE9E,MAAO4Q,EAAK5Q,MACZM,IAAKsQ,EAAKtQ,MACP,0BAA4BuQ,EAAMjP,KAAO,MAAQkD,EAAkB,CACtE9E,MAAO6Q,EAAM7Q,MACbM,IAAKuQ,EAAMvQ,MACR,aAEC,IAAIO,MAAM,oCAAsCgQ,EAAMjP,KAAO,MAAQkD,EAAkB,CAC3F9E,MAAO6Q,EAAM7Q,MACbM,IAAKuQ,EAAMvQ,MACR,kBAET,CEnwCe,SAASqwB,GAAYnzB,GAClC,IAAIoI,EAAQvF,KAaZjE,OAAOyR,OAAOxN,KAAM,CAClB4M,OAZW,SAAgBoB,GAE3B,IAAIZ,EAAiC7H,EAAM4D,KAAK,YAChD,OAAOwf,GAAa3a,EAAKjS,OAAOyR,OAAO,CAAC,EAAGJ,EAAUjQ,EAAS,CAI5D4qB,WAAYxiB,EAAM4D,KAAK,wBAA0B,GACjDwkB,gBAAiBpoB,EAAM4D,KAAK,2BAA6B,KAE7D,GAIF,CCLwB,GAAW,YCb5B,ID2BI,GAAoB,GAAW,cAuBlB,GAAW,uBAgCX,GAAW,MAoBR,GAAW,cAeR,GAAW,kBA0ET,GC/LK,wwCDqNN,GAAW,MAQ1C,SAAS,GAAWsI,GAClB,OAUA,SAAezK,GACb,OAAgB,OAATA,GAAiByK,EAAMC,KAAKtD,OAAOuD,aAAa3K,GACzD,CACF,CE7LO,SAASupB,GAAahzB,GAM3B,IAJA,IAAIwH,EAAS,GACTJ,GAAS,EACThF,EAAQ,EACR6wB,EAAO,IACF7rB,EAAQpH,EAAMa,QAAQ,CAC7B,IAAI4I,EAAOzJ,EAAMgJ,WAAW5B,GAExB1F,EAAU,GAGd,GAAa,KAAT+H,GAAe,GAAkBzJ,EAAMgJ,WAAW5B,EAAQ,KAAO,GAAkBpH,EAAMgJ,WAAW5B,EAAQ,IAC9G6rB,EAAO,OAGJ,GAAIxpB,EAAO,IACT,oBAAoB0K,KAAKtD,OAAOuD,aAAa3K,MAChD/H,EAAUmP,OAAOuD,aAAa3K,SAI7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,IAAIiF,EAAO1O,EAAMgJ,WAAW5B,EAAQ,GAGhCqC,EAAO,OAASiF,EAAO,OAASA,EAAO,OACzChN,EAAUmP,OAAOuD,aAAa3K,EAAMiF,GACpCukB,EAAO,GAIPvxB,EAAU,GAEd,MAGEA,EAAUmP,OAAOuD,aAAa3K,GAE5B/H,IACF8F,EAAOnE,KAAKrD,EAAMyD,MAAMrB,EAAOgF,GAAQ8rB,mBAAmBxxB,IAC1DU,EAAQgF,EAAQ6rB,EAAO,EACvBvxB,EAAU,IAERuxB,IACF7rB,GAAS6rB,EACTA,EAAO,EAEX,CACA,OAAOzrB,EAAOkC,KAAK,IAAM1J,EAAMyD,MAAMrB,EACvC,CCzGA,SAAS+wB,GAAQC,EAAQC,GAAkB,IAAIzhB,EAAOpT,OAAOoT,KAAKwhB,GAAS,GAAI50B,OAAO80B,sBAAuB,CAAE,IAAIC,EAAU/0B,OAAO80B,sBAAsBF,GAASC,IAAmBE,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOj1B,OAAOO,yBAAyBq0B,EAAQK,GAAK3zB,UAAY,KAAK8R,EAAKvO,KAAKgD,MAAMuL,EAAM2hB,EAAU,CAAE,OAAO3hB,CAAM,CACpV,SAAS8hB,GAAc/zB,GAAU,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CAAE,IAAI+B,EAAS,MAAQhC,UAAUC,GAAKD,UAAUC,GAAK,CAAC,EAAGA,EAAI,EAAIuyB,GAAQ30B,OAAOmE,IAAS,GAAItE,SAAQ,SAAUiB,IAAO,OAAgBK,EAAQL,EAAKqD,EAAOrD,GAAO,IAAKd,OAAOm1B,0BAA4Bn1B,OAAOo1B,iBAAiBj0B,EAAQnB,OAAOm1B,0BAA0BhxB,IAAWwwB,GAAQ30B,OAAOmE,IAAStE,SAAQ,SAAUiB,GAAOd,OAAOK,eAAec,EAAQL,EAAKd,OAAOO,yBAAyB4D,EAAQrD,GAAO,GAAI,CAAE,OAAOK,CAAQ,CC0Flf,IAsDIk0B,GAYX,SAAiB1f,GACf,GAAIA,QACF,OAAOI,GAET,GAAoB,iBAATJ,EACT,OAwEJ,SAAqB0C,GACnB,OAAOid,GAAY9vB,GAKnB,SAASA,EAAK1B,GACZ,OAAOA,GAAQA,EAAK0B,OAAS6S,CAC/B,CACF,CAjFWkd,CAAY5f,GAErB,GAAoB,iBAATA,EACT,OAAOjV,MAAMF,QAAQmV,GAAQ6f,GAAW7f,GA6C5C,SAAsB0C,GACpB,OAAOid,GAAYjhB,GAMnB,SAASA,EAAIvQ,GAEX,IAAIhD,EACJ,IAAKA,KAAOuX,EAEV,GAAIvU,EAAKhD,KAASuX,EAAMvX,GAAM,OAAO,EAEvC,OAAO,CACT,CACF,CA7DoD20B,CAAa9f,GAE/D,GAAoB,mBAATA,EACT,OAAO2f,GAAY3f,GAErB,MAAM,IAAIlR,MAAM,+CAClB,EAMA,SAAS+wB,GAAWE,GAIlB,IAFA,IAAIC,EAAS,GACT/sB,GAAS,IACJA,EAAQ8sB,EAAMrzB,QACrBszB,EAAO/sB,GAASysB,GAAQK,EAAM9sB,IAEhC,OAAO0sB,IAOP,WAEE,IADA,IAAI1sB,GAAS,EACJwC,EAAOjJ,UAAUE,OAAQyM,EAAa,IAAIpO,MAAM0K,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IACrFwD,EAAWxD,GAAQnJ,UAAUmJ,GAE/B,OAAS1C,EAAQ+sB,EAAOtzB,QAAQ,CAC9B,IAAIuzB,EACJ,IAAKA,EAAgBD,EAAO/sB,IAAQjI,KAAKkH,MAAM+tB,EAAe,CAAC3xB,MAAMsL,OAAOT,IAAc,OAAO,CACnG,CACA,OAAO,CACT,GACF,CAiDA,SAASwmB,GAAYjd,GACnB,OAQA,SAAmBvU,GACjB,IAAK,IAAIqM,EAAQhO,UAAUE,OAAQyM,EAAa,IAAIpO,MAAMyP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC9GtB,EAAWsB,EAAQ,GAAKjO,UAAUiO,GAEpC,OAAO/I,QAAQvD,GAAwB,iBAATA,GAAqB,SAAUA,GAE7DuD,QAAQgR,EAAM1X,KAAKkH,MAAMwQ,EAAO,CAACpU,KAAMH,GAAMyL,OAAOT,KACtD,CACF,CACA,SAASiH,KACP,OAAO,CACT,CChMO,IAyCI8f,GAeX,SAAsBhjB,EAAM8C,EAAMmgB,EAASC,GACrB,mBAATpgB,GAA0C,mBAAZmgB,IACvCC,EAAUD,EAEVA,EAAUngB,EACVA,EAAO,MAET,IAAIqgB,EAAKX,GAAQ1f,GACbsgB,EAAOF,GAAW,EAAI,GAQ1B,SAASG,EAAQpyB,EAAM8E,EAAOutB,GAG5B,IAAI30B,EAAQsC,GAAwB,iBAATA,EAAoBA,EAAO,CAAC,EACvD,GAA0B,iBAAftC,EAAMgE,KAAmB,CAClC,IAAInE,EAEqB,iBAAlBG,EAAM1B,QAAuB0B,EAAM1B,QAEpB,iBAAf0B,EAAMH,KAAoBG,EAAMH,UAAO8G,EAC9CnI,OAAOK,eAAe+1B,EAAO,OAAQ,CACnC50B,MAAO,SAAiBsC,EAAK0B,MAAQnE,EAAO,IAAMA,EAAO,IAAM,IAAO,KAE1E,CACA,OAAO+0B,EACP,SAASA,IAEP,IAEIC,EAEA1d,EAEA2d,EANAttB,EAAS,GAOb,KAAK2M,GAAQqgB,EAAGlyB,EAAM8E,EAAOutB,EAAQA,EAAQ9zB,OAAS,IAAM,SAC1D2G,EAoCR,SAAkBxH,GAChB,GAAId,MAAMF,QAAQgB,GAChB,OAAOA,EAET,GAAqB,iBAAVA,EACT,MAAO,CA1IW,KA0IAA,GAEpB,MAAO,CAACA,EACV,CA5CiB+0B,CAAST,EAAQhyB,EAAMqyB,IA5FtB,QA6FNntB,EAAO,IACT,OAAOA,EAKX,GAAIlF,EAAK8P,UA9FG,SA8FS5K,EAAO,GAO1B,IALA2P,GAAUod,EAAUjyB,EAAK8P,SAASvR,QAAU,GAAK4zB,EAEjDK,EAAeH,EAAQ5mB,OAAOzL,GAGvB6U,GAAU,GAAKA,EAAS7U,EAAK8P,SAASvR,QAAQ,CAGnD,GADAg0B,EAAYH,EAAQpyB,EAAK8P,SAAS+E,GAASA,EAAQ2d,EAAvCJ,GA5GJ,QA6GJG,EAAU,GACZ,OAAOA,EAET1d,EAAiC,iBAAjB0d,EAAU,GAAkBA,EAAU,GAAK1d,EAASsd,CACtE,CAEF,OAAOjtB,CACT,CACF,CAzDAktB,CAAQrjB,OAAM1K,EAAW,GAAzB+tB,EA0DF,EC7DO,IAAIE,GAeX,SAAevjB,EAAM8C,EAAMmgB,EAASC,GACd,mBAATpgB,GAA0C,mBAAZmgB,IACvCC,EAAUD,EACVA,EAAUngB,EACVA,EAAO,MAETkgB,GAAahjB,EAAM8C,GAMnB,SAAkB7R,EAAMqyB,GACtB,IAAIK,EAASL,EAAQA,EAAQ9zB,OAAS,GACtC,OAAOyzB,EAAQhyB,EAAM0yB,EAASA,EAAO5iB,SAASvL,QAAQvE,GAAQ,KAAM0yB,EACtE,GATmCT,EAUrC,EChJWU,GAAa,GAAM,SAUnBC,GAAW,GAAM,OAyB5B,SAAS,GAAMlxB,GACb,OAQA,SAAe1B,GACb,IAAI6E,EAAQ7E,GAAQA,EAAKH,UAAYG,EAAKH,SAAS6B,IAAS,CAAC,EAG7D,MAAO,CAEL3B,KAAM8E,EAAM9E,MAAQ,KAEpBP,OAAQqF,EAAMrF,QAAU,KAExBqV,OAAQhQ,EAAMgQ,QAAU,EAAIhQ,EAAMgQ,OAAS,KAE/C,CACF,CCpEA,IAAI,GAAM,CAAC,EAAEzY,eAuCb,SAASy2B,GAAMn1B,GACb,OAAO6Q,OAAO7Q,GAAS,IAAI4gB,aAC7B,CCzCO,SAASwU,GAAkB9Y,EAAOha,GACvC,IAII+yB,EAJAC,EAAKzkB,OAAOvO,EAAKwe,YAAYF,cAC7B2U,EAASvC,GAAasC,EAAG3U,eACzBvZ,EAAQkV,EAAMkZ,cAAc3uB,QAAQyuB,IAGzB,IAAXluB,GACFkV,EAAMkZ,cAAcnyB,KAAKiyB,GACzBhZ,EAAMmZ,eAAeH,GAAM,EAC3BD,EAAU/Y,EAAMkZ,cAAc30B,SAE9Byb,EAAMmZ,eAAeH,KACrBD,EAAUjuB,EAAQ,GAEpB,IAAIsuB,EAAepZ,EAAMmZ,eAAeH,GAGpC7J,EAAO,CACTznB,KAAM,UACN1F,QAAS,IACTq3B,WAAY,CACV7qB,KAAM,IAAMwR,EAAMsZ,cAAgB,MAAQL,EAC1CD,GAAIhZ,EAAMsZ,cAAgB,SAAWL,GAAUG,EAAe,EAAI,IAAMA,EAAe,IACvFG,iBAAiB,EACjBC,gBAAiB,CAAC,mBAEpB1jB,SAAU,CAAC,CACTpO,KAAM,OACNhE,MAAO6Q,OAAOwkB,MAGlB/Y,EAAMyZ,MAAMzzB,EAAMmpB,GAGlB,IAAIuK,EAAM,CACRhyB,KAAM,UACN1F,QAAS,MACTq3B,WAAY,CAAC,EACbvjB,SAAU,CAACqZ,IAGb,OADAnP,EAAMyZ,MAAMzzB,EAAM0zB,GACX1Z,EAAM2Z,UAAU3zB,EAAM0zB,EAC/B,CCjCO,SAASE,GAAO5Z,EAAOha,GAC5B,IAAI6zB,EAAU7zB,EAAKovB,cACf0E,EAAS,IAMb,GALgB,cAAZD,EACFC,GAAU,KACW,SAAZD,IACTC,GAAU,KAAO9zB,EAAKokB,OAASpkB,EAAKwe,YAAc,KAElC,mBAAdxe,EAAK0B,KACP,MAAO,CACLA,KAAM,OACNhE,MAAO,KAAOsC,EAAK6P,IAAMikB,GAG7B,IAAIC,EAAW/Z,EAAMzJ,IAAIvQ,GACrBsa,EAAOyZ,EAAS,GAChBzZ,GAAsB,SAAdA,EAAK5Y,KACf4Y,EAAK5c,MAAQ,IAAM4c,EAAK5c,MAExBq2B,EAAS1jB,QAAQ,CACf3O,KAAM,OACNhE,MAAO,MAGX,IAAIka,EAAOmc,EAASA,EAASx1B,OAAS,GAStC,OARIqZ,GAAsB,SAAdA,EAAKlW,KACfkW,EAAKla,OAASo2B,EAEdC,EAAShzB,KAAK,CACZW,KAAM,OACNhE,MAAOo2B,IAGJC,CACT,CCsEA,SAASC,GAAch0B,GACrB,IAAIyvB,EAASzvB,EAAKyvB,OAClB,OAAOA,QAA0CzvB,EAAK8P,SAASvR,OAAS,EAAIkxB,CAC9E,CC1HO,SAASwE,GAAUv2B,GAOxB,IANA,IAAI2C,EAASkO,OAAO7Q,GAChB0qB,EAAS,YACTzoB,EAAQyoB,EAAOlnB,KAAKb,GACpB6zB,EAAO,EAEPx0B,EAAQ,GACLC,GACLD,EAAMqB,KAAKozB,GAAS9zB,EAAOc,MAAM+yB,EAAMv0B,EAAMmF,OAAQovB,EAAO,GAAG,GAAOv0B,EAAM,IAC5Eu0B,EAAOv0B,EAAMmF,MAAQnF,EAAM,GAAGpB,OAC9BoB,EAAQyoB,EAAOlnB,KAAKb,GAGtB,OADAX,EAAMqB,KAAKozB,GAAS9zB,EAAOc,MAAM+yB,GAAOA,EAAO,GAAG,IAC3Cx0B,EAAM0H,KAAK,GACpB,CAYA,SAAS+sB,GAASz2B,EAAOoC,EAAOM,GAC9B,IAAI8Z,EAAa,EACbE,EAAW1c,EAAMa,OACrB,GAAIuB,EAEF,IADA,IAAIqH,EAAOzJ,EAAM02B,YAAYla,GA1CvB,IA2CC/S,GA1CC,KA0CeA,GACrB+S,IACA/S,EAAOzJ,EAAM02B,YAAYla,GAG7B,GAAI9Z,EAEF,IADA,IAAIi0B,EAAQ32B,EAAM02B,YAAYha,EAAW,GAjDnC,IAkDCia,GAjDC,KAiDgBA,GACtBja,IACAia,EAAQ32B,EAAM02B,YAAYha,EAAW,GAGzC,OAAOA,EAAWF,EAAaxc,EAAMyD,MAAM+Y,EAAYE,GAAY,EACrE,CC5BO,IAAIka,GAAW,CACpBC,WCbK,SAAoBva,EAAOha,GAEhC,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,aACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAKqP,EAAMzJ,IAAIvQ,IAAO,IAGxC,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EDIEsvB,MEbK,SAAmBxa,EAAOha,GAE/B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CAAC,EACbvjB,SAAU,IAGZ,OADAkK,EAAMyZ,MAAMzzB,EAAMkF,GACX,CAAC8U,EAAM2Z,UAAU3zB,EAAMkF,GAAS,CACrCxD,KAAM,OACNhE,MAAO,MAEX,EFCEyJ,KGbK,SAAc6S,EAAOha,GAC1B,IAAItC,EAAQsC,EAAKtC,MAAQsC,EAAKtC,MAAQ,KAAO,GAGzCuxB,EAAOjvB,EAAKivB,KAAOjvB,EAAKivB,KAAKtvB,MAAM,uBAAyB,KAE5D0zB,EAAa,CAAC,EACdpE,IACFoE,EAAWoB,UAAY,CAAC,YAAcxF,IAKxC,IAAI/pB,EAAS,CACXxD,KAAM,UACN1F,QAAS,OACTq3B,WAAYA,EACZvjB,SAAU,CAAC,CACTpO,KAAM,OACNhE,MAAOA,KAmBX,OAhBIsC,EAAK0iB,OACPxd,EAAOoE,KAAO,CACZoZ,KAAM1iB,EAAK0iB,OAGf1I,EAAMyZ,MAAMzzB,EAAMkF,GAIlBA,EAAS,CACPxD,KAAM,UACN1F,QAAS,MACTq3B,WAAY,CAAC,EACbvjB,SAAU,CAPZ5K,EAAS8U,EAAM2Z,UAAU3zB,EAAMkF,KAS/B8U,EAAMyZ,MAAMzzB,EAAMkF,GACXA,CACT,EHzBEwvB,OIfK,SAAuB1a,EAAOha,GAEnC,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,MACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EJME8kB,SKjBK,SAAkBhQ,EAAOha,GAE9B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,ELQE4tB,kBAAmBA,GACnB6B,SMXK,SAAkB3a,EAAOha,GAG9B,IAFA,IAAI40B,EAAe5a,EAAM4a,aACrBC,EAAK,EACFA,KAAMD,GACXC,IAEF,IAAIrW,EAAajQ,OAAOsmB,GAUxB,OATAD,EAAapW,GAAc,CACzB9c,KAAM,qBACN8c,WAAYA,EACZ1O,SAAU,CAAC,CACTpO,KAAM,YACNoO,SAAU9P,EAAK8P,WAEjBjQ,SAAUG,EAAKH,UAEVizB,GAAkB9Y,EAAO,CAC9BtY,KAAM,oBACN8c,WAAYA,EACZ3e,SAAUG,EAAKH,UAEnB,ENTE8f,QOpBK,SAAiB3F,EAAOha,GAE7B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,IAAMgE,EAAKmvB,MACpBkE,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EPWEilB,KQnBK,SAAcnQ,EAAOha,GAC1B,GAAIga,EAAM8a,UAAW,CAEnB,IAAI5vB,EAAS,CACXxD,KAAM,MACNhE,MAAOsC,EAAKtC,OAGd,OADAsc,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,CAGA,OAAO,IACT,EROE6vB,eSjBK,SAAwB/a,EAAOha,GACpC,IAAIob,EAAMpB,EAAMuE,WAAWve,EAAKwe,YAChC,IAAKpD,EACH,OAAOwY,GAAO5Z,EAAOha,GAIvB,IAAIqzB,EAAa,CACfp1B,IAAKyyB,GAAatV,EAAIjV,KAAO,IAC7B0J,IAAK7P,EAAK6P,KAEM,OAAduL,EAAI8T,YAAgC7qB,IAAd+W,EAAI8T,QAC5BmE,EAAWnE,MAAQ9T,EAAI8T,OAIzB,IAAIhqB,EAAS,CACXxD,KAAM,UACN1F,QAAS,MACTq3B,WAAYA,EACZvjB,SAAU,IAGZ,OADAkK,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,ETNEolB,MUpBK,SAAetQ,EAAOha,GAE3B,IAAIqzB,EAAa,CACfp1B,IAAKyyB,GAAa1wB,EAAKmG,MAER,OAAbnG,EAAK6P,UAA6BxL,IAAbrE,EAAK6P,MAC5BwjB,EAAWxjB,IAAM7P,EAAK6P,KAEL,OAAf7P,EAAKkvB,YAAiC7qB,IAAfrE,EAAKkvB,QAC9BmE,EAAWnE,MAAQlvB,EAAKkvB,OAI1B,IAAIhqB,EAAS,CACXxD,KAAM,UACN1F,QAAS,MACTq3B,WAAYA,EACZvjB,SAAU,IAGZ,OADAkK,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EVAE8vB,WWvBK,SAAoBhb,EAAOha,GAEhC,IAAIuY,EAAO,CACT7W,KAAM,OACNhE,MAAOsC,EAAKtC,MAAM0B,QAAQ,YAAa,MAEzC4a,EAAMyZ,MAAMzzB,EAAMuY,GAGlB,IAAIrT,EAAS,CACXxD,KAAM,UACN1F,QAAS,OACTq3B,WAAY,CAAC,EACbvjB,SAAU,CAACyI,IAGb,OADAyB,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EXOE+vB,cYpBK,SAAuBjb,EAAOha,GACnC,IAAIob,EAAMpB,EAAMuE,WAAWve,EAAKwe,YAChC,IAAKpD,EACH,OAAOwY,GAAO5Z,EAAOha,GAIvB,IAAIqzB,EAAa,CACf7qB,KAAMkoB,GAAatV,EAAIjV,KAAO,KAEd,OAAdiV,EAAI8T,YAAgC7qB,IAAd+W,EAAI8T,QAC5BmE,EAAWnE,MAAQ9T,EAAI8T,OAIzB,IAAIhqB,EAAS,CACXxD,KAAM,UACN1F,QAAS,IACTq3B,WAAYA,EACZvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EZFEikB,KavBK,SAAcnP,EAAOha,GAE1B,IAAIqzB,EAAa,CACf7qB,KAAMkoB,GAAa1wB,EAAKmG,MAEP,OAAfnG,EAAKkvB,YAAiC7qB,IAAfrE,EAAKkvB,QAC9BmE,EAAWnE,MAAQlvB,EAAKkvB,OAI1B,IAAIhqB,EAAS,CACXxD,KAAM,UACN1F,QAAS,IACTq3B,WAAYA,EACZvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EbMEqlB,SFdK,SAAkBvQ,EAAOha,EAAM0yB,GACpC,IAAIwC,EAAUlb,EAAMzJ,IAAIvQ,GACpBm1B,EAAQzC,EAmFd,SAAmB1yB,GACjB,IAAIm1B,GAAQ,EACZ,GAAkB,SAAdn1B,EAAK0B,KAAiB,CACxByzB,EAAQn1B,EAAKyvB,SAAU,EAGvB,IAFA,IAAI3f,EAAW9P,EAAK8P,SAChBhL,GAAS,GACLqwB,KAAWrwB,EAAQgL,EAASvR,QAClC42B,EAAQnB,GAAclkB,EAAShL,GAEnC,CACA,OAAOqwB,CACT,CA9FuBC,CAAU1C,GAAUsB,GAAch0B,GAEnDqzB,EAAa,CAAC,EAEdvjB,EAAW,GACf,GAA4B,kBAAjB9P,EAAK0vB,QAAuB,CACrC,IAEIhQ,EAFApF,EAAO4a,EAAQ,GAGf5a,GAAsB,YAAdA,EAAK5Y,MAAuC,MAAjB4Y,EAAKte,QAC1C0jB,EAAYpF,GAEZoF,EAAY,CACVhe,KAAM,UACN1F,QAAS,IACTq3B,WAAY,CAAC,EACbvjB,SAAU,IAEZolB,EAAQ7kB,QAAQqP,IAEdA,EAAU5P,SAASvR,OAAS,GAC9BmhB,EAAU5P,SAASO,QAAQ,CACzB3O,KAAM,OACNhE,MAAO,MAGXgiB,EAAU5P,SAASO,QAAQ,CACzB3O,KAAM,UACN1F,QAAS,QACTq3B,WAAY,CACV3xB,KAAM,WACNguB,QAAS1vB,EAAK0vB,QACd2F,UAAU,GAEZvlB,SAAU,KAKZujB,EAAWoB,UAAY,CAAC,iBAC1B,CAEA,IADA,IAAI3vB,GAAS,IACJA,EAAQowB,EAAQ32B,QAAQ,CAC/B,IAAI+2B,EAAQJ,EAAQpwB,IAGhBqwB,GAAmB,IAAVrwB,GAA8B,YAAfwwB,EAAM5zB,MAAwC,MAAlB4zB,EAAMt5B,UAC5D8T,EAAS/O,KAAK,CACZW,KAAM,OACNhE,MAAO,OAGQ,YAAf43B,EAAM5zB,MAAwC,MAAlB4zB,EAAMt5B,SAAoBm5B,EAGxDrlB,EAAS/O,KAAKu0B,GAFdxlB,EAAS/O,KAAKgD,MAAM+L,GAAU,OAAmBwlB,EAAMxlB,UAI3D,CACA,IAAI8H,EAAOsd,EAAQA,EAAQ32B,OAAS,GAGhCqZ,IAASud,GAAuB,YAAdvd,EAAKlW,MAAuC,MAAjBkW,EAAK5b,UACpD8T,EAAS/O,KAAK,CACZW,KAAM,OACNhE,MAAO,OAKX,IAAIwH,EAAS,CACXxD,KAAM,UACN1F,QAAS,KACTq3B,WAAYA,EACZvjB,SAAUA,GAGZ,OADAkK,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EEhEE8K,Kc3BK,SAAcgK,EAAOha,GAE1B,IAAIqzB,EAAa,CAAC,EACd6B,EAAUlb,EAAMzJ,IAAIvQ,GACpB8E,GAAS,EAMb,IAL0B,iBAAf9E,EAAKF,OAAqC,IAAfE,EAAKF,QACzCuzB,EAAWvzB,MAAQE,EAAKF,SAIjBgF,EAAQowB,EAAQ32B,QAAQ,CAC/B,IAAI+2B,EAAQJ,EAAQpwB,GACpB,GAAmB,YAAfwwB,EAAM5zB,MAAwC,OAAlB4zB,EAAMt5B,SAAoBs5B,EAAMjC,YAAcz2B,MAAMF,QAAQ44B,EAAMjC,WAAWoB,YAAca,EAAMjC,WAAWoB,UAAU7qB,SAAS,kBAAmB,CAChLypB,EAAWoB,UAAY,CAAC,sBACxB,KACF,CACF,CAGA,IAAIvvB,EAAS,CACXxD,KAAM,UACN1F,QAASgE,EAAKwvB,QAAU,KAAO,KAC/B6D,WAAYA,EACZvjB,SAAUkK,EAAMrP,KAAKuqB,GAAS,IAGhC,OADAlb,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EdCEwa,Ue7BK,SAAmB1F,EAAOha,GAE/B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,IACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EfoBEqwB,KgB7BK,SAAcvb,EAAOha,GAE1B,IAAIkF,EAAS,CACXxD,KAAM,OACNoO,SAAUkK,EAAMrP,KAAKqP,EAAMzJ,IAAIvQ,KAGjC,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EhBsBEimB,OiB/BK,SAAgBnR,EAAOha,GAE5B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,SACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EjBsBEswB,MkB9BK,SAAexb,EAAOha,GAC3B,IAAIy1B,EAAOzb,EAAMzJ,IAAIvQ,GACjB01B,EAAWD,EAAKlb,QAEhBob,EAAe,GACnB,GAAID,EAAU,CAEZ,IAAIpb,EAAO,CACT5Y,KAAM,UACN1F,QAAS,QACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAK,CAAC+qB,IAAW,IAEnC1b,EAAMyZ,MAAMzzB,EAAK8P,SAAS,GAAIwK,GAC9Bqb,EAAa50B,KAAKuZ,EACpB,CACA,GAAImb,EAAKl3B,OAAS,EAAG,CAEnB,IAAIq3B,EAAO,CACTl0B,KAAM,UACN1F,QAAS,QACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAK8qB,GAAM,IAEzB31B,EAAQ6yB,GAAW3yB,EAAK8P,SAAS,IACjC1P,EAAMwyB,GAAS5yB,EAAK8P,SAAS9P,EAAK8P,SAASvR,OAAS,IACpDuB,EAAMC,MAAQK,EAAIL,OAAM61B,EAAK/1B,SAAW,CAC1CC,MAAOA,EACPM,IAAKA,IAEPu1B,EAAa50B,KAAK60B,EACpB,CAGA,IAAI1wB,EAAS,CACXxD,KAAM,UACN1F,QAAS,QACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAKgrB,GAAc,IAGrC,OADA3b,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,ElBXE2wB,UmBjCK,SAAmB7b,EAAOha,GAI/B,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,KAETq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMzJ,IAAIvQ,IAGtB,OADAga,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EnBqBE4wB,SoBtBK,SAAkB9b,EAAOha,EAAM0yB,GAUpC,IATA,IAAIqD,EAAWrD,EAASA,EAAO5iB,cAAWzL,EAGtCrI,EAAuB,KADZ+5B,EAAWA,EAASxxB,QAAQvE,GAAQ,GACpB,KAAO,KAClCg2B,EAAQtD,GAA0B,UAAhBA,EAAOhxB,KAAmBgxB,EAAOsD,WAAQ3xB,EAC3D9F,EAASy3B,EAAQA,EAAMz3B,OAASyB,EAAK8P,SAASvR,OAC9C03B,GAAa,EAEbC,EAAQ,KACHD,EAAY13B,GAAQ,CAE3B,IAAI43B,EAAOn2B,EAAK8P,SAASmmB,GAErB5C,EAAa,CAAC,EACd+C,EAAaJ,EAAQA,EAAMC,QAAa5xB,EACxC+xB,IACF/C,EAAW2C,MAAQI,GAIrB,IAAIC,EAAU,CACZ30B,KAAM,UACN1F,QAASA,EACTq3B,WAAYA,EACZvjB,SAAU,IAERqmB,IACFE,EAAQvmB,SAAWkK,EAAMzJ,IAAI4lB,GAC7Bnc,EAAMyZ,MAAM0C,EAAME,GAClBA,EAAUrc,EAAM2Z,UAAU3zB,EAAMq2B,IAElCH,EAAMn1B,KAAKs1B,EACb,CAGA,IAAInxB,EAAS,CACXxD,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAKurB,GAAO,IAG9B,OADAlc,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EpBrBEqT,KqBhCK,SAAcyB,EAAOha,GAE1B,IAAIkF,EAAS,CACXxD,KAAM,OACNhE,MAAOu2B,GAAU1lB,OAAOvO,EAAKtC,SAG/B,OADAsc,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,ErByBE4W,csBpCK,SAAuB9B,EAAOha,GAEnC,IAAIkF,EAAS,CACXxD,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CAAC,EACbvjB,SAAU,IAGZ,OADAkK,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,EtB2BEoxB,KAAMC,GACNC,KAAMD,GACNhY,WAAYgY,GACZE,mBAAoBF,IAItB,SAASA,KAEP,OAAO,IACT,CuB7DA,SAAS,GAAQzF,EAAQC,GAAkB,IAAIzhB,EAAOpT,OAAOoT,KAAKwhB,GAAS,GAAI50B,OAAO80B,sBAAuB,CAAE,IAAIC,EAAU/0B,OAAO80B,sBAAsBF,GAASC,IAAmBE,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOj1B,OAAOO,yBAAyBq0B,EAAQK,GAAK3zB,UAAY,KAAK8R,EAAKvO,KAAKgD,MAAMuL,EAAM2hB,EAAU,CAAE,OAAO3hB,CAAM,CACpV,SAAS,GAAcjS,GAAU,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CAAE,IAAI+B,EAAS,MAAQhC,UAAUC,GAAKD,UAAUC,GAAK,CAAC,EAAGA,EAAI,EAAI,GAAQpC,OAAOmE,IAAS,GAAItE,SAAQ,SAAUiB,IAAO,OAAgBK,EAAQL,EAAKqD,EAAOrD,GAAO,IAAKd,OAAOm1B,0BAA4Bn1B,OAAOo1B,iBAAiBj0B,EAAQnB,OAAOm1B,0BAA0BhxB,IAAW,GAAQnE,OAAOmE,IAAStE,SAAQ,SAAUiB,GAAOd,OAAOK,eAAec,EAAQL,EAAKd,OAAOO,yBAAyB4D,EAAQrD,GAAO,GAAI,CAAE,OAAOK,CAAQ,CAuKzf,IAAI,GAAM,CAAC,EAAEjB,eAYN,SAASs6B,GAAY3nB,EAAMzR,GAChC,IAAIiQ,EAAWjQ,GAAW,CAAC,EACvBw3B,EAAYvnB,EAASopB,qBAAsB,EAE3C/B,EAAe,CAAC,EAqDpB,OA7CA5a,EAAM8a,UAAYA,EAElB9a,EAAMsZ,mBAA2CjvB,IAA3BkJ,EAAS+lB,eAA0D,OAA3B/lB,EAAS+lB,cAAyB,gBAAkB/lB,EAAS+lB,cAE3HtZ,EAAM4c,cAAgBrpB,EAASqpB,eAAiB,YAEhD5c,EAAM6c,qBAAuBtpB,EAASspB,sBAAwB,KAE9D7c,EAAM8c,wBAA0BvpB,EAASupB,yBAA2B,CAClErC,UAAW,CAAC,YAGdza,EAAM+c,kBAAoBxpB,EAASwpB,mBAAqB,kBAExD/c,EAAMgd,eAAiBzpB,EAASypB,eAEhChd,EAAMid,YAAc1pB,EAAS0pB,YAC7Bjd,EAAMsa,SAAW,GAAc,GAAc,CAAC,EAAGA,IAAW/mB,EAAS+mB,UAIrEta,EAAMuE,W5BxLD,SAAqBxP,GAE1B,IAAImoB,EAAQh7B,OAAOqG,OAAO,MAC1B,IAAKwM,IAASA,EAAKrN,KACjB,MAAM,IAAIf,MAAM,wCAQlB,OANA2xB,GAAMvjB,EAAM,cAAc,SAAUwP,GAClC,IAAIyU,EAAKH,GAAMtU,EAAWC,YACtBwU,IAAO,GAAIn2B,KAAKq6B,EAAOlE,KACzBkE,EAAMlE,GAAMzU,EAEhB,IAIA,SAAoBC,GAClB,IAAIwU,EAAKH,GAAMrU,GAEf,OAAOwU,GAAM,GAAIn2B,KAAKq6B,EAAOlE,GAAMkE,EAAMlE,GAAM,IACjD,CACF,C4BoKqBmE,CAAYpoB,GAC/BiL,EAAM4a,aAAeA,EAErB5a,EAAMkZ,cAAgB,GAEtBlZ,EAAMmZ,eAAiB,CAAC,EACxBnZ,EAAMyZ,MAAQA,GACdzZ,EAAM2Z,UAAYA,GAClB3Z,EAAMtK,IAmGN,SAAkB1P,EAAM0yB,GAEtB,OAAO,GAAI1Y,EAAOha,EAAM0yB,EAC1B,EArGA1Y,EAAMzJ,IA+GN,SAAkBmiB,GAEhB,OAAO,GAAI1Y,EAAO0Y,EACpB,EAjHA1Y,EAAMrP,KAAO,GAEbqP,EAAMod,QAAUA,EAChB9E,GAAMvjB,EAAM,sBAAsB,SAAUwP,GAC1C,IAAIyU,EAAKzkB,OAAOgQ,EAAWC,YAAYF,cAIlC,GAAIzhB,KAAK+3B,EAAc5B,KAC1B4B,EAAa5B,GAAMzU,EAEvB,IAGOvE,EAWP,SAASod,EAAQ1mB,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAKpH,KAAM,CAEvC,IAAIA,EAAOoH,EAAKpH,KACZA,EAAK+tB,QACY,YAAf1mB,EAAMjP,OACRiP,EAAQ,CACNjP,KAAM,UACN1F,QAAS,GACTq3B,WAAY,CAAC,EACbvjB,SAAU,KAGda,EAAM3U,QAAUsN,EAAK+tB,OAEJ,YAAf1mB,EAAMjP,MAAsB4H,EAAKguB,cACnC3mB,EAAM0iB,WAAa,GAAc,GAAc,CAAC,EAAG1iB,EAAM0iB,YAAa/pB,EAAKguB,cAEzE,aAAc3mB,GAASA,EAAMb,UAAYxG,EAAKiuB,YAChD5mB,EAAMb,SAAWxG,EAAKiuB,UAE1B,CACA,GAAI7mB,EAAM,CACR,IAAI8mB,EAAM,SAAU9mB,EAAOA,EAAO,CAChC7Q,SAAU6Q,IC7PX,SAAmB1Q,GACxB,QAAQA,GAASA,EAAKH,UAAaG,EAAKH,SAASC,OAAUE,EAAKH,SAASC,MAAMC,MAASC,EAAKH,SAASC,MAAMN,QAAWQ,EAAKH,SAASO,KAAQJ,EAAKH,SAASO,IAAIL,MAASC,EAAKH,SAASO,IAAIZ,OAC5L,ED6PWi4B,CAAUD,KAEb7mB,EAAM9Q,SAAW,CACfC,MAAO6yB,GAAW6E,GAClBp3B,IAAKwyB,GAAS4E,IAGpB,CACA,OAAO7mB,CACT,CAUA,SAASqJ,EAAMha,EAAMhE,EAAS07B,EAAO5nB,GAOnC,OANIlT,MAAMF,QAAQg7B,KAChB5nB,EAAW4nB,EACXA,EAAQ,CAAC,GAIJN,EAAQp3B,EAAM,CACnB0B,KAAM,UACN1F,QAASA,EACTq3B,WAAYqE,GAAS,CAAC,EACtB5nB,SAAUA,GAAY,IAE1B,CA8BF,CAYA,SAAS2jB,GAAMrjB,EAAMunB,GACfvnB,EAAKvQ,WAAU83B,EAAG93B,S7B/SjB,SAAkBG,GACvB,MAAO,CACLF,MAAO6yB,GAAW3yB,GAClBI,IAAKwyB,GAAS5yB,GAElB,C6B0SmC,CAASoQ,GAC5C,CAcA,SAASujB,GAAUvjB,EAAMunB,GAEvB,IAAIzyB,EAASyyB,EAGb,GAAIvnB,GAAQA,EAAK9G,KAAM,CACrB,IAAI+tB,EAAQjnB,EAAK9G,KAAK+tB,MAClBE,EAAYnnB,EAAK9G,KAAKiuB,UACtBD,EAAclnB,EAAK9G,KAAKguB,YACP,iBAAVD,IAGW,YAAhBnyB,EAAOxD,KACTwD,EAAOlJ,QAAUq7B,EAOjBnyB,EAAS,CACPxD,KAAM,UACN1F,QAASq7B,EACThE,WAAY,CAAC,EACbvjB,SAAU,KAeI,YAAhB5K,EAAOxD,MAAsB41B,IAC/BpyB,EAAOmuB,WAAa,GAAc,GAAc,CAAC,EAAGnuB,EAAOmuB,YAAaiE,IAEtE,aAAcpyB,GAAUA,EAAO4K,UAA/B,MAA2CynB,IAE7CryB,EAAO4K,SAAWynB,EAEtB,CACA,OAAOryB,CACT,CAeO,SAAS,GAAI8U,EAAOha,EAAM0yB,GAC/B,IAAIhxB,EAAO1B,GAAQA,EAAK0B,KAGxB,IAAKA,EACH,MAAM,IAAIf,MAAM,uBAAyBX,EAAO,KAElD,OAAI,GAAInD,KAAKmd,EAAMsa,SAAU5yB,GACpBsY,EAAMsa,SAAS5yB,GAAMsY,EAAOha,EAAM0yB,GAEvC1Y,EAAMid,aAAejd,EAAMid,YAAYrtB,SAASlI,GAG3C,aAAc1B,EAAO,GAAc,GAAc,CAAC,EAAGA,GAAO,CAAC,EAAG,CACrE8P,SAAU,GAAIkK,EAAOha,KAClBA,EAEHga,EAAMgd,eACDhd,EAAMgd,eAAehd,EAAOha,EAAM0yB,GA2D7C,SAA+B1Y,EAAOha,GACpC,IAAIsJ,EAAOtJ,EAAKsJ,MAAQ,CAAC,EAErBpE,IAAS,UAAWlF,IAAU,GAAInD,KAAKyM,EAAM,gBAAkB,GAAIzM,KAAKyM,EAAM,aAG9E,CACF5H,KAAM,UACN1F,QAAS,MACTq3B,WAAY,CAAC,EACbvjB,SAAU,GAAIkK,EAAOha,IAP2E,CAChG0B,KAAM,OACNhE,MAAOsC,EAAKtC,OAQd,OADAsc,EAAMyZ,MAAMzzB,EAAMkF,GACX8U,EAAM2Z,UAAU3zB,EAAMkF,EAC/B,CAvES0yB,CAAsB5d,EAAOha,EACtC,CAaO,SAAS,GAAIga,EAAO0Y,GAEzB,IAAIzmB,EAAS,GACb,GAAI,aAAcymB,EAGhB,IAFA,IAAImF,EAAQnF,EAAO5iB,SACfhL,GAAS,IACJA,EAAQ+yB,EAAMt5B,QAAQ,CAC7B,IAAI2G,EAAS,GAAI8U,EAAO6d,EAAM/yB,GAAQ4tB,GAGtC,GAAIxtB,EAAQ,CACV,GAAIJ,GAAmC,UAA1B+yB,EAAM/yB,EAAQ,GAAGpD,OACvB9E,MAAMF,QAAQwI,IAA2B,SAAhBA,EAAOxD,OACnCwD,EAAOxH,MAAQwH,EAAOxH,MAAM0B,QAAQ,OAAQ,MAEzCxC,MAAMF,QAAQwI,IAA2B,YAAhBA,EAAOxD,MAAoB,CACvD,IAAI4Y,EAAOpV,EAAO4K,SAAS,GACvBwK,GAAsB,SAAdA,EAAK5Y,OACf4Y,EAAK5c,MAAQ4c,EAAK5c,MAAM0B,QAAQ,OAAQ,IAE5C,CAEExC,MAAMF,QAAQwI,GAChB+G,EAAOlL,KAAKgD,MAAMkI,GAAQ,OAAmB/G,IAE7C+G,EAAOlL,KAAKmE,EAEhB,CACF,CAEF,OAAO+G,CACT,CAwCO,SAAS,GAAK4rB,EAAO1C,GAE1B,IAAIjwB,EAAS,GACTJ,GAAS,EAOb,IANIqwB,GACFjwB,EAAOnE,KAAK,CACVW,KAAM,OACNhE,MAAO,SAGFoH,EAAQ+yB,EAAMt5B,QACjBuG,GAAOI,EAAOnE,KAAK,CACrBW,KAAM,OACNhE,MAAO,OAETwH,EAAOnE,KAAK82B,EAAM/yB,IAQpB,OANIqwB,GAAS0C,EAAMt5B,OAAS,GAC1B2G,EAAOnE,KAAK,CACVW,KAAM,OACNhE,MAAO,OAGJwH,CACT,CE/cO,SAAS4yB,GAAO/oB,EAAMzR,GAC3B,IAAI0c,EAAQ0c,GAAY3nB,EAAMzR,GAC1B0C,EAAOga,EAAMtK,IAAIX,EAAM,MACvBgpB,EnC/EC,SAAgB/d,GAIrB,IAFA,IAAIge,EAAY,GACZlzB,GAAS,IACJA,EAAQkV,EAAMkZ,cAAc30B,QAAQ,CAC3C,IAAI6c,EAAMpB,EAAM4a,aAAa5a,EAAMkZ,cAAcpuB,IACjD,GAAKsW,EAAL,CASA,IANA,IAAI9a,EAAU0Z,EAAMzJ,IAAI6K,GACpB4X,EAAKzkB,OAAO6M,EAAIoD,YAAYF,cAC5B2U,EAASvC,GAAasC,EAAG3U,eACzB4Z,EAAiB,EAEjBC,EAAiB,KACZD,GAAkBje,EAAMmZ,eAAeH,IAAK,CAEnD,IAAImF,EAAgB,CAClBz2B,KAAM,UACN1F,QAAS,IACTq3B,WAAY,CACV7qB,KAAM,IAAMwR,EAAMsZ,cAAgB,SAAWL,GAAUgF,EAAiB,EAAI,IAAMA,EAAiB,IACnGG,qBAAqB,EACrB3D,UAAW,CAAC,yBACZ4D,UAAWre,EAAM+c,mBAEnBjnB,SAAU,CAAC,CACTpO,KAAM,OACNhE,MAAO,OAGPu6B,EAAiB,GACnBE,EAAcroB,SAAS/O,KAAK,CAC1BW,KAAM,UACN1F,QAAS,MACT8T,SAAU,CAAC,CACTpO,KAAM,OACNhE,MAAO6Q,OAAO0pB,OAIhBC,EAAe35B,OAAS,GAC1B25B,EAAen3B,KAAK,CAClBW,KAAM,OACNhE,MAAO,MAGXw6B,EAAen3B,KAAKo3B,EACtB,CACA,IAAIvgB,EAAOtX,EAAQA,EAAQ/B,OAAS,GACpC,GAAIqZ,GAAsB,YAAdA,EAAKlW,MAAuC,MAAjBkW,EAAK5b,QAAiB,CAC3D,IAAIs8B,EACAC,EAAW3gB,EAAK9H,SAAS8H,EAAK9H,SAASvR,OAAS,GAChDg6B,GAA8B,SAAlBA,EAAS72B,KACvB62B,EAAS76B,OAAS,IAElBka,EAAK9H,SAAS/O,KAAK,CACjBW,KAAM,OACNhE,MAAO,OAGV46B,EAAiB1gB,EAAK9H,UAAU/O,KAAKgD,MAAMu0B,EAAgBJ,EAC9D,MACE53B,EAAQS,KAAKgD,MAAMzD,EAAS43B,GAI9B,IAAI3N,EAAW,CACb7oB,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CACVL,GAAIhZ,EAAMsZ,cAAgB,MAAQL,GAEpCnjB,SAAUkK,EAAMrP,KAAKrK,GAAS,IAEhC0Z,EAAMyZ,MAAMrY,EAAKmP,GACjByN,EAAUj3B,KAAKwpB,EApEf,CAqEF,CACA,GAAyB,IAArByN,EAAUz5B,OAGd,MAAO,CACLmD,KAAM,UACN1F,QAAS,UACTq3B,WAAY,CACVmF,eAAe,EACf/D,UAAW,CAAC,cAEd3kB,SAAU,CAAC,CACTpO,KAAM,UACN1F,QAASge,EAAM6c,qBACfxD,WAAYjC,GAAcA,GAAc,CAAC,EAAGlpB,KAAKgG,MAAMhG,KAAKC,UAAU6R,EAAM8c,2BAA4B,CAAC,EAAG,CAC1G9D,GAAI,mBAENljB,SAAU,CAAC,CACTpO,KAAM,OACNhE,MAAOsc,EAAM4c,iBAEd,CACDl1B,KAAM,OACNhE,MAAO,MACN,CACDgE,KAAM,UACN1F,QAAS,KACTq3B,WAAY,CAAC,EACbvjB,SAAUkK,EAAMrP,KAAKqtB,GAAW,IAC/B,CACDt2B,KAAM,OACNhE,MAAO,OAGb,CmChCa+6B,CAAOze,GAYlB,OAXI+d,GAIF/3B,EAAK8P,SAAS/O,KAAK,CACjBW,KAAM,OACNhE,MAAO,MACNq6B,GAIEn7B,MAAMF,QAAQsD,GAAQ,CAC3B0B,KAAM,OACNoO,SAAU9P,GACRA,CACN,CChFA,IAKA,GAHA,SAAsBqP,EAAa/R,GACjC,OAAO+R,GAAe,QAASA,EAUjC,SAAgBA,EAAa/R,GAC3B,OAAO,SAAU0C,EAAMgG,EAAMoG,GAC3BiD,EAAYrD,IAAI8rB,GAAO93B,EAAM1C,GAAU0I,GAAM,SAAUxF,GACrD4L,EAAK5L,EACP,GACF,CACF,CAhB+Ck4B,CAAOrpB,EAAa/R,GAwBnE,SAAgBA,GAEd,OAAO,SAAU0C,GACf,OAAO83B,GAAO93B,EAAM1C,EACtB,CACF,CA7B8Eq7B,CAAOtpB,GAAe/R,EACpG,6BC/BWs7B,IAAsB,QAOjC,SAASA,EAAO72B,EAAU82B,EAAQC,IAChC,OAAgB34B,KAAMy4B,GACtBz4B,KAAK4B,SAAWA,EAChB5B,KAAK04B,OAASA,EACVC,IACF34B,KAAK24B,MAAQA,EAEjB,ICVO,SAASC,GAAM5B,EAAa2B,GAMjC,IAJA,IAAI/2B,EAAW,CAAC,EAEZ82B,EAAS,CAAC,EACV/zB,GAAS,IACJA,EAAQqyB,EAAY54B,QAC3BrC,OAAOyR,OAAO5L,EAAUo1B,EAAYryB,GAAO/C,UAC3C7F,OAAOyR,OAAOkrB,EAAQ1B,EAAYryB,GAAO+zB,QAE3C,OAAO,IAAID,GAAO72B,EAAU82B,EAAQC,EACtC,CCnBO,SAAS,GAAUp7B,GACxB,OAAOA,EAAM2gB,aACf,CFmBAua,GAAOz8B,UAAU4F,SAAW,CAAC,EAE7B62B,GAAOz8B,UAAU08B,OAAS,CAAC,EAE3BD,GAAOz8B,UAAU28B,MAAQ,KG3BlB,IAAIE,IAAoB,QAM/B,SAASA,EAAKj3B,EAAUk3B,IACtB,OAAgB94B,KAAM64B,GAEtB74B,KAAK4B,SAAWA,EAEhB5B,KAAK84B,UAAYA,CACnB,IAGAD,GAAK78B,UAAU28B,MAAQ,KACvBE,GAAK78B,UAAU+8B,SAAU,EACzBF,GAAK78B,UAAUg9B,YAAa,EAC5BH,GAAK78B,UAAUi9B,mBAAoB,EACnCJ,GAAK78B,UAAUk9B,QAAS,EACxBL,GAAK78B,UAAUm9B,gBAAiB,EAChCN,GAAK78B,UAAUo9B,gBAAiB,EAChCP,GAAK78B,UAAUq9B,uBAAwB,EACvCR,GAAK78B,UAAUs9B,iBAAkB,EACjCT,GAAK78B,UAAU4iB,SAAU,EC1BzB,IAAI2a,GAAS,EACF,GAAUC,KACVR,GAAaQ,KACbP,GAAoBO,KACpBN,GAASM,KACTJ,GAAiBI,KACjBL,GAAiBK,KACjBH,GAAwBG,KACnC,SAASA,KACP,OAAO3J,KAAK4J,IAAI,IAAKF,GACvB,CCJA,SAAS,GAAa10B,GAAW,IAAIC,EACrC,WAAuC,GAAuB,oBAAZ9B,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQpH,UAAUqH,QAAQ3G,KAAKsG,QAAQC,UAAUG,QAAS,IAAI,WAAa,MAAY,CAAkC,CAA1B,MAAOE,GAAK,OAAO,CAAO,CAAE,CADvQ,GAA6B,OAAO,WAAkC,IAAsCyB,EAAlCC,EAAQtC,EAAgBmC,GAAkB,GAAIC,EAA2B,CAAE,IAAIG,EAAYvC,EAAgB1C,MAAMhD,YAAa+H,EAAS/B,QAAQC,UAAU+B,EAAO9G,UAAW+G,EAAY,MAASF,EAASC,EAAMpB,MAAM5D,KAAM9B,WAAc,OAAOuE,EAA2BzC,KAAM+E,EAAS,CAAG,CAOxa,IAAI2sB,GAAS31B,OAAOoT,KAAK,GACduqB,GAA2B,SAAUC,GAC9C13B,EAAUy3B,EAAaC,GACvB,IAAIv0B,EAAS,GAAas0B,GAQ1B,SAASA,EAAY93B,EAAUk3B,EAAWc,EAAMjB,GAC9C,IAAIpzB,GACJ,OAAgBvF,KAAM05B,GACtB,IAAI/0B,GAAS,EAGb,GADAk1B,GAAKv3B,EADLiD,EAAQH,EAAO1I,KAAKsD,KAAM4B,EAAUk3B,IACA,QAASH,GACzB,iBAATiB,EACT,OAASj1B,EAAQ+sB,GAAOtzB,QAAQ,CAC9B,IAAIgW,EAAQsd,GAAO/sB,GACnBk1B,GAAKv3B,EAAuBiD,GAAQmsB,GAAO/sB,IAASi1B,EAAO,EAAMxlB,MAAY,EAAMA,GACrF,CAEF,OAAO7O,CACT,CACA,OAAO,OAAam0B,EACtB,CAzBsC,CAyBpCb,IAQF,SAASgB,GAAK/tB,EAAQjP,EAAKU,GACrBA,IAEFuO,EAAOjP,GAAOU,EAElB,CAZAm8B,GAAY19B,UAAU4iB,SAAU,ECvBhC,IAAI,GAAM,CAAC,EAAE3iB,eAMN,SAASmG,GAAOgc,GAErB,IAII3c,EAJAG,EAAW,CAAC,EAEZ82B,EAAS,CAAC,EAGd,IAAKj3B,KAAQ2c,EAAW8U,WACtB,GAAI,GAAIx2B,KAAK0hB,EAAW8U,WAAYzxB,GAAO,CACzC,IAAIlE,EAAQ6gB,EAAW8U,WAAWzxB,GAC9B6X,EAAO,IAAIogB,GAAYj4B,EAAM2c,EAAW0b,UAAU1b,EAAW2b,YAAc,CAAC,EAAGt4B,GAAOlE,EAAO6gB,EAAWua,OACxGva,EAAWkb,iBAAmBlb,EAAWkb,gBAAgB7vB,SAAShI,KACpE6X,EAAKggB,iBAAkB,GAEzB13B,EAASH,GAAQ6X,EACjBof,EAAO,GAAUj3B,IAASA,EAC1Bi3B,EAAO,GAAUpf,EAAKwf,YAAcr3B,CACtC,CAEF,OAAO,IAAIg3B,GAAO72B,EAAU82B,EAAQta,EAAWua,MACjD,CC1CO,IAAIqB,GAAQ53B,GAAO,CACxBu2B,MAAO,QACPmB,UAAW,SAAmBrf,EAAGhZ,GAC/B,MAAO,SAAWA,EAAKT,MAAM,GAAGkd,aAClC,EACAgV,WAAY,CACV+G,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QCZJC,GAAMp4B,GAAO,CACtBu2B,MAAO,MACPmB,UAAW,SAAmBrf,EAAGhZ,GAC/B,MAAO,OAASA,EAAKT,MAAM,GAAGkd,aAChC,EACAgV,WAAY,CACVuH,QAAS,KACTC,QAAS,KACTC,SAAU,QCJP,SAASC,GAAuBb,EAAYjB,GACjD,OAAOA,KAAaiB,EAAaA,EAAWjB,GAAaA,CAC3D,CCAO,SAAS+B,GAAyBd,EAAYn4B,GACnD,OAAOg5B,GAAuBb,EAAYn4B,EAASsc,cACrD,CCPO,IAAI4c,GAAQ14B,GAAO,CACxBu2B,MAAO,QACPoB,WAAY,CACVgB,WAAY,eAEdjB,UAAWe,GACX3H,WAAY,CACV4H,MAAO,KACPE,WAAY,QCRLC,GAAO74B,GAAO,CACvB03B,UAAW,SAAmBrf,EAAGhZ,GAC/B,MAAgB,SAATA,EAAkBA,EAAO,QAAUA,EAAKT,MAAM,GAAGkd,aAC1D,EACAgV,WAAY,CACVgI,qBAAsB,KACtBC,WAAYnC,GACZoC,iBAAkB,KAClBC,SAAUrC,GACVsC,YAAatC,GACbuC,aAAcrC,GACdsC,aAActC,GACduC,YAAavC,GACbwC,aAActC,GACduC,YAAa,KACbtI,gBAAiB+F,GACjBwC,YAAa,KACbC,aAAc7C,GACd8C,eAAgB1C,GAChB2C,iBAAkB,KAClBC,aAAchD,GACdiD,WAAY7C,GACZ8C,YAAalD,GACbmD,aAAc,KACdC,WAAYpD,GACZqD,YAAa,KACbC,iBAAkB,KAClBpE,UAAW,KACXqE,eAAgBnD,GAChBoD,UAAWtD,GACXuD,SAAU,KACVC,UAAW1D,GACX2D,cAAe3D,GACf4D,oBAAqB5D,GACrB6D,gBAAiB,KACjBC,SAAU1D,GACV2D,gBAAiB,KACjBC,aAAc9D,GACd+D,YAAajE,GACbkE,aAAclE,GACdmE,aAAc,KACdC,aAAcpE,GACdqE,oBAAqBjE,GACrBkE,aAAcpE,GACdqE,aAAcrE,GACdsE,YAAatE,GACbuE,aAAczE,GACd0E,YAAaxE,GACbyE,SAAU,KACVC,aAAc1E,GACd2E,aAAc3E,GACd4E,aAAc5E,GACd6E,cAAe,KACfC,KAAM,QCpDC,GAAO57B,GAAO,CACvBu2B,MAAO,OACPoB,WAAY,CACVkE,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEbtE,UAAWe,GACXvB,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClDpG,WAAY,CAEVmL,KAAM,KACNC,OAAQnF,GACRoF,cAAenF,GACfoF,UAAWpF,GACXqF,OAAQ,KACRC,MAAO,KACPC,gBAAiB,GACjBC,oBAAqB,GACrBC,eAAgB,GAChBnvB,IAAK,KACLovB,GAAI,KACJC,MAAO,GACPC,eAAgB,KAChBC,aAAc7F,GACd8F,UAAW,GACXC,SAAU,GACVC,SAAUhG,GACViG,QAAS,KACTC,QAAS,KACT/P,QAAS,GACTgQ,KAAM,KACNjL,UAAW8E,GACXoG,KAAMtG,GACNuG,QAAS,KACTt/B,QAAS,KACTu/B,gBAAiB1G,GACjB2G,SAAU,GACVC,aAAcxG,GACdyG,OAAQ3G,GAASC,GACjB2G,YAAa,KACb32B,KAAM,KACN42B,SAAU,KACVC,SAAU,KACVC,QAAS,GACTC,MAAO,GACPC,IAAK,KACLC,QAAS,KACTlL,SAAU,GACVmL,SAAUpH,GACVqH,UAAWtH,GACXuH,QAAS,KACTC,aAAc,KACdC,cAAe,KACfC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgB,GAChBC,WAAY,KACZC,QAAS5H,GACT6H,OAAQ/H,GACRgI,OAAQ,GACRC,KAAMjI,GACN7wB,KAAM,KACN+4B,SAAU,KACVC,QAASjI,GACTkI,UAAWlI,GACXvG,GAAI,KACJ0O,WAAY,KACZC,YAAa,KACbC,MAAO,GACPC,UAAW,KACXC,UAAW,KACX5P,GAAI,KACJ6P,MAAO,GACPC,OAAQ,KACRC,SAAU1I,GACV2I,QAAS3I,GACT4I,UAAW,GACXC,SAAU7I,GACVrd,KAAM,KACNkI,MAAO,KACP6K,KAAM,KACNoT,SAAU,KACVryB,KAAM,KACNsyB,QAAS,KACTC,KAAM,GACNC,IAAKnJ,GACLoJ,SAAU,KACVvwB,IAAK,KACLwwB,UAAWrJ,GACXnV,MAAO,KACPye,OAAQ,KACRC,IAAK,KACLC,UAAWxJ,GACXyJ,SAAU,GACVC,MAAO,GACPxlC,KAAM,KACNylC,MAAO,KACPC,SAAU,GACVC,WAAY,GACZC,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,cAAe,KACfC,eAAgB,KAChBC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,YAAa,KACbC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACT3rB,KAAM,GACN4rB,QAAStP,GACTuP,QAAS,KACTC,KAAMtP,GACNuP,YAAa,KACbC,YAAa,GACbC,QAAS,KACTC,cAAe,KACfC,oBAAqB,KACrBC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,eAAgB,KAChBC,IAAKhQ,GACLiQ,SAAU,GACVC,SAAU,GACVhU,KAAM4D,GACNqQ,QAASrQ,GACTsQ,QAASpQ,GACTqQ,MAAO,KACPC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpBC,yBAA0B,GAC1BC,eAAgB,KAChBC,MAAO,KACP/3B,KAAMinB,GACN+Q,MAAO,KACPC,KAAM,KACNC,KAAMjR,GACNkR,WAAYpR,GACZl7B,IAAK,KACLusC,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACR5qC,MAAOu5B,GACPlH,KAAM,KACN9yB,MAAO,KACPsrC,SAAUtR,GACVh8B,OAAQ,KACR6xB,MAAO,KACP0b,UAAW,KACXlpC,KAAM,KACNmpC,cAAe,GACfC,OAAQ,KACRptC,MAAOy7B,GACP4R,MAAO1R,GACP1uB,KAAM,KACNqgC,mBAAoB,KAGpBhV,MAAO,KAEPiV,MAAO,KAEPC,QAAS3R,GAET4R,KAAM,KAENC,WAAY,KAEZC,QAAS,KAETC,OAAQjS,GAERkS,YAAa,KAEbC,aAAcnS,GAEdoS,YAAa,KAEbC,YAAa,KAEbxoB,KAAM,KAENyoB,QAAS,KAETC,QAAS,KAETC,MAAO,KAEP1kC,KAAM,KAEN2kC,SAAU,KAEVC,SAAU,KAEVC,MAAO,KAEPC,QAAS,GAETC,QAAS,GAETj2B,MAAO,KAEPk2B,KAAM,KAENC,MAAO,KAEPC,YAAa,KAEbC,OAAQjT,GAERkT,WAAYlT,GAEZlQ,KAAM,KAENqjB,SAAU,KAEVC,OAAQ,KAERC,aAAcrT,GAEdsT,YAAatT,GAEbuT,SAAU,GAEVC,OAAQ,GAERC,QAAS,GAETC,OAAQ,GAERjc,OAAQ,KAERkc,QAAS,KAETC,OAAQ,KAERC,IAAK,KAELC,YAAa9T,GAEbh4B,MAAO,KAEP+rC,OAAQ,KAERC,UAAWlU,GAEXmU,QAAS,KAETC,QAAS,KAETh1B,KAAM,KAENi1B,UAAWnU,GAEXoU,UAAW,KAEXC,QAAS,KAETC,OAAQ,KAERC,MAAO,KAEPC,OAAQxU,GAIRyU,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyB,GACzBC,sBAAuB,GACvB57B,OAAQ,KACRvQ,SAAU,KACVmzB,QAASmE,GACT8U,SAAU,KACVC,aAAc,QCxWPC,GAAM9rC,GAAO,CACtBu2B,MAAO,MACPoB,WAAY,CACVoU,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACXja,UAAW,QACXka,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChB/O,YAAa,cACbgP,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACbC,UAAW,aACXC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1B1O,SAAU,WACV2O,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZjO,QAAS,UACTkO,WAAY,aACZjO,aAAc,eACdG,cAAe,gBACf+N,QAAS,UACT3N,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACXsM,MAAO,QACPrM,QAAS,UACTC,QAAS,UACTC,QAAS,UACToM,UAAW,YACXC,WAAY,aACZnM,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACXgL,aAAc,eACd/K,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdsK,SAAU,WACVpK,QAAS,UACTC,SAAU,WACVC,SAAU,WACVG,SAAU,WACVC,UAAW,YACXC,SAAU,WACV8J,OAAQ,SACR5J,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACXoJ,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACTC,cAAe,iBACf5I,eAAgB,iBAChB6I,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACfC,YAAa,eACbpI,SAAU,WACVqI,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACfC,gBAAiB,mBACjBC,OAAQ,SACRC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjBra,UAAWc,GACX1H,WAAY,CACVkhB,MAAO/a,GACP8U,aAAcjV,GACdmb,WAAY,KACZC,SAAU,KACVlG,kBAAmB,KACnBmG,WAAYrb,GACZsb,UAAWtb,GACXmV,WAAY,KACZoG,OAAQvb,GACRwb,cAAe,KACfC,cAAe,KACfC,QAAS1b,GACT2b,UAAW,KACXvG,cAAe,KACfwG,cAAe,KACfC,YAAa,KACbC,KAAM,KACNl3B,MAAO,KACPm3B,KAAM/b,GACNgc,GAAI,KACJC,SAAU,KACV5G,UAAWrV,GACX5E,UAAW8E,GACXgc,KAAM,KACN5G,SAAU,KACV6G,cAAe,KACf5G,SAAU,KACV5C,MAAO,KACP6C,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChB1uC,QAAS,KACTm1C,kBAAmB,KACnBC,iBAAkB,KAClBzV,YAAa,KACb0V,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJ1lB,EAAG,KACH8e,SAAU,KACV6G,cAAe,KACfC,QAAS1c,GACT2c,gBAAiB3c,GACjB4c,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAAS/c,GACT6V,iBAAkB,KAClB1O,SAAU,GACV6V,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWpd,GACX8V,iBAAkB,KAClB/uC,IAAK,KACL6V,MAAO,KACPygC,SAAUrd,GACVsd,0BAA2B,KAC3BC,KAAM,KACNxH,YAAa/V,GACbgW,SAAU,KACVne,OAAQ,KACR2lB,UAAW,KACXC,YAAa,KACbxH,WAAY,KACZC,aAAc,KACdwH,UAAW,KACXC,eAAgB,KAChBxH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZmH,OAAQ,KACRC,GAAI,KACJ9mC,KAAM,KACN+mC,GAAI,KACJC,GAAI,KACJC,GAAI/d,GACJge,GAAIhe,GACJyW,UAAWzW,GACX0W,2BAA4B,KAC5BC,yBAA0B,KAC1BsH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACfppB,QAAS,KACTqpB,QAASre,GACTse,kBAAmB,KACnBC,WAAY,KACZxW,OAAQ,KACR54B,KAAM,KACN+4B,SAAU,KACV2O,UAAW7W,GACX8W,aAAc9W,GACd+W,aAAc/W,GACdrG,GAAI,KACJ6kB,YAAaxe,GACbgX,eAAgB,KAChByH,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAW5e,GACX6e,EAAG7e,GACH8e,GAAI9e,GACJ+e,GAAI/e,GACJgf,GAAIhf,GACJif,GAAIjf,GACJkf,aAAc/e,GACdgf,iBAAkB,KAClBC,UAAW,KAEXC,WAAY,KAEZC,SAAU,KAEVC,QAAS,KACT3pB,KAAM,KACN4pB,aAAc,KACdvI,cAAe,KACfC,cAAe,KACfuI,kBAAmBzf,GACnB0f,MAAO,KACPvI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbsI,aAAc,KACdC,YAAa,KACbC,YAAa,KACbnf,KAAM,KACNof,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACdnnC,IAAK,KACLgS,MAAO,KACPo1B,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAWngB,GACXogB,UAAW,KACX9W,OAAQ,KACRC,IAAK,KACL8W,KAAM,KACNn8C,KAAM,KACNozC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZuI,WAAY,KACZC,SAAU,KACV/kC,OAAQ,KACRsuB,QAAS,KACTkO,WAAY,KACZjO,aAAc,KACdG,cAAe,KACf+N,QAAS,KACT3N,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXsM,MAAO,KACPrM,QAAS,KACTC,QAAS,KACTC,QAAS,KACToM,UAAW,KACXC,WAAY,KACZnM,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXgL,aAAc,KACd/K,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdsK,SAAU,KACVpK,QAAS,KACTC,SAAU,KACVC,SAAU,KACVG,SAAU,KACVC,UAAW,KACXC,SAAU,KACV8J,OAAQ,KACR5J,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXoJ,OAAQ,KACRgI,QAAS,KACTC,SAAU,KACV3wC,MAAO,KACP4wC,OAAQ,KACRC,YAAa,KACbv0C,OAAQ,KACRw0C,SAAU,KACVC,QAAS,KACTpI,iBAAkBzY,GAClB0Y,kBAAmB1Y,GACnB2Y,WAAY,KACZC,QAAS,KACT5rC,KAAM,KACN8zC,WAAY9gB,GACZ+gB,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACP1R,KAAMtP,GACNihB,MAAO,KACPnG,cAAe,KACfnC,cAAe,KACfuI,OAAQ,KACRC,UAAWrhB,GACXshB,UAAWthB,GACXuhB,UAAWvhB,GACXwhB,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACXj5C,SAAUy3B,GACVyhB,EAAG,KACHC,OAAQ,KACR5R,eAAgB,KAChB6R,KAAM,KACNC,KAAM,KACN7R,IAAK/P,GACL0T,IAAK1T,GACL2Y,gBAAiB,KACjBkJ,YAAa,KACbC,UAAW,KACXC,mBAAoB/hB,GACpBgiB,iBAAkBhiB,GAClBiiB,cAAejiB,GACfkiB,gBAAiBliB,GACjBlM,SAAU,KACVquB,QAAS,KACTz2C,OAAQ,KACR02C,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJC,MAAO,KACPC,KAAM,KACN5J,eAAgB,KAChB6J,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkB/iB,GAClBgjB,iBAAkBhjB,GAClBijB,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACbvK,UAAW,KACXC,YAAa,KACbC,sBAAuBlZ,GACvBmZ,uBAAwBnZ,GACxBjhB,OAAQ,KACRykC,OAAQ,KACRpK,gBAAiBjZ,GACjBkZ,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkBxZ,GAClByZ,cAAezZ,GACf0Z,YAAa,KACb1zC,MAAO,KACPy9C,aAAczjB,GACd0jB,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgB5jB,GAChBmR,SAAUtR,GACVgkB,YAAa,KACbhgD,OAAQ,KACRigD,QAASjkB,GACTkkB,QAASlkB,GACT2Z,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACfsK,WAAY,KACZlJ,cAAe,KACfplB,MAAO,KACPuuB,kBAAmB,KACnB/7C,KAAM,KACN0xC,OAAQ5Z,GACR7B,GAAI,KACJsC,UAAW,KACXkZ,gBAAiB,KACjBuK,GAAI,KACJC,GAAI,KACJtK,kBAAmBha,GACnBia,mBAAoBja,GACpBukB,QAAS,KACTrK,YAAa,KACbC,aAAc,KACdC,WAAYpa,GACZptB,OAAQ,KACRynC,YAAara,GACbwa,cAAexa,GACfya,aAAc,KACdH,SAAUta,GACVua,aAAcva,GACdqU,QAAS,KACTqG,SAAU1a,GACV2a,YAAa3a,GACb4a,YAAa5a,GACbwkB,QAAS,KACTC,WAAY,KACZC,WAAY,KACZhT,MAAO,KACPiT,OAAQ,KACR9J,YAAa,KACbC,YAAa,KACb8J,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBhK,QAAS/a,GACTglB,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QCjiBL,GAAO3lB,GAAM,CAAC4B,GAAKR,GAAOc,GAAOG,GAAM,IAAW,QAClD,GAAMrC,GAAM,CAAC4B,GAAKR,GAAOc,GAAOG,GAAMiT,IAAU,OCkIhD,GAYX,SAAiBx8B,GACf,GAAIA,QACF,OAAO,GAET,GAAoB,iBAATA,EACT,OAwEJ,SAAqB0C,GACnB,OAAO,GAAY7S,GAKnB,SAASA,EAAK1B,GACZ,OAAOA,GAAQA,EAAK0B,OAAS6S,CAC/B,CACF,CAjFW,CAAY1C,GAErB,GAAoB,iBAATA,EACT,OAAOjV,MAAMF,QAAQmV,GAYzB,SAAoB+f,GAElB,IAAIC,EAAS,GACT/sB,GAAS,EACb,OAASA,EAAQ8sB,EAAMrzB,QACrBszB,EAAO/sB,GAAS,GAAQ8sB,EAAM9sB,IAEhC,OAAO,GAAY65C,GAOnB,SAASA,IAEP,IADA,IAAI75C,GAAS,EACJwC,EAAOjJ,UAAUE,OAAQyM,EAAa,IAAIpO,MAAM0K,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IACrFwD,EAAWxD,GAAQnJ,UAAUmJ,GAE/B,OAAS1C,EAAQ+sB,EAAOtzB,QAAQ,CAC9B,IAAIuzB,EACJ,IAAKA,EAAgBD,EAAO/sB,IAAQjI,KAAKkH,MAAM+tB,EAAe,CAAC3xB,MAAMsL,OAAOT,IAAc,OAAO,CACnG,CACA,OAAO,CACT,CACF,CArCiC,CAAW6G,GA6C5C,SAAsB0C,GACpB,OAAO,GAAYhE,GAMnB,SAASA,EAAIvQ,GAEX,IAAIhD,EACJ,IAAKA,KAAOuX,EAEV,GAAIvU,EAAKhD,KAASuX,EAAMvX,GAAM,OAAO,EAEvC,OAAO,CACT,CACF,CA7DoD,CAAa6U,GAE/D,GAAoB,mBAATA,EACT,OAAO,GAAYA,GAErB,MAAM,IAAIlR,MAAM,+CAClB,EAgFA,SAAS,GAAY4T,GACnB,OAQA,SAAmBvU,GACjB,IAAK,IAAIqM,EAAQhO,UAAUE,OAAQyM,EAAa,IAAIpO,MAAMyP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC9GtB,EAAWsB,EAAQ,GAAKjO,UAAUiO,GAEpC,OAAO/I,QAAQvD,GAAwB,iBAATA,GAAqB,SAAUA,GAE7DuD,QAAQgR,EAAM1X,KAAKkH,MAAMwQ,EAAO,CAACpU,KAAMH,GAAMyL,OAAOT,KACtD,CACF,CACA,SAAS,KACP,OAAO,CACT,CChMO,IAyCI,GAeX,SAAsB+D,EAAM8C,EAAMmgB,EAASC,GACrB,mBAATpgB,GAA0C,mBAAZmgB,IACvCC,EAAUD,EAEVA,EAAUngB,EACVA,EAAO,MAET,IAAIqgB,EAAK,GAAQrgB,GACbsgB,EAAOF,GAAW,EAAI,GAQ1B,SAASG,EAAQpyB,EAAM8E,EAAOutB,GAG5B,IAAI30B,EAAQsC,GAAwB,iBAATA,EAAoBA,EAAO,CAAC,EACvD,GAA0B,iBAAftC,EAAMgE,KAAmB,CAClC,IAAInE,EAEqB,iBAAlBG,EAAM1B,QAAuB0B,EAAM1B,QAEpB,iBAAf0B,EAAMH,KAAoBG,EAAMH,UAAO8G,EAC9CnI,OAAOK,eAAe+1B,EAAO,OAAQ,CACnC50B,MAAO,SAAiBsC,EAAK0B,MAAQnE,EAAO,IAAMA,EAAO,IAAM,IAAO,KAE1E,CACA,OAAO+0B,EACP,SAASA,IAEP,IAEIC,EAEA1d,EAEA2d,EANAttB,EAAS,GAOb,KAAK2M,GAAQqgB,EAAGlyB,EAAM8E,EAAOutB,EAAQA,EAAQ9zB,OAAS,IAAM,SAC1D2G,EAoCR,SAAkBxH,GAChB,GAAId,MAAMF,QAAQgB,GAChB,OAAOA,EAET,GAAqB,iBAAVA,EACT,MAAO,CA1IW,KA0IAA,GAEpB,MAAO,CAACA,EACV,CA5CiB,CAASs0B,EAAQhyB,EAAMqyB,IA5FtB,QA6FNntB,EAAO,IACT,OAAOA,EAKX,GAAIlF,EAAK8P,UA9FG,SA8FS5K,EAAO,GAO1B,IALA2P,GAAUod,EAAUjyB,EAAK8P,SAASvR,QAAU,GAAK4zB,EAEjDK,EAAeH,EAAQ5mB,OAAOzL,GAGvB6U,GAAU,GAAKA,EAAS7U,EAAK8P,SAASvR,QAAQ,CAGnD,GADAg0B,EAAYH,EAAQpyB,EAAK8P,SAAS+E,GAASA,EAAQ2d,EAAvCJ,GA5GJ,QA6GJG,EAAU,GACZ,OAAOA,EAET1d,EAAiC,iBAAjB0d,EAAU,GAAkBA,EAAU,GAAK1d,EAASsd,CACtE,CAEF,OAAOjtB,CACT,CACF,CAzDAktB,CAAQrjB,OAAM1K,EAAW,GAAzB+tB,EA0DF,ECnLe,SAASwsB,GAAathD,GACnC,GAAIA,EAAQuhD,iBAAmBvhD,EAAQwhD,mBACrC,MAAM,IAAIx/C,UAAU,4EAEtB,GAAIhC,EAAQuhD,iBAAmBvhD,EAAQwhD,oBAAsBxhD,EAAQyhD,aACnE,OAAO,SAAUhwC,ICgIrB,SAAeA,EAAM8C,EAAMmgB,EAASC,GACd,mBAATpgB,GAA0C,mBAAZmgB,IACvCC,EAAUD,EACVA,EAAUngB,EACVA,EAAO,MAET,GAAa9C,EAAM8C,GAMnB,SAAkB7R,EAAMqyB,GACtB,IAAIK,EAASL,EAAQA,EAAQ9zB,OAAS,GACtC,OAAOyzB,EAAQhyB,EAAM0yB,EAASA,EAAO5iB,SAASvL,QAAQvE,GAAQ,KAAM0yB,EACtE,GATmCT,EAUrC,CD/IM,CAAMljB,EAAM,WAAW,SAAU/O,EAAM8E,EAAOk6C,GAC5C,IAEI/uC,EAFAyiB,EAAoCssB,EAWxC,GARI1hD,EAAQuhD,gBACV5uC,GAAU3S,EAAQuhD,gBAAgBj1C,SAAS5J,EAAKhE,SACvCsB,EAAQwhD,qBACjB7uC,EAAS3S,EAAQwhD,mBAAmBl1C,SAAS5J,EAAKhE,WAE/CiU,GAAU3S,EAAQyhD,cAAiC,iBAAVj6C,IAC5CmL,GAAU3S,EAAQyhD,aAAa/+C,EAAM8E,EAAO4tB,IAE1CziB,GAA2B,iBAAVnL,EAAoB,CAErC,IAAIm6C,EADN,GAAI3hD,EAAQ4hD,kBAAoBl/C,EAAK8P,UAElCmvC,EAAmBvsB,EAAO5iB,UAAUC,OAAOhM,MAAMk7C,EAAkB,CAACn6C,EAAO,GAAG2G,QAAO,OAAmBzL,EAAK8P,iBAE9G4iB,EAAO5iB,SAASC,OAAOjL,EAAO,GAEhC,OAAOA,CACT,CAEF,GACF,CAEJ,iBEhDA,IAAIq6C,GAAQ,kBACRC,GAAO,UACPC,GAAM,SAwCV,SAASC,GAAM72B,GACb,MAAO,IAAMA,EAAGpK,aAClB,CAMA,SAASkhC,GAAU92B,GACjB,OAAOA,EAAGhnB,OAAO,GAAG6c,aACtB,CClDO,IAAIkhC,GAAc,CACvB5T,QAAS,UACTqD,SAAU,WACVjN,OAAQ,SACRyQ,gBAAiB,kBACjBC,iBAAkB,mBAClBC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBO,OAAQ,SACRhZ,aAAc,eACdC,aAAc,eACdC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXS,WAAY,8BCzBd,aCDIskB,GAAY,CAAC,OAAQ,QAAS,SAAU,OAMrC,SAASC,GAAeC,GAC7B,IAAIx5C,GAAOw5C,GAAO,IAAIzgD,OAClB0gD,EAAQz5C,EAAI1E,OAAO,GACvB,GAAc,MAAVm+C,GAA2B,MAAVA,EACnB,OAAOz5C,EAET,IAAI05C,EAAQ15C,EAAI5B,QAAQ,KACxB,IAAe,IAAXs7C,EACF,OAAO15C,EAGT,IADA,IAAIrB,GAAS,IACJA,EAAQ26C,GAAUlhD,QAAQ,CACjC,IAAIoK,EAAW82C,GAAU36C,GACzB,GAAI+6C,IAAUl3C,EAASpK,QAAU4H,EAAIhF,MAAM,EAAGwH,EAASpK,QAAQ8f,gBAAkB1V,EAC/E,OAAOxC,CAEX,CAEA,OAAe,KADfrB,EAAQqB,EAAI5B,QAAQ,OACAs7C,EAAQ/6C,IAIb,KADfA,EAAQqB,EAAI5B,QAAQ,OACAs7C,EAAQ/6C,EAHnBqB,EAQF,oBACT,CC4EA,IAAI,GAAM,CAAC,EAAE/J,eAIT0jD,GAAgB,IAAIC,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAM1D,SAASC,GAAgBppC,EAAS5W,GAMvC,IAJA,IAGIs1B,ECjHqB2qB,EAErBviD,ED4GAoS,EAAW,GACXowC,GAAc,IAGTA,EAAalgD,EAAK8P,SAASvR,QAEf,aADnB+2B,EAAQt1B,EAAK8P,SAASowC,IACZx+C,KACRoO,EAAS/O,KAAKo/C,GAAQvpC,EAAS0e,EAAO4qB,EAAYlgD,IAC1B,SAAfs1B,EAAM5zB,KAQG,YAAd1B,EAAK0B,MAAuBo+C,GAAct7C,IAAIxE,EAAKhE,WC5HvD0B,SAQoB,iBARpBA,GAFqBuiD,ED8H0D3qB,IC1HzD,iBAAV2qB,GAAqC,SAAfA,EAAMv+C,KAE5Cu+C,EAAMviD,OAAS,GAAKuiD,IAIsD,KAAtCviD,EAAM0B,QAAQ,eAAgB,MDqH5D0Q,EAAS/O,KAAKu0B,EAAM53B,OAEE,QAAf43B,EAAM5zB,MAAmBkV,EAAQtZ,QAAQ8iD,UAElDtwC,EAAS/O,KAAKu0B,EAAM53B,OAGxB,OAAOoS,CACT,CAQA,SAASqwC,GAAQvpC,EAAS5W,EAAM8E,EAAO4tB,GACrC,IAUI3wB,EAVAzE,EAAUsZ,EAAQtZ,QAClB28B,OAAyC51B,IAA7B/G,EAAQ+iD,iBAAiCX,GAAiBpiD,EAAQ+iD,iBAC9EC,EAAe1pC,EAAQ2pC,OAGvBhjD,EAAOyC,EAAKhE,QAEZq3B,EAAa,CAAC,EACdktB,EAASD,EAOb,GAJ2B,SAAvBA,EAAaxnB,OAA6B,QAATv7B,IACnCgjD,EAAS,GACT3pC,EAAQ2pC,OAASA,GAEfvgD,EAAKqzB,WACP,IAAKtxB,KAAY/B,EAAKqzB,WAChB,GAAIx2B,KAAKmD,EAAKqzB,WAAYtxB,IAC5By+C,GAAYntB,EAAYtxB,EAAU/B,EAAKqzB,WAAWtxB,GAAW6U,GAItD,OAATrZ,GAA0B,OAATA,GACnBqZ,EAAQ6pC,YAEV,IAAI3wC,EAAWkwC,GAAgBppC,EAAS5W,GAC3B,OAATzC,GAA0B,OAATA,GACnBqZ,EAAQ6pC,YAIV7pC,EAAQ2pC,OAASD,EAIjB,IAgLuB9+C,EAhLnB3B,EAAWG,EAAKH,UAAY,CAC9BC,MAAO,CACLC,KAAM,KACNP,OAAQ,KACRqV,OAAQ,MAEVzU,IAAK,CACHL,KAAM,KACNP,OAAQ,KACRqV,OAAQ,OAGR6rC,EAAYpjD,EAAQqjD,YAAc,GAAI9jD,KAAKS,EAAQqjD,WAAYpjD,GAAQD,EAAQqjD,WAAWpjD,GAAQA,EAClGqjD,EAA6B,iBAAdF,GAA0BA,IAAc,WAC3D,IAAK,sBAA2BA,GAC9B,MAAM,IAAIphD,UAAU,uBAAuBmM,OAAOlO,EAAM,uCAkB1D,GAhBA81B,EAAWr2B,IAAM8H,EACJ,MAATvH,GAAgBD,EAAQujD,aAC1BxtB,EAAWh2B,OAAuC,mBAAvBC,EAAQujD,WAA4BvjD,EAAQujD,WAAWtyC,OAAO8kB,EAAW7qB,MAAQ,IAAKxI,EAAK8P,SAAsC,iBAArBujB,EAAWnE,MAAqBmE,EAAWnE,MAAQ,MAAQ5xB,EAAQujD,YAE/L,MAATtjD,GAAgB08B,IAClB5G,EAAW7qB,KAAOyxB,EAAU1rB,OAAO8kB,EAAW7qB,MAAQ,IAAKxI,EAAK8P,SAAsC,iBAArBujB,EAAWnE,MAAqBmE,EAAWnE,MAAQ,OAEjI0xB,GAAkB,SAATrjD,GAAmC,YAAhBm1B,EAAOhxB,MAAyC,QAAnBgxB,EAAO12B,UACnEq3B,EAAWytB,QAAS,GAEjBF,GAAmB,OAATrjD,GAA0B,OAATA,GAA0B,OAATA,GAA0B,OAATA,GAA0B,OAATA,GAA0B,OAATA,IAClG81B,EAAW0tB,MAAQ1zC,OAAOib,SAAS/qB,EAAKkE,OAAO,GAAI,KAExC,QAATlE,GAAkBD,EAAQ0jD,oBAC5B3tB,EAAWp1B,IAAMX,EAAQ0jD,kBAAkBzyC,OAAO8kB,EAAWp1B,KAAO,IAAKsQ,OAAO8kB,EAAWxjB,KAAO,IAAiC,iBAArBwjB,EAAWnE,MAAqBmE,EAAWnE,MAAQ,QAE9J0xB,GAAkB,OAATrjD,GAAiC,YAAhBm1B,EAAOhxB,KAAoB,CACxD,IAAIu/C,EAiDR,SAAyBjhD,GACvB,IAAI8E,GAAS,EACb,OAASA,EAAQ9E,EAAK8P,SAASvR,QAAQ,CACrC,IAAI+2B,EAAQt1B,EAAK8P,SAAShL,GAC1B,GAAmB,YAAfwwB,EAAM5zB,MAAwC,UAAlB4zB,EAAMt5B,QACpC,OAAOs5B,CAEX,CACA,OAAO,IACT,CA1DgB4rB,CAAgBlhD,GAC5BqzB,EAAW3D,QAAUuxB,GAASA,EAAM5tB,WAAa9vB,QAAQ09C,EAAM5tB,WAAW3D,SAAW,KACrF2D,EAAWvuB,MAAQq8C,GAAuBzuB,EAAQ1yB,GAClDqzB,EAAW7D,QAA6B,OAAnBkD,EAAO12B,OAC9B,CAsCA,OArCK4kD,GAAmB,OAATrjD,GAA0B,OAATA,IAC9B81B,EAAW7D,QAAmB,OAATjyB,EACrB81B,EAAWlE,MAAQvY,EAAQ6pC,WAEhB,OAATljD,GAA0B,OAATA,IACf81B,EAAW2C,QACR3C,EAAWh0B,QAAOg0B,EAAWh0B,MAAQ,CAAC,GAE3Cg0B,EAAWh0B,MAAM+hD,UAAY/tB,EAAW2C,aACjC3C,EAAW2C,OAEf4qB,IACHvtB,EAAWguB,SAAoB,OAAT9jD,IAGrBqjD,GAAkB,OAATrjD,GAAiC,YAAhBm1B,EAAOhxB,OACpC2xB,EAAWguB,SAAW99C,QAA2B,UAAnBmvB,EAAO12B,UAInCsB,EAAQgkD,YACVjuB,EAAW,kBAqHN,EADgB7xB,EApH0B3B,GAqHrCC,MAAMC,KAAM,IAAKyB,EAAI1B,MAAMN,OAAQ,IAAKgC,EAAIpB,IAAIL,KAAM,IAAKyB,EAAIpB,IAAIZ,QAAQkK,IAAI6E,QAAQnH,KAAK,MAnHnGw5C,GAAStjD,EAAQikD,eACpBluB,EAAWmuB,eAAiBxhD,EAAKH,WAI9B+gD,GAAStjD,EAAQmkD,sBACpBpuB,EAAWvuB,MAAQq8C,GAAuBzuB,EAAQ1yB,GAClDqzB,EAAWquB,aAAeP,GAAuBzuB,IAE9CkuB,IACHvtB,EAAWrzB,KAAOA,GAIb8P,EAASvR,OAAS,EAAI,gBAAoBmiD,EAAWrtB,EAAYvjB,GAAY,gBAAoB4wC,EAAWrtB,EACrH,CAsBA,SAAS8tB,GAAuBzuB,EAAQ1yB,GAGtC,IAFA,IAAI8E,GAAS,EACT68C,EAAQ,IACH78C,EAAQ4tB,EAAO5iB,SAASvR,QAC3Bm0B,EAAO5iB,SAAShL,KAAW9E,GACK,YAAhC0yB,EAAO5iB,SAAShL,GAAOpD,MAAoBigD,IAEjD,OAAOA,CACT,CAQA,SAASnB,GAAY9oB,EAAO91B,EAAMlE,EAAO85B,GACvC,IE3PwBvrB,EAAQ3O,EAC5BiQ,EF0PAkM,EJnSC,SAAc8mC,EAAQ7iD,GAC3B,IAAIm7B,EAAS,GAAUn7B,GACnBkE,EAAOlE,EACPkkD,EAAO5oB,GACX,GAAIH,KAAU0nB,EAAO1nB,OACnB,OAAO0nB,EAAOx+C,SAASw+C,EAAO1nB,OAAOA,IAEvC,GAAIA,EAAOt6B,OAAS,GAA4B,SAAvBs6B,EAAO13B,MAAM,EAAG,IAAiBg+C,GAAMttC,KAAKnU,GAAQ,CAE3E,GAAwB,MAApBA,EAAM+D,OAAO,GAAY,CAE3B,IAAIogD,EAAOnkD,EAAMyD,MAAM,GAAG/B,QAAQggD,GAAMG,IACxC39C,EAAO,OAASigD,EAAKpgD,OAAO,GAAG6c,cAAgBujC,EAAK1gD,MAAM,EAC5D,KAAO,CAEL,IAAI2gD,EAAQpkD,EAAMyD,MAAM,GACxB,IAAKi+C,GAAKvtC,KAAKiwC,GAAQ,CACrB,IAAIC,EAASD,EAAM1iD,QAAQigD,GAAKC,IACP,MAArByC,EAAOtgD,OAAO,KAChBsgD,EAAS,IAAMA,GAEjBrkD,EAAQ,OAASqkD,CACnB,CACF,CACAH,EAAO/nB,EACT,CACA,OAAO,IAAI+nB,EAAKhgD,EAAMlE,EACxB,CIwQaskD,CAAKxqB,EAAI+oB,OAAQ3+C,GACxBsD,EAASxH,EAITwH,SAA2CA,GAAWA,IAMtDtI,MAAMF,QAAQwI,KAChBA,EAASuU,EAAK6f,gBEtQZ/rB,EAAWjQ,GAAW,CAAC,GAGe,MAJlB2O,EFuQgB/G,GEnQrB+G,EAAO1N,OAAS,GAAY,GAAGkN,QAAO,OAAmBQ,GAAS,CAAC,KAAOA,GAChF7E,MAAMmG,EAAS00C,SAAW,IAAM,IAAM,MAA4B,IAArB10C,EAAS20C,QAAoB,GAAK,MAAMhjD,QCxC7F,SAAmB+M,GACxB,OAAOA,EAAO7E,KAAK,KAAKlI,MAC1B,CHwSoD,CAAOgG,IAEnC,UAAlBuU,EAAK1X,UAA0C,iBAAXmD,IACtCA,EAaJ,SAAoBxH,GAElB,IAAIwH,EAAS,CAAC,EACd,IACE,GAAMxH,EAAOgN,EAGf,CAFE,MAAOy3C,GAET,CACA,OAAOj9C,EAMP,SAASwF,EAASnN,EAAM6kD,GACtB,IAAIlK,EAAyB,SAArB36C,EAAK4D,MAAM,EAAG,GAAgB,MAAMsK,OAAOlO,EAAK4D,MAAM,IAAM5D,EACpE2H,EAAOgzC,EAAE94C,QAAQ,YAAaijD,KAAkBD,CAClD,CACF,CA/BaE,CAAWp9C,IAElBuU,EAAKqf,OAASrf,EAAK1X,SACrB21B,EAAM,GAAI76B,KAAK2iD,GAAa/lC,EAAK1X,UAAYy9C,GAAY/lC,EAAK1X,UAAY0X,EAAK1X,UAAYmD,EAClFuU,EAAKwf,YACdvB,EAAMje,EAAKwf,WAAa/zB,GAE5B,CA8BA,SAASm9C,GAAcznC,EAAG8N,GACxB,OAAOA,EAAGpK,aACZ,CIxWA,SAAS,GAAQwS,EAAQC,GAAkB,IAAIzhB,EAAOpT,OAAOoT,KAAKwhB,GAAS,GAAI50B,OAAO80B,sBAAuB,CAAE,IAAIC,EAAU/0B,OAAO80B,sBAAsBF,GAASC,IAAmBE,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOj1B,OAAOO,yBAAyBq0B,EAAQK,GAAK3zB,UAAY,KAAK8R,EAAKvO,KAAKgD,MAAMuL,EAAM2hB,EAAU,CAAE,OAAO3hB,CAAM,CACpV,SAAS,GAAcjS,GAAU,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CAAE,IAAI+B,EAAS,MAAQhC,UAAUC,GAAKD,UAAUC,GAAK,CAAC,EAAGA,EAAI,EAAI,GAAQpC,OAAOmE,IAAS,GAAItE,SAAQ,SAAUiB,IAAO,OAAgBK,EAAQL,EAAKqD,EAAOrD,GAAO,IAAKd,OAAOm1B,0BAA4Bn1B,OAAOo1B,iBAAiBj0B,EAAQnB,OAAOm1B,0BAA0BhxB,IAAW,GAAQnE,OAAOmE,IAAStE,SAAQ,SAAUiB,GAAOd,OAAOK,eAAec,EAAQL,EAAKd,OAAOO,yBAAyB4D,EAAQrD,GAAO,GAAI,CAAE,OAAOK,CAAQ,CAoCzf,IAAI,GAAM,CAAC,EAAEjB,eAITmmD,GAAa,CACfv0C,QAAS,CACP2pB,GAAI,gBACJ3E,GAAI,mCAENwvB,UAAW,CACT7qB,GAAI,aACJ3E,GAAI,kCAENyvB,WAAY,CACVzvB,GAAI,wCAEN2D,mBAAoB,CAClB3D,GAAI,wCAEN0vB,WAAY,CACV1vB,GAAI,wCAEN3yB,OAAQ,CACNs3B,GAAI,WACJ3E,GAAI,6BAEN2vB,UAAW,CACThrB,GAAI,eACJ3E,GAAI,sDAEN4vB,aAAc,CACZjrB,GAAI,kBACJ3E,GAAI,sDAEN6vB,gBAAiB,CACflrB,GAAI,qBACJ3E,GAAI,sDAEN8vB,iBAAkB,CAChBnrB,GAAI,sBACJ3E,GAAI,mDAUD,SAAS+vB,GAAczlD,GAC5B,IAAK,IAAIN,KAAOulD,GACd,GAAI,GAAI1lD,KAAK0lD,GAAYvlD,IAAQ,GAAIH,KAAKS,EAASN,GAAM,CACvD,IAAIgmD,EAAcT,GAAWvlD,GAC7BimD,QAAQC,KAAK,oCAAoCz3C,OAAOu3C,EAAYrrB,GAAK,QAAQlsB,OAAOu3C,EAAYrrB,GAAI,gBAAkB,SAAU,MAAMlsB,OAAOzO,EAAK,YAAYyO,OArDxJ,oEAqD0K,KAAKA,OAAOu3C,EAAYhwB,GAAI,4BACzMuvB,GAAWvlD,EACpB,CAEF,IAAI4P,EAAYlB,KAAUa,IAAIkkB,IAAalkB,IAAIjP,EAAQ6lD,eAAiB,IAAI52C,IAAI,GAAc,GAAc,GAAc,CAAC,EAAGjP,EAAQ8lD,qBAAsB,CAAC,EAAG,CAC9JzsB,oBAAoB,KAClBpqB,IAAIjP,EAAQ+lD,eAAiB,IAAI92C,IAAIqyC,GAActhD,GACnD0I,EAAO,IAAIoD,EACiB,iBAArB9L,EAAQwS,SACjB9J,EAAKtI,MAAQJ,EAAQwS,cACSzL,IAArB/G,EAAQwS,UAA+C,OAArBxS,EAAQwS,UACnDmzC,QAAQC,KAAK,uEAAuEz3C,OAAOnO,EAAQwS,SAAU,OAE/G,IAAIwzC,EAAW12C,EAAUoC,QAAQpC,EAAUsB,MAAMlI,GAAOA,GACxD,GAAsB,SAAlBs9C,EAAS5hD,KACX,MAAM,IAAIpC,UAAU,0BAItB,IAAI4F,EAAS,gBAAoB,WAAgB,CAAC,EAAG86C,GAAgB,CACnE1iD,QAASA,EACTijD,OAAQ,GACRE,UAAW,GACV6C,IAMH,OALIhmD,EAAQm3B,YACVvvB,EAAS,gBAAoB,MAAO,CAClCuvB,UAAWn3B,EAAQm3B,WAClBvvB,IAEEA,CACT,CACA69C,GAAcQ,UAAY,CAExBzzC,SAAU,YAEV2kB,UAAW,YAEXsqB,aAAc,UACdF,gBAAiB,aAAkB,aACnCC,mBAAoB,aAAkB,aACtCI,iBAAkB,UAElBiE,cAAe,aAAkB,eAAoB,CAAC,YAAkB,UAAgB,aAAkB,eAAoB,CAAC,UAAgB,YAAkB,YAAkB,UAAgB,aAGnM,gBACAE,cAAe,aAAkB,eAAoB,CAAC,YAAkB,UAAgB,aAAkB,eAAoB,CAAC,UAAgB,YAAkB,YAAkB,UAAgB,aAGnM,gBAEA/B,UAAW,UACXC,aAAc,UACdnB,SAAU,UACVqB,oBAAqB,UACrBpB,iBAAkB,eAAoB,CAAC,UAAgB,YACvDQ,WAAY,eAAoB,CAAC,UAAgB,cACjDG,kBAAmB,UACnBL,WAAY,+CC3Id,IAcE6C,EAdEC,EAAIj5C,OAAOk5C,IAAI,iBACjBpiD,EAAIkJ,OAAOk5C,IAAI,gBACfvzB,EAAI3lB,OAAOk5C,IAAI,kBACfjgD,EAAI+G,OAAOk5C,IAAI,qBACfC,EAAIn5C,OAAOk5C,IAAI,kBACfE,EAAIp5C,OAAOk5C,IAAI,kBACfG,EAAIr5C,OAAOk5C,IAAI,iBACfxL,EAAI1tC,OAAOk5C,IAAI,wBACfI,EAAIt5C,OAAOk5C,IAAI,qBACfziD,EAAIuJ,OAAOk5C,IAAI,kBACfK,EAAIv5C,OAAOk5C,IAAI,uBACfM,EAAIx5C,OAAOk5C,IAAI,cACfO,EAAIz5C,OAAOk5C,IAAI,cACfQ,EAAI15C,OAAOk5C,IAAI,mBAGjB,SAAStB,EAAEt+C,GACT,GAAI,iBAAoBA,GAAK,OAASA,EAAG,CACvC,IAAIm3C,EAAIn3C,EAAEqgD,SACV,OAAQlJ,GACN,KAAKwI,EACH,OAAQ3/C,EAAIA,EAAEpC,MACZ,KAAKyuB,EACL,KAAKwzB,EACL,KAAKlgD,EACL,KAAKxC,EACL,KAAK8iD,EACH,OAAOjgD,EACT,QACE,OAAQA,EAAIA,GAAKA,EAAEqgD,UACjB,KAAKjM,EACL,KAAK2L,EACL,KAAKC,EACL,KAAKG,EACL,KAAKD,EACL,KAAKJ,EACH,OAAO9/C,EACT,QACE,OAAOm3C,GAGjB,KAAK35C,EACH,OAAO25C,EAEb,CACF,CA9BAuI,EAAIh5C,OAAOk5C,IAAI,0BA+Bf3lD,EAAQqmD,gBAAkBP,EAC1B9lD,EAAQsmD,gBAAkBT,EAC1B7lD,EAAQumD,QAAUb,EAClB1lD,EAAQwmD,WAAaT,EACrB/lD,EAAQymD,SAAWr0B,EACnBpyB,EAAQ0mD,KAAOR,EACflmD,EAAQ2mD,KAAOV,EACfjmD,EAAQ4mD,OAASrjD,EACjBvD,EAAQ6mD,SAAWjB,EACnB5lD,EAAQ8mD,WAAaphD,EACrB1F,EAAQ+mD,SAAW7jD,EACnBlD,EAAQgnD,aAAehB,EACvBhmD,EAAQinD,YAAc,WACpB,OAAO,CACT,EACAjnD,EAAQknD,iBAAmB,WACzB,OAAO,CACT,EACAlnD,EAAQmnD,kBAAoB,SAAUphD,GACpC,OAAOs+C,EAAEt+C,KAAO+/C,CAClB,EACA9lD,EAAQonD,kBAAoB,SAAUrhD,GACpC,OAAOs+C,EAAEt+C,KAAO8/C,CAClB,EACA7lD,EAAQqnD,UAAY,SAAUthD,GAC5B,MAAO,iBAAoBA,GAAK,OAASA,GAAKA,EAAEqgD,WAAaV,CAC/D,EACA1lD,EAAQsnD,aAAe,SAAUvhD,GAC/B,OAAOs+C,EAAEt+C,KAAOggD,CAClB,EACA/lD,EAAQunD,WAAa,SAAUxhD,GAC7B,OAAOs+C,EAAEt+C,KAAOqsB,CAClB,EACApyB,EAAQwnD,OAAS,SAAUzhD,GACzB,OAAOs+C,EAAEt+C,KAAOmgD,CAClB,EACAlmD,EAAQynD,OAAS,SAAU1hD,GACzB,OAAOs+C,EAAEt+C,KAAOkgD,CAClB,EACAjmD,EAAQ0nD,SAAW,SAAU3hD,GAC3B,OAAOs+C,EAAEt+C,KAAOxC,CAClB,EACAvD,EAAQ2nD,WAAa,SAAU5hD,GAC7B,OAAOs+C,EAAEt+C,KAAO6/C,CAClB,EACA5lD,EAAQ4nD,aAAe,SAAU7hD,GAC/B,OAAOs+C,EAAEt+C,KAAOL,CAClB,EACA1F,EAAQ6nD,WAAa,SAAU9hD,GAC7B,OAAOs+C,EAAEt+C,KAAO7C,CAClB,EACAlD,EAAQ8nD,eAAiB,SAAU/hD,GACjC,OAAOs+C,EAAEt+C,KAAOigD,CAClB,EACAhmD,EAAQ+nD,mBAAqB,SAAUhiD,GACrC,MAAO,iBAAoBA,GAAK,mBAAsBA,GAAKA,IAAMqsB,GAAKrsB,IAAM6/C,GAAK7/C,IAAML,GAAKK,IAAM7C,GAAK6C,IAAMigD,GAAKjgD,IAAMogD,GAAK,iBAAoBpgD,GAAK,OAASA,IAAMA,EAAEqgD,WAAaF,GAAKngD,EAAEqgD,WAAaH,GAAKlgD,EAAEqgD,WAAaP,GAAK9/C,EAAEqgD,WAAaN,GAAK//C,EAAEqgD,WAAaL,GAAKhgD,EAAEqgD,WAAaX,QAAK,IAAW1/C,EAAEiiD,YAC5S,EACAhoD,EAAQq1C,OAASgP,sCC/GftkD,EAAOC,QAAU,EAAjB,8BCHF,IAAImQ,EAAQ,EAAQ,OAapB,SAAS83C,EAAc3mD,EAAOqL,GAC5B,IAII/I,EAJA4J,EAAS,KACb,IAAKlM,GAA0B,iBAAVA,EACnB,OAAOkM,EAOT,IAJA,IAEIxJ,EACArE,EAHAwE,EAAegM,EAAM7O,GACrB4mD,EAAkC,mBAAbv7C,EAGhBpM,EAAI,EAAG4nD,EAAMhkD,EAAa3D,OAAQD,EAAI4nD,EAAK5nD,IAElDyD,GADAJ,EAAcO,EAAa5D,IACJyD,SACvBrE,EAAQiE,EAAYjE,MAChBuoD,EACFv7C,EAAS3I,EAAUrE,EAAOiE,GACjBjE,IACT6N,IAAWA,EAAS,CAAC,GACrBA,EAAOxJ,GAAYrE,GAGvB,OAAO6N,CACT,CACAzN,EAAOC,QAAUioD,EACjBloD,EAAOC,QAAP,QAAyBioD,qBCrCzB,SAASG,IAYP,OAXAroD,EAAOC,QAAUooD,EAAWjqD,OAAOyR,OAASzR,OAAOyR,OAAO3K,OAAS,SAAU3F,GAC3E,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CACzC,IAAI+B,EAAShC,UAAUC,GACvB,IAAK,IAAItB,KAAOqD,EACVnE,OAAOC,UAAUC,eAAeS,KAAKwD,EAAQrD,KAC/CK,EAAOL,GAAOqD,EAAOrD,GAG3B,CACA,OAAOK,CACT,EAAGS,EAAOC,QAAQqoD,YAAa,EAAMtoD,EAAOC,QAAiB,QAAID,EAAOC,QACjEooD,EAASpiD,MAAM5D,KAAM9B,UAC9B,CACAP,EAAOC,QAAUooD,EAAUroD,EAAOC,QAAQqoD,YAAa,EAAMtoD,EAAOC,QAAiB,QAAID,EAAOC,4CCdjF,SAASsoD,EAAgB1pD,GACtC,GAAIC,MAAMF,QAAQC,GAAM,OAAOA,CACjC,qECFe,SAAS2pD,EAAgBtiD,EAAUuiD,GAChD,KAAMviD,aAAoBuiD,GACxB,MAAM,IAAIjnD,UAAU,oCAExB,qECJA,SAASknD,EAAkBnpD,EAAQq6B,GACjC,IAAK,IAAIp5B,EAAI,EAAGA,EAAIo5B,EAAMn5B,OAAQD,IAAK,CACrC,IAAImoD,EAAa/uB,EAAMp5B,GACvBmoD,EAAWjpD,WAAaipD,EAAWjpD,aAAc,EACjDipD,EAAWhpD,cAAe,EACtB,UAAWgpD,IAAYA,EAAW7oD,UAAW,GACjD1B,OAAOK,eAAec,EAAQopD,EAAWzpD,IAAKypD,EAChD,CACF,CACe,SAASC,EAAaH,EAAaI,EAAYC,GAM5D,OALID,GAAYH,EAAkBD,EAAYpqD,UAAWwqD,GACrDC,GAAaJ,EAAkBD,EAAaK,GAChD1qD,OAAOK,eAAegqD,EAAa,YAAa,CAC9C3oD,UAAU,IAEL2oD,CACT,oEChBe,SAASM,EAAgB9pD,EAAKC,EAAKU,GAWhD,OAVIV,KAAOD,EACTb,OAAOK,eAAeQ,EAAKC,EAAK,CAC9BU,MAAOA,EACPF,YAAY,EACZC,cAAc,EACdG,UAAU,IAGZb,EAAIC,GAAOU,EAENX,CACT,qECZe,SAAS+pD,IACtB,MAAM,IAAIxnD,UAAU,4IACtB,qECFe,SAASynD,EAA4BC,EAASxpC,GAK3D,OAJKA,IACHA,EAAMwpC,EAAQ7lD,MAAM,IAEtB6lD,EAAQxpC,IAAMA,EACPwpC,CACT,qECNe,SAASC,EAAQlqD,GAG9B,OAAOkqD,EAAU,mBAAqBz8C,QAAU,iBAAmBA,OAAOE,SAAW,SAAU3N,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqByN,QAAUzN,EAAII,cAAgBqN,QAAUzN,IAAQyN,OAAOrO,UAAY,gBAAkBY,CAC1H,EAAGkqD,EAAQlqD,EACb","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/extend/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/inline-style-parser/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/is-buffer/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/bail/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/is-plain-obj/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/trough/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile/lib/minpath.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile/lib/minproc.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile/lib/minurl.shared.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile/lib/minurl.browser.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/node_modules/vfile/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/unified/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-chunked/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-combine-extensions/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-character/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-factory-space/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/micromark-util-subtokenize/node_modules/micromark-util-chunked/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/micromark-util-subtokenize/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/content.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-resolve-all/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/list.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-factory-destination/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-factory-label/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-factory-title/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-factory-whitespace/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-normalize-identifier/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/definition.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-html-tag-name/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/decode-named-character-reference/index.dom.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-classify-character/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/attention.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark-util-decode-string/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/micromark-util-character/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/micromark-util-sanitize-uri/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/unist-util-is/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/trim-lines/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/remark-rehype/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/schema.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/merge.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/normalize.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/info.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/types.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/defined-info.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/create.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/xlink.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/xml.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/xmlns.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/aria.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/html.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/svg.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/lib/rehype-filter.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/find.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/property-information/lib/hast-to-react.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/style-to-object/index.mjs","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/lib/uri-transformer.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/lib/ast-to-react.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/hast-util-whitespace/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/comma-separated-tokens/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/space-separated-tokens/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/lib/react-markdown.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/style-to-object/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/extends.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import '@babel/runtime/helpers/extends';\nimport 'react';\nimport '@emotion/is-prop-valid';\nimport createStyled from '../base/dist/emotion-styled-base.browser.esm.js';\nimport '@emotion/react';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',\n// SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nvar newStyled = createStyled.bind();\ntags.forEach(function (tagName) {\n  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type\n  newStyled[tagName] = newStyled(tagName);\n});\nexport default newStyled;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar isArray = function isArray(arr) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(arr);\n  }\n  return toStr.call(arr) === '[object Array]';\n};\nvar isPlainObject = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== '[object Object]') {\n    return false;\n  }\n  var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n  // Not own constructor property must be Object\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n  var key;\n  for (key in obj) {/**/}\n  return typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n  if (defineProperty && options.name === '__proto__') {\n    defineProperty(target, options.name, {\n      enumerable: true,\n      configurable: true,\n      value: options.newValue,\n      writable: true\n    });\n  } else {\n    target[options.name] = options.newValue;\n  }\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n  if (name === '__proto__') {\n    if (!hasOwn.call(obj, name)) {\n      return void 0;\n    } else if (gOPD) {\n      // In early versions of node, obj['__proto__'] is buggy when obj has\n      // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n      return gOPD(obj, name).value;\n    }\n  }\n  return obj[name];\n};\nmodule.exports = function extend() {\n  var options, name, src, copy, copyIsArray, clone;\n  var target = arguments[0];\n  var i = 1;\n  var length = arguments.length;\n  var deep = false;\n\n  // Handle a deep copy situation\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = arguments[1] || {};\n    // skip the boolean and the target\n    i = 2;\n  }\n  if (target == null || typeof target !== 'object' && typeof target !== 'function') {\n    target = {};\n  }\n  for (; i < length; ++i) {\n    options = arguments[i];\n    // Only deal with non-null/undefined values\n    if (options != null) {\n      // Extend the base object\n      for (name in options) {\n        src = getProperty(target, name);\n        copy = getProperty(options, name);\n\n        // Prevent never-ending loop\n        if (target !== copy) {\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n            } else {\n              clone = src && isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            setProperty(target, {\n              name: name,\n              newValue: extend(deep, clone, copy)\n            });\n\n            // Don't bring in undefined values\n          } else if (typeof copy !== 'undefined') {\n            setProperty(target, {\n              name: name,\n              newValue: copy\n            });\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n};","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (!style) return [];\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = {\n      line: lineno,\n      column: column\n    };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n    var i = 2;\n    while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {\n      ++i;\n    }\n    i += 2;\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n    return decls;\n  }\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  }\n\n  // ?\n  return '';\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}","import _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _wrapNativeSuper from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport { stringifyPosition } from 'unist-util-stringify-position';\n\n/**\n * Message.\n */\nexport var VFileMessage = /*#__PURE__*/function (_Error) {\n  _inherits(VFileMessage, _Error);\n  var _super = _createSuper(VFileMessage);\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  function VFileMessage(reason, place, origin) {\n    var _this;\n    _classCallCheck(this, VFileMessage);\n    /** @type {[string | null, string | null]} */\n    var parts = [null, null];\n    /** @type {Position} */\n    var position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {\n        line: null,\n        column: null\n      },\n      // @ts-expect-error: \"\n      end: {\n        line: null,\n        column: null\n      }\n    };\n    _this = _super.call(this);\n    if (typeof place === 'string') {\n      origin = place;\n      place = undefined;\n    }\n    if (typeof origin === 'string') {\n      var index = origin.indexOf(':');\n      if (index === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index);\n        parts[1] = origin.slice(index + 1);\n      }\n    }\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position;\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place;\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place;\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    _this.name = stringifyPosition(place) || '1:1';\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    _this.message = typeof reason === 'object' ? reason.message : reason;\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    _this.stack = '';\n    if (typeof reason === 'object' && reason.stack) {\n      _this.stack = reason.stack;\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    _this.reason = _this.message;\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    _this.fatal;\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    _this.line = position.start.line;\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    _this.column = position.start.column;\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    _this.position = position;\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    _this.source = parts[0];\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    _this.ruleId = parts[1];\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    _this.file;\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    _this.actual;\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    _this.expected;\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    _this.url;\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    _this.note;\n    /* eslint-enable no-unused-expressions */\n    return _this;\n  }\n  return _createClass(VFileMessage);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nVFileMessage.prototype.file = '';\nVFileMessage.prototype.name = '';\nVFileMessage.prototype.reason = '';\nVFileMessage.prototype.message = '';\nVFileMessage.prototype.stack = '';\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport var path = {\n  basename: basename,\n  dirname: dirname,\n  extname: extname,\n  join: join,\n  sep: '/'\n};\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string');\n  }\n  assertPath(path);\n  var start = 0;\n  var end = -1;\n  var index = path.length;\n  /** @type {boolean | undefined} */\n  var seenNonSlash;\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1;\n          break;\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true;\n        end = index + 1;\n      }\n    }\n    return end < 0 ? '' : path.slice(start, end);\n  }\n  if (ext === path) {\n    return '';\n  }\n  var firstNonSlashEnd = -1;\n  var extIndex = ext.length - 1;\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1;\n        break;\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true;\n        firstNonSlashEnd = index + 1;\n      }\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index;\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1;\n          end = firstNonSlashEnd;\n        }\n      }\n    }\n  }\n  if (start === end) {\n    end = firstNonSlashEnd;\n  } else if (end < 0) {\n    end = path.length;\n  }\n  return path.slice(start, end);\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path);\n  if (path.length === 0) {\n    return '.';\n  }\n  var end = -1;\n  var index = path.length;\n  /** @type {boolean | undefined} */\n  var unmatchedSlash;\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index;\n        break;\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true;\n    }\n  }\n  return end < 0 ? path.charCodeAt(0) === 47 /* `/` */ ? '/' : '.' : end === 1 && path.charCodeAt(0) === 47 /* `/` */ ? '//' : path.slice(0, end);\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path);\n  var index = path.length;\n  var end = -1;\n  var startPart = 0;\n  var startDot = -1;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0;\n  /** @type {boolean | undefined} */\n  var unmatchedSlash;\n  while (index--) {\n    var code = path.charCodeAt(index);\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1;\n        break;\n      }\n      continue;\n    }\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true;\n      end = index + 1;\n    }\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index;\n      } else if (preDotState !== 1) {\n        preDotState = 1;\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1;\n    }\n  }\n  if (startDot < 0 || end < 0 ||\n  // We saw a non-dot character immediately before the dot.\n  preDotState === 0 ||\n  // The (right-most) trimmed path component is exactly `..`.\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join() {\n  var index = -1;\n  /** @type {string | undefined} */\n  var joined;\n  for (var _len = arguments.length, segments = new Array(_len), _key = 0; _key < _len; _key++) {\n    segments[_key] = arguments[_key];\n  }\n  while (++index < segments.length) {\n    assertPath(segments[index]);\n    if (segments[index]) {\n      joined = joined === undefined ? segments[index] : joined + '/' + segments[index];\n    }\n  }\n  return joined === undefined ? '.' : normalize(joined);\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path);\n  var absolute = path.charCodeAt(0) === 47; /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  var value = normalizeString(path, !absolute);\n  if (value.length === 0 && !absolute) {\n    value = '.';\n  }\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/';\n  }\n  return absolute ? '/' + value : value;\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  var result = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var index = -1;\n  /** @type {number | undefined} */\n  var code;\n  /** @type {number} */\n  var lastSlashIndex;\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index);\n    } else if (code === 47 /* `/` */) {\n      break;\n    } else {\n      code = 47; /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 /* `.` */ || result.charCodeAt(result.length - 2) !== 46 /* `.` */) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/');\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = '';\n                lastSegmentLength = 0;\n              } else {\n                result = result.slice(0, lastSlashIndex);\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/');\n              }\n              lastSlash = index;\n              dots = 0;\n              continue;\n            }\n          } else if (result.length > 0) {\n            result = '';\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index);\n        } else {\n          result = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++;\n    } else {\n      dots = -1;\n    }\n  }\n  return result;\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n/* eslint-enable max-depth, complexity */","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport var proc = {\n  cwd: cwd\n};\nfunction cwd() {\n  return '/';\n}","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return fileUrlOrPath !== null && typeof fileUrlOrPath === 'object' &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.href &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.origin;\n}","/// <reference lib=\"dom\" />\n\nimport { isUrl } from './minurl.shared.js';\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path);\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    var error = new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `' + path + '`');\n    error.code = 'ERR_INVALID_ARG_TYPE';\n    throw error;\n  }\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    var _error = new TypeError('The URL must be of scheme file');\n    _error.code = 'ERR_INVALID_URL_SCHEME';\n    throw _error;\n  }\n  return getPathFromURLPosix(path);\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    var error = new TypeError('File URL host must be \"localhost\" or empty on darwin');\n    error.code = 'ERR_INVALID_FILE_URL_HOST';\n    throw error;\n  }\n  var pathname = url.pathname;\n  var index = -1;\n  while (++index < pathname.length) {\n    if (pathname.charCodeAt(index) === 37 /* `%` */ && pathname.charCodeAt(index + 1) === 50 /* `2` */) {\n      var third = pathname.charCodeAt(index + 2);\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        var _error2 = new TypeError('File URL path must not include encoded / characters');\n        _error2.code = 'ERR_INVALID_FILE_URL_PATH';\n        throw _error2;\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\nexport { isUrl } from './minurl.shared.js';","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer';\nimport { VFileMessage } from 'vfile-message';\nimport { path } from './minpath.js';\nimport { proc } from './minproc.js';\nimport { urlToPath, isUrl } from './minurl.js';\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname'];\nexport var VFile = /*#__PURE__*/function () {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  function VFile(value) {\n    _classCallCheck(this, VFile);\n    /** @type {Options | VFile} */\n    var options;\n    if (!value) {\n      options = {};\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {\n        value: value\n      };\n    } else if (isUrl(value)) {\n      options = {\n        path: value\n      };\n    } else {\n      options = value;\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {};\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = [];\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = [];\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd();\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value;\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored;\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result;\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map;\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    var index = -1;\n    while (++index < order.length) {\n      var _prop = order[index];\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (_prop in options && options[_prop] !== undefined && options[_prop] !== null) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[_prop] = _prop === 'history' ? _toConsumableArray(options[_prop]) : options[_prop];\n      }\n    }\n\n    /** @type {string} */\n    var prop;\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop];\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  _createClass(VFile, [{\n    key: \"path\",\n    get: function get() {\n      return this.history[this.history.length - 1];\n    }\n\n    /**\n     * Set the full path (example: `'~/index.min.js'`).\n     *\n     * Cannot be nullified.\n     * You can set a file URL (a `URL` object with a `file:` protocol) which will\n     * be turned into a path with `url.fileURLToPath`.\n     *\n     * @param {string | URL} path\n     */,\n    set: function set(path) {\n      if (isUrl(path)) {\n        path = urlToPath(path);\n      }\n      assertNonEmpty(path, 'path');\n      if (this.path !== path) {\n        this.history.push(path);\n      }\n    }\n\n    /**\n     * Get the parent path (example: `'~'`).\n     */\n  }, {\n    key: \"dirname\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.dirname(this.path) : undefined;\n    }\n\n    /**\n     * Set the parent path (example: `'~'`).\n     *\n     * Cannot be set if there’s no `path` yet.\n     */,\n    set: function set(dirname) {\n      assertPath(this.basename, 'dirname');\n      this.path = path.join(dirname || '', this.basename);\n    }\n\n    /**\n     * Get the basename (including extname) (example: `'index.min.js'`).\n     */\n  }, {\n    key: \"basename\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.basename(this.path) : undefined;\n    }\n\n    /**\n     * Set basename (including extname) (`'index.min.js'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be nullified (use `file.path = file.dirname` instead).\n     */,\n    set: function set(basename) {\n      assertNonEmpty(basename, 'basename');\n      assertPart(basename, 'basename');\n      this.path = path.join(this.dirname || '', basename);\n    }\n\n    /**\n     * Get the extname (including dot) (example: `'.js'`).\n     */\n  }, {\n    key: \"extname\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.extname(this.path) : undefined;\n    }\n\n    /**\n     * Set the extname (including dot) (example: `'.js'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be set if there’s no `path` yet.\n     */,\n    set: function set(extname) {\n      assertPart(extname, 'extname');\n      assertPath(this.dirname, 'extname');\n      if (extname) {\n        if (extname.charCodeAt(0) !== 46 /* `.` */) {\n          throw new Error('`extname` must start with `.`');\n        }\n        if (extname.includes('.', 1)) {\n          throw new Error('`extname` cannot contain multiple dots');\n        }\n      }\n      this.path = path.join(this.dirname, this.stem + (extname || ''));\n    }\n\n    /**\n     * Get the stem (basename w/o extname) (example: `'index.min'`).\n     */\n  }, {\n    key: \"stem\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.basename(this.path, this.extname) : undefined;\n    }\n\n    /**\n     * Set the stem (basename w/o extname) (example: `'index.min'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be nullified (use `file.path = file.dirname` instead).\n     */,\n    set: function set(stem) {\n      assertNonEmpty(stem, 'stem');\n      assertPart(stem, 'stem');\n      this.path = path.join(this.dirname || '', stem + (this.extname || ''));\n    }\n\n    /**\n     * Serialize the file.\n     *\n     * @param {BufferEncoding | null | undefined} [encoding='utf8']\n     *   Character encoding to understand `value` as when it’s a `Buffer`\n     *   (default: `'utf8'`).\n     * @returns {string}\n     *   Serialized file.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString(encoding) {\n      return (this.value || '').toString(encoding || undefined);\n    }\n\n    /**\n     * Create a warning message associated with the file.\n     *\n     * Its `fatal` is set to `false` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"message\",\n    value: function message(reason, place, origin) {\n      var message = new VFileMessage(reason, place, origin);\n      if (this.path) {\n        message.name = this.path + ':' + message.name;\n        message.file = this.path;\n      }\n      message.fatal = false;\n      this.messages.push(message);\n      return message;\n    }\n\n    /**\n     * Create an info message associated with the file.\n     *\n     * Its `fatal` is set to `null` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"info\",\n    value: function info(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = null;\n      return message;\n    }\n\n    /**\n     * Create a fatal error associated with the file.\n     *\n     * Its `fatal` is set to `true` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * > 👉 **Note**: a fatal error means that a file is no longer processable.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {never}\n     *   Message.\n     * @throws {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"fail\",\n    value: function fail(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = true;\n      throw message;\n    }\n  }]);\n  return VFile;\n}();\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error('`' + name + '` cannot be a path: did not expect `' + path.sep + '`');\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty');\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too');\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error;\n  }\n}","export default function isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  var prototype = Object.getPrototypeOf(value);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  var fns = [];\n  /** @type {Pipeline} */\n  var pipeline = {\n    run: run,\n    use: use\n  };\n  return pipeline;\n\n  /** @type {Run} */\n  function run() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    var middlewareIndex = -1;\n    /** @type {Callback} */\n    var callback = values.pop();\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback);\n    }\n    next.apply(void 0, [null].concat(_toConsumableArray(values)));\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error) {\n      var fn = fns[++middlewareIndex];\n      var index = -1;\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      // Copy non-nullish input into values.\n      for (var _len2 = arguments.length, output = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        output[_key2 - 1] = arguments[_key2];\n      }\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index];\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output;\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(void 0, output);\n      } else {\n        callback.apply(void 0, [null].concat(output));\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError('Expected `middelware` to be a function, not ' + middelware);\n    }\n    fns.push(middelware);\n    return pipeline;\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  var called;\n  return wrapped;\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped() {\n    for (var _len3 = arguments.length, parameters = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      parameters[_key3] = arguments[_key3];\n    }\n    var fnExpectsCallback = middleware.length > parameters.length;\n    /** @type {any} */\n    var result;\n    if (fnExpectsCallback) {\n      parameters.push(done);\n    }\n    try {\n      result = middleware.apply(this, parameters);\n    } catch (error) {\n      var exception = /** @type {Error} */error;\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception;\n      }\n      return done(exception);\n    }\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error) {\n    if (!called) {\n      called = true;\n      for (var _len4 = arguments.length, output = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        output[_key4 - 1] = arguments[_key4];\n      }\n      callback.apply(void 0, [error].concat(output));\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value);\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  }\n\n  // ?\n  return '';\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}","import _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _wrapNativeSuper from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport { stringifyPosition } from 'unist-util-stringify-position';\n\n/**\n * Message.\n */\nexport var VFileMessage = /*#__PURE__*/function (_Error) {\n  _inherits(VFileMessage, _Error);\n  var _super = _createSuper(VFileMessage);\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  function VFileMessage(reason, place, origin) {\n    var _this;\n    _classCallCheck(this, VFileMessage);\n    /** @type {[string | null, string | null]} */\n    var parts = [null, null];\n    /** @type {Position} */\n    var position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {\n        line: null,\n        column: null\n      },\n      // @ts-expect-error: \"\n      end: {\n        line: null,\n        column: null\n      }\n    };\n    _this = _super.call(this);\n    if (typeof place === 'string') {\n      origin = place;\n      place = undefined;\n    }\n    if (typeof origin === 'string') {\n      var index = origin.indexOf(':');\n      if (index === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index);\n        parts[1] = origin.slice(index + 1);\n      }\n    }\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position;\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place;\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place;\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    _this.name = stringifyPosition(place) || '1:1';\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    _this.message = typeof reason === 'object' ? reason.message : reason;\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    _this.stack = '';\n    if (typeof reason === 'object' && reason.stack) {\n      _this.stack = reason.stack;\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    _this.reason = _this.message;\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    _this.fatal;\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    _this.line = position.start.line;\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    _this.column = position.start.column;\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    _this.position = position;\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    _this.source = parts[0];\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    _this.ruleId = parts[1];\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    _this.file;\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    _this.actual;\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    _this.expected;\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    _this.url;\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    _this.note;\n    /* eslint-enable no-unused-expressions */\n    return _this;\n  }\n  return _createClass(VFileMessage);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nVFileMessage.prototype.file = '';\nVFileMessage.prototype.name = '';\nVFileMessage.prototype.reason = '';\nVFileMessage.prototype.message = '';\nVFileMessage.prototype.stack = '';\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport var path = {\n  basename: basename,\n  dirname: dirname,\n  extname: extname,\n  join: join,\n  sep: '/'\n};\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string');\n  }\n  assertPath(path);\n  var start = 0;\n  var end = -1;\n  var index = path.length;\n  /** @type {boolean | undefined} */\n  var seenNonSlash;\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1;\n          break;\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true;\n        end = index + 1;\n      }\n    }\n    return end < 0 ? '' : path.slice(start, end);\n  }\n  if (ext === path) {\n    return '';\n  }\n  var firstNonSlashEnd = -1;\n  var extIndex = ext.length - 1;\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1;\n        break;\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true;\n        firstNonSlashEnd = index + 1;\n      }\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index;\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1;\n          end = firstNonSlashEnd;\n        }\n      }\n    }\n  }\n  if (start === end) {\n    end = firstNonSlashEnd;\n  } else if (end < 0) {\n    end = path.length;\n  }\n  return path.slice(start, end);\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path);\n  if (path.length === 0) {\n    return '.';\n  }\n  var end = -1;\n  var index = path.length;\n  /** @type {boolean | undefined} */\n  var unmatchedSlash;\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index;\n        break;\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true;\n    }\n  }\n  return end < 0 ? path.charCodeAt(0) === 47 /* `/` */ ? '/' : '.' : end === 1 && path.charCodeAt(0) === 47 /* `/` */ ? '//' : path.slice(0, end);\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path);\n  var index = path.length;\n  var end = -1;\n  var startPart = 0;\n  var startDot = -1;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0;\n  /** @type {boolean | undefined} */\n  var unmatchedSlash;\n  while (index--) {\n    var code = path.charCodeAt(index);\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1;\n        break;\n      }\n      continue;\n    }\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true;\n      end = index + 1;\n    }\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index;\n      } else if (preDotState !== 1) {\n        preDotState = 1;\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1;\n    }\n  }\n  if (startDot < 0 || end < 0 ||\n  // We saw a non-dot character immediately before the dot.\n  preDotState === 0 ||\n  // The (right-most) trimmed path component is exactly `..`.\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join() {\n  var index = -1;\n  /** @type {string | undefined} */\n  var joined;\n  for (var _len = arguments.length, segments = new Array(_len), _key = 0; _key < _len; _key++) {\n    segments[_key] = arguments[_key];\n  }\n  while (++index < segments.length) {\n    assertPath(segments[index]);\n    if (segments[index]) {\n      joined = joined === undefined ? segments[index] : joined + '/' + segments[index];\n    }\n  }\n  return joined === undefined ? '.' : normalize(joined);\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path);\n  var absolute = path.charCodeAt(0) === 47; /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  var value = normalizeString(path, !absolute);\n  if (value.length === 0 && !absolute) {\n    value = '.';\n  }\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/';\n  }\n  return absolute ? '/' + value : value;\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  var result = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var index = -1;\n  /** @type {number | undefined} */\n  var code;\n  /** @type {number} */\n  var lastSlashIndex;\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index);\n    } else if (code === 47 /* `/` */) {\n      break;\n    } else {\n      code = 47; /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 /* `.` */ || result.charCodeAt(result.length - 2) !== 46 /* `.` */) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/');\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = '';\n                lastSegmentLength = 0;\n              } else {\n                result = result.slice(0, lastSlashIndex);\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/');\n              }\n              lastSlash = index;\n              dots = 0;\n              continue;\n            }\n          } else if (result.length > 0) {\n            result = '';\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index);\n        } else {\n          result = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++;\n    } else {\n      dots = -1;\n    }\n  }\n  return result;\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n/* eslint-enable max-depth, complexity */","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport var proc = {\n  cwd: cwd\n};\nfunction cwd() {\n  return '/';\n}","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return fileUrlOrPath !== null && typeof fileUrlOrPath === 'object' &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.href &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.origin;\n}","/// <reference lib=\"dom\" />\n\nimport { isUrl } from './minurl.shared.js';\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path);\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    var error = new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `' + path + '`');\n    error.code = 'ERR_INVALID_ARG_TYPE';\n    throw error;\n  }\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    var _error = new TypeError('The URL must be of scheme file');\n    _error.code = 'ERR_INVALID_URL_SCHEME';\n    throw _error;\n  }\n  return getPathFromURLPosix(path);\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    var error = new TypeError('File URL host must be \"localhost\" or empty on darwin');\n    error.code = 'ERR_INVALID_FILE_URL_HOST';\n    throw error;\n  }\n  var pathname = url.pathname;\n  var index = -1;\n  while (++index < pathname.length) {\n    if (pathname.charCodeAt(index) === 37 /* `%` */ && pathname.charCodeAt(index + 1) === 50 /* `2` */) {\n      var third = pathname.charCodeAt(index + 2);\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        var _error2 = new TypeError('File URL path must not include encoded / characters');\n        _error2.code = 'ERR_INVALID_FILE_URL_PATH';\n        throw _error2;\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\nexport { isUrl } from './minurl.shared.js';","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer';\nimport { VFileMessage } from 'vfile-message';\nimport { path } from './minpath.js';\nimport { proc } from './minproc.js';\nimport { urlToPath, isUrl } from './minurl.js';\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname'];\nexport var VFile = /*#__PURE__*/function () {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  function VFile(value) {\n    _classCallCheck(this, VFile);\n    /** @type {Options | VFile} */\n    var options;\n    if (!value) {\n      options = {};\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {\n        value: value\n      };\n    } else if (isUrl(value)) {\n      options = {\n        path: value\n      };\n    } else {\n      options = value;\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {};\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = [];\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = [];\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd();\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value;\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored;\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result;\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map;\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    var index = -1;\n    while (++index < order.length) {\n      var _prop = order[index];\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (_prop in options && options[_prop] !== undefined && options[_prop] !== null) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[_prop] = _prop === 'history' ? _toConsumableArray(options[_prop]) : options[_prop];\n      }\n    }\n\n    /** @type {string} */\n    var prop;\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop];\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  _createClass(VFile, [{\n    key: \"path\",\n    get: function get() {\n      return this.history[this.history.length - 1];\n    }\n\n    /**\n     * Set the full path (example: `'~/index.min.js'`).\n     *\n     * Cannot be nullified.\n     * You can set a file URL (a `URL` object with a `file:` protocol) which will\n     * be turned into a path with `url.fileURLToPath`.\n     *\n     * @param {string | URL} path\n     */,\n    set: function set(path) {\n      if (isUrl(path)) {\n        path = urlToPath(path);\n      }\n      assertNonEmpty(path, 'path');\n      if (this.path !== path) {\n        this.history.push(path);\n      }\n    }\n\n    /**\n     * Get the parent path (example: `'~'`).\n     */\n  }, {\n    key: \"dirname\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.dirname(this.path) : undefined;\n    }\n\n    /**\n     * Set the parent path (example: `'~'`).\n     *\n     * Cannot be set if there’s no `path` yet.\n     */,\n    set: function set(dirname) {\n      assertPath(this.basename, 'dirname');\n      this.path = path.join(dirname || '', this.basename);\n    }\n\n    /**\n     * Get the basename (including extname) (example: `'index.min.js'`).\n     */\n  }, {\n    key: \"basename\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.basename(this.path) : undefined;\n    }\n\n    /**\n     * Set basename (including extname) (`'index.min.js'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be nullified (use `file.path = file.dirname` instead).\n     */,\n    set: function set(basename) {\n      assertNonEmpty(basename, 'basename');\n      assertPart(basename, 'basename');\n      this.path = path.join(this.dirname || '', basename);\n    }\n\n    /**\n     * Get the extname (including dot) (example: `'.js'`).\n     */\n  }, {\n    key: \"extname\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.extname(this.path) : undefined;\n    }\n\n    /**\n     * Set the extname (including dot) (example: `'.js'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be set if there’s no `path` yet.\n     */,\n    set: function set(extname) {\n      assertPart(extname, 'extname');\n      assertPath(this.dirname, 'extname');\n      if (extname) {\n        if (extname.charCodeAt(0) !== 46 /* `.` */) {\n          throw new Error('`extname` must start with `.`');\n        }\n        if (extname.includes('.', 1)) {\n          throw new Error('`extname` cannot contain multiple dots');\n        }\n      }\n      this.path = path.join(this.dirname, this.stem + (extname || ''));\n    }\n\n    /**\n     * Get the stem (basename w/o extname) (example: `'index.min'`).\n     */\n  }, {\n    key: \"stem\",\n    get: function get() {\n      return typeof this.path === 'string' ? path.basename(this.path, this.extname) : undefined;\n    }\n\n    /**\n     * Set the stem (basename w/o extname) (example: `'index.min'`).\n     *\n     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n     * on windows).\n     * Cannot be nullified (use `file.path = file.dirname` instead).\n     */,\n    set: function set(stem) {\n      assertNonEmpty(stem, 'stem');\n      assertPart(stem, 'stem');\n      this.path = path.join(this.dirname || '', stem + (this.extname || ''));\n    }\n\n    /**\n     * Serialize the file.\n     *\n     * @param {BufferEncoding | null | undefined} [encoding='utf8']\n     *   Character encoding to understand `value` as when it’s a `Buffer`\n     *   (default: `'utf8'`).\n     * @returns {string}\n     *   Serialized file.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString(encoding) {\n      return (this.value || '').toString(encoding || undefined);\n    }\n\n    /**\n     * Create a warning message associated with the file.\n     *\n     * Its `fatal` is set to `false` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"message\",\n    value: function message(reason, place, origin) {\n      var message = new VFileMessage(reason, place, origin);\n      if (this.path) {\n        message.name = this.path + ':' + message.name;\n        message.file = this.path;\n      }\n      message.fatal = false;\n      this.messages.push(message);\n      return message;\n    }\n\n    /**\n     * Create an info message associated with the file.\n     *\n     * Its `fatal` is set to `null` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"info\",\n    value: function info(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = null;\n      return message;\n    }\n\n    /**\n     * Create a fatal error associated with the file.\n     *\n     * Its `fatal` is set to `true` and `file` is set to the current file path.\n     * Its added to `file.messages`.\n     *\n     * > 👉 **Note**: a fatal error means that a file is no longer processable.\n     *\n     * @param {string | Error | VFileMessage} reason\n     *   Reason for message, uses the stack and message of the error if given.\n     * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n     *   Place in file where the message occurred.\n     * @param {string | null | undefined} [origin]\n     *   Place in code where the message originates (example:\n     *   `'my-package:my-rule'` or `'my-rule'`).\n     * @returns {never}\n     *   Message.\n     * @throws {VFileMessage}\n     *   Message.\n     */\n  }, {\n    key: \"fail\",\n    value: function fail(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = true;\n      throw message;\n    }\n  }]);\n  return VFile;\n}();\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error('`' + name + '` cannot be a path: did not expect `' + path.sep + '`');\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty');\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too');\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value);\n}","import _toArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport { bail } from 'bail';\nimport isBuffer from 'is-buffer';\nimport extend from 'extend';\nimport isPlainObj from 'is-plain-obj';\nimport { trough } from 'trough';\nimport { VFile } from 'vfile';\n\n// Expose a frozen processor.\nexport var unified = base().freeze();\nvar own = {}.hasOwnProperty;\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  var transformers = trough();\n  /** @type {Processor['attachers']} */\n  var attachers = [];\n  /** @type {Record<string, unknown>} */\n  var namespace = {};\n  /** @type {boolean|undefined} */\n  var frozen;\n  var freezeIndex = -1;\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data;\n  processor.Parser = undefined;\n  processor.Compiler = undefined;\n\n  // Lock.\n  processor.freeze = freeze;\n\n  // Plugins.\n  processor.attachers = attachers;\n  // @ts-expect-error: overloads are handled.\n  processor.use = use;\n\n  // API.\n  processor.parse = parse;\n  processor.stringify = stringify;\n  // @ts-expect-error: overloads are handled.\n  processor.run = run;\n  processor.runSync = runSync;\n  // @ts-expect-error: overloads are handled.\n  processor.process = process;\n  processor.processSync = processSync;\n\n  // Expose.\n  return processor;\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    var destination = base();\n    var index = -1;\n    while (++index < attachers.length) {\n      destination.use.apply(destination, _toConsumableArray(attachers[index]));\n    }\n    destination.data(extend(true, {}, namespace));\n    return destination;\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen);\n        namespace[key] = value;\n        return processor;\n      }\n\n      // Get `key`.\n      return own.call(namespace, key) && namespace[key] || null;\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen);\n      namespace = key;\n      return processor;\n    }\n\n    // Get space.\n    return namespace;\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor;\n    }\n    while (++freezeIndex < attachers.length) {\n      var _attachers$freezeInde = _toArray(attachers[freezeIndex]),\n        attacher = _attachers$freezeInde[0],\n        options = _attachers$freezeInde.slice(1);\n      if (options[0] === false) {\n        continue;\n      }\n      if (options[0] === true) {\n        options[0] = undefined;\n      }\n\n      /** @type {Transformer|void} */\n      var transformer = attacher.call.apply(attacher, [processor].concat(_toConsumableArray(options)));\n      if (typeof transformer === 'function') {\n        transformers.use(transformer);\n      }\n    }\n    frozen = true;\n    freezeIndex = Number.POSITIVE_INFINITY;\n    return processor;\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value) {\n    for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      options[_key - 1] = arguments[_key];\n    }\n    /** @type {Record<string, unknown>|undefined} */\n    var settings;\n    assertUnfrozen('use', frozen);\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(void 0, [value].concat(options));\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value);\n      } else {\n        addPreset(value);\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`');\n    }\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings);\n    }\n    return processor;\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value);\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          var _value = _toArray(value),\n            plugin = _value[0],\n            _options = _value.slice(1);\n          addPlugin.apply(void 0, [plugin].concat(_toConsumableArray(_options)));\n        } else {\n          addPreset(value);\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`');\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins);\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings);\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      var index = -1;\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          var thing = plugins[index];\n          add(thing);\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`');\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      var index = -1;\n      /** @type {Processor['attachers'][number]|undefined} */\n      var entry;\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index];\n          break;\n        }\n      }\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value);\n        }\n        entry[1] = value;\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push(Array.prototype.slice.call(arguments));\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze();\n    var file = vfile(doc);\n    var Parser = processor.Parser;\n    assertParser('parse', Parser);\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse();\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file); // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze();\n    var file = vfile(doc);\n    var Compiler = processor.Compiler;\n    assertCompiler('stringify', Compiler);\n    assertNode(node);\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile();\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file); // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node);\n    processor.freeze();\n    if (!callback && typeof doc === 'function') {\n      callback = doc;\n      doc = undefined;\n    }\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done);\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node;\n        if (error) {\n          reject(error);\n        } else if (resolve) {\n          resolve(tree);\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file);\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    var result;\n    /** @type {boolean|undefined} */\n    var complete;\n    processor.run(node, file, done);\n    assertDone('runSync', 'run', complete);\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result;\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error);\n      result = tree;\n      complete = true;\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze();\n    assertParser('process', processor.Parser);\n    assertCompiler('process', processor.Compiler);\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      var file = vfile(doc);\n      processor.run(processor.parse(file), file, function (error, tree, file) {\n        if (error || !tree || !file) {\n          done(error);\n        } else {\n          /** @type {unknown} */\n          var result = processor.stringify(tree, file);\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result;\n          } else {\n            file.result = result;\n          }\n          done(error, file);\n        }\n      });\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error);\n        } else if (resolve) {\n          resolve(file);\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file);\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    var complete;\n    processor.freeze();\n    assertParser('processSync', processor.Parser);\n    assertCompiler('processSync', processor.Compiler);\n    var file = vfile(doc);\n    processor.process(file, done);\n    assertDone('processSync', 'process', complete);\n    return file;\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true;\n      bail(error);\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return typeof value === 'function' &&\n  // Prototypes do exist.\n  // type-coverage:ignore-next-line\n  value.prototype && (\n  // A function with keys in its prototype is probably a constructor.\n  // Classes’ prototype methods are not enumerable, so we check if some value\n  // exists in the prototype.\n  // type-coverage:ignore-next-line\n  keys(value.prototype) || name in value.prototype);\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  var key;\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`');\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`');\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error('Cannot call `' + name + '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.');\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`');\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error('`' + name + '` finished async. Use `' + asyncName + '` instead');\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value);\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(value && typeof value === 'object' && 'message' in value && 'messages' in value);\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value);\n}","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nvar emptyOptions = {};\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  var settings = options || emptyOptions;\n  var includeImageAlt = typeof settings.includeImageAlt === 'boolean' ? settings.includeImageAlt : true;\n  var includeHtml = typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true;\n  return one(value, includeImageAlt, includeHtml);\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value;\n    }\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt;\n    }\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml);\n    }\n  }\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml);\n  }\n  return '';\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  var result = [];\n  var index = -1;\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml);\n  }\n  return result.join('');\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object');\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  var end = list.length;\n  var chunkStart = 0;\n  /** @type {Array<unknown>} */\n  var parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice.apply(list, _toConsumableArray(parameters));\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice.apply(list, _toConsumableArray(parameters));\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport { splice } from 'micromark-util-chunked';\nvar hasOwnProperty = {}.hasOwnProperty;\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  var all = {};\n  var index = -1;\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index]);\n  }\n  return all;\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  var hook;\n  for (hook in extension) {\n    var maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined;\n    /** @type {Record<string, unknown>} */\n    var left = maybe || (all[hook] = {});\n    /** @type {Record<string, unknown> | undefined} */\n    var right = extension[hook];\n    /** @type {string} */\n    var code = void 0;\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = [];\n        var value = right[code];\n        constructs(\n        // @ts-expect-error Looks like a list.\n        left[code], Array.isArray(value) ? value : value ? [value] : []);\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  var index = -1;\n  /** @type {Array<unknown>} */\n  var before = [];\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;\n    (list[index].add === 'after' ? existing : before).push(list[index]);\n  }\n  splice(existing, 0, 0, before);\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  var handlers = {};\n  var index = -1;\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index]);\n  }\n  return handlers;\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  var hook;\n  for (hook in extension) {\n    var maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined;\n    var left = maybe || (all[hook] = {});\n    var right = extension[hook];\n    /** @type {keyof Handles} */\n    var type = void 0;\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type];\n      }\n    }\n  }\n}","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport var unicodePunctuationRegex = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport { unicodePunctuationRegex } from './lib/unicode-punctuation-regex.js';\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var unicodePunctuation = regexCheck(unicodePunctuationRegex);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  var limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  var size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport var content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  var previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, contentStart, 'linePrefix');\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph');\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText');\n      effects.exit('paragraph');\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit('chunkText');\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport var document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  var self = this;\n  /** @type {Array<StackItem>} */\n  var stack = [];\n  var continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  var childFlow;\n  /** @type {Token | undefined} */\n  var childToken;\n  /** @type {number} */\n  var lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      var item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      var indexBeforeExits = self.events.length;\n      var indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      var point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === 'chunkFlow') {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      var index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point);\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit('chunkFlow'));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    var stream = self.sliceStream(token);\n    if (eof) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      var index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      var indexBeforeExits = self.events.length;\n      var indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      var seen;\n      /** @type {Point | undefined} */\n      var point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === 'chunkFlow') {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point);\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    var index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      var entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), 'linePrefix', this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, 'linePrefix')(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  var end = list.length;\n  var chunkStart = 0;\n  /** @type {Array<unknown>} */\n  var parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice.apply(list, _toConsumableArray(parameters));\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice.apply(list, _toConsumableArray(parameters));\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  var jumps = {};\n  var index = -1;\n  /** @type {Event} */\n  var event;\n  /** @type {number | undefined} */\n  var lineIndex;\n  /** @type {number} */\n  var otherIndex;\n  /** @type {Event} */\n  var otherEvent;\n  /** @type {Array<Event>} */\n  var parameters;\n  /** @type {Array<Event>} */\n  var subevents;\n  /** @type {boolean | undefined} */\n  var more;\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events[index];\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === 'chunkFlow' && events[index - 1][1].type === 'listItemPrefix') {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === 'lineEndingBlank') {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === 'content') {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break;\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events[otherIndex];\n        if (otherEvent[1].type === 'lineEnding' || otherEvent[1].type === 'lineEndingBlank') {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank';\n            }\n            otherEvent[1].type = 'lineEnding';\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        splice(events, lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1];\n  var context = events[eventIndex][2];\n  var startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  var startPositions = [];\n  var tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  var childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  var jumps = [];\n  /** @type {Record<string, number>} */\n  var gaps = {};\n  /** @type {Array<Chunk>} */\n  var stream;\n  /** @type {Token | undefined} */\n  var previous;\n  var index = -1;\n  /** @type {Token | undefined} */\n  var current = token;\n  var adjust = 0;\n  var start = 0;\n  var breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    var slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    var _start = startPositions.pop();\n    jumps.unshift([_start, _start + slice.length - 1]);\n    splice(events, _start, 2, slice);\n  }\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport var content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  var previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content');\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent');\n    effects.exit('content');\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit('chunkContent');\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, prefixed, 'linePrefix');\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    var tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport var flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  var self = this;\n  var initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), 'linePrefix')));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport var resolver = {\n  resolveAll: createResolver()\n};\nexport var string = initializeFactory('string');\nexport var text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined)\n  };\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    var self = this;\n    var constructs = this.parser.constructs[field];\n    var text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter('data');\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data');\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      var list = constructs[code];\n      var index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          var item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    var index = -1;\n    /** @type {number | undefined} */\n    var enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === 'lineEnding') && events[eventIndex - 1][1].type === 'data') {\n      var data = events[eventIndex - 1][1];\n      var chunks = context.sliceStream(data);\n      var index = chunks.length;\n      var bufferIndex = -1;\n      var size = 0;\n      /** @type {boolean | undefined} */\n      var tabs = void 0;\n      while (index--) {\n        var chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        var token = {\n          type: eventIndex === events.length || tabs || size < 2 ? 'lineSuffix' : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        };\n        data.end = Object.assign({}, token.start);\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  var called = [];\n  var index = -1;\n  while (++index < constructs.length) {\n    var resolve = constructs[index].resolveAll;\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context);\n      called.push(resolve);\n    }\n  }\n  return events;\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  var point = Object.assign(from ? Object.assign({}, from) : {\n    line: 1,\n    column: 1,\n    offset: 0\n  }, {\n    _index: 0,\n    _bufferIndex: -1\n  });\n  /** @type {Record<string, number>} */\n  var columnStart = {};\n  /** @type {Array<Construct>} */\n  var resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  var chunks = [];\n  /** @type {Array<Token>} */\n  var stack = [];\n  /** @type {boolean | undefined} */\n  var consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  var context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: defineSkip,\n    write: write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  var state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  var expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    var _point = point,\n      line = _point.line,\n      column = _point.column,\n      offset = _point.offset,\n      _index = _point._index,\n      _bufferIndex = _point._bufferIndex;\n    return {\n      line: line,\n      column: column,\n      offset: offset,\n      _index: _index,\n      _bufferIndex: _bufferIndex\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    var chunkIndex;\n    while (point._index < chunks.length) {\n      var chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    var token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    var token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      var listOfConstructs;\n      /** @type {number} */\n      var constructIndex;\n      /** @type {Construct} */\n      var currentConstruct;\n      /** @type {Info} */\n      var info;\n      return Array.isArray(constructs) /* c8 ignore next 1 */ ? handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // @ts-expect-error Looks like a construct.\n      handleListOfConstructs([constructs]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          var def = code !== null && map[code];\n          var all = code !== null && map.null;\n          var list = [].concat(_toConsumableArray(Array.isArray(def) ? def : def ? [def] : []), _toConsumableArray(Array.isArray(all) ? all : all ? [all] : []));\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    var startPoint = now();\n    var startPrevious = context.previous;\n    var startCurrentConstruct = context.currentConstruct;\n    var startEventsIndex = context.events.length;\n    var startStack = Array.from(stack);\n    return {\n      restore: restore,\n      from: startEventsIndex\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index;\n  var startBufferIndex = token.start._bufferIndex;\n  var endIndex = token.end._index;\n  var endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  var view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      var head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  var index = -1;\n  /** @type {Array<string>} */\n  var result = [];\n  /** @type {boolean | undefined} */\n  var atTab;\n  while (++index < chunks.length) {\n    var chunk = chunks[index];\n    /** @type {string} */\n    var value = void 0;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = '\\r';\n          break;\n        }\n      case -4:\n        {\n          value = '\\n';\n          break;\n        }\n      case -3:\n        {\n          value = '\\r' + '\\n';\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? ' ' : '\\t';\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = ' ';\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0;\n  /** @type {NonNullable<Code>} */\n  var marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak');\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence');\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak');\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit('thematicBreakSequence');\n    return markdownSpace(code) ? factorySpace(effects, atBreak, 'whitespace')(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport var list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this;\n  var tail = self.events[self.events.length - 1];\n  var initialSize = tail && tail[1].type === 'linePrefix' ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  var size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    var kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? 'listUnordered' : 'listOrdered');\n    if (kind === 'listUnordered' ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix');\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix');\n        effects.enter('listItemValue');\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit('listItemValue');\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker');\n    effects.consume(code);\n    effects.exit('listItemMarker');\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace');\n      effects.consume(code);\n      effects.exit('listItemPrefixWhitespace');\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit('listItemPrefix'), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, 'listItemIndent', self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this;\n  return factorySpace(effects, afterPrefix, 'listItemIndent', self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    var tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'listItemIndent' && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, 'listItemPrefixWhitespace', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    var tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === 'listItemPrefixWhitespace' ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      var state = self.containerState;\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter('blockQuotePrefix');\n      effects.enter('blockQuoteMarker');\n      effects.consume(code);\n      effects.exit('blockQuoteMarker');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace');\n      effects.consume(code);\n      effects.exit('blockQuotePrefixWhitespace');\n      effects.exit('blockQuotePrefix');\n      return ok;\n    }\n    effects.exit('blockQuotePrefix');\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  var self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote');\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  var limit = max || Number.POSITIVE_INFINITY;\n  var balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  var self = this;\n  var size = 0;\n  /** @type {boolean} */\n  var seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return atBreak;\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit('chunkString');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  var marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return factorySpace(effects, atBreak, 'linePrefix');\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  var seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? 'linePrefix' : 'lineSuffix')(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, ' ')\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport var definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nvar titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this;\n  /** @type {string} */\n  var identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition');\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, 'definitionLabel', 'definitionLabelMarker', 'definitionLabelString')(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, 'definitionDestination', 'definitionDestinationLiteral', 'definitionDestinationLiteralMarker', 'definitionDestinationRaw', 'definitionDestinationString')(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, 'whitespace')(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition');\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, 'definitionTitle', 'definitionTitleMarker', 'definitionTitleString')(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nvar furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented');\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    var tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter('codeFlowValue');\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented');\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  var self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    var tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport var headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2;\n  var contentStart = 3;\n  /** @type {Token} */\n  var content;\n  /** @type {Token} */\n  var text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === 'whitespace') {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === 'atxHeadingSequence' && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === 'whitespace')) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading');\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence');\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence');\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading');\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText');\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit('atxHeadingSequence');\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  var index = events.length;\n  /** @type {number | undefined} */\n  var content;\n  /** @type {number | undefined} */\n  var text;\n  /** @type {number | undefined} */\n  var definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index;\n      }\n    }\n  }\n  var heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText';\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this;\n  /** @type {NonNullable<Code>} */\n  var marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    var index = self.events.length;\n    /** @type {boolean | undefined} */\n    var paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== 'lineEnding' && self.events[index][1].type !== 'linePrefix' && self.events[index][1].type !== 'content') {\n        paragraph = self.events[index][1].type === 'paragraph';\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine');\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence');\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit('setextHeadingLineSequence');\n    return markdownSpace(code) ? factorySpace(effects, after, 'lineSuffix')(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport var htmlBlockNames = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'search', 'section', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport var htmlRawNames = ['pre', 'script', 'style', 'textarea'];","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport var htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nvar blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nvar nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  var index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this;\n  /** @type {number} */\n  var marker;\n  /** @type {boolean} */\n  var closingTag;\n  /** @type {string} */\n  var buffer;\n  /** @type {number} */\n  var index;\n  /** @type {Code} */\n  var markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow');\n    effects.enter('htmlFlowData');\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    var value = 'CDATA[';\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      var slash = code === 47;\n      var name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData');\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter('htmlFlowData');\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      var name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow');\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nvar nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport var codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this;\n  /** @type {Construct} */\n  var closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  var initialPrefix = 0;\n  var sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  var marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    var tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === 'linePrefix' ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter('codeFenced');\n    effects.enter('codeFencedFence');\n    effects.enter('codeFencedFenceSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit('codeFencedFenceSequence');\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, 'whitespace')(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence');\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter('codeFencedFenceInfo');\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceInfo');\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceInfo');\n      return factorySpace(effects, metaBefore, 'whitespace')(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter('codeFencedFenceMeta');\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceMeta');\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, 'linePrefix', initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter('codeFlowValue');\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced');\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    var size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence');\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence');\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence');\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence');\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nvar element = document.createElement('i');\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  var characterReference = '&' + value + ';';\n  element.innerHTML = characterReference;\n  var char = element.textContent;\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false;\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char;\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport var characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this;\n  var size = 0;\n  /** @type {number} */\n  var max;\n  /** @type {(code: Code) => boolean} */\n  var test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference');\n    effects.enter('characterReferenceMarker');\n    effects.consume(code);\n    effects.exit('characterReferenceMarker');\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerNumeric');\n      return numeric;\n    }\n    effects.enter('characterReferenceValue');\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerHexadecimal');\n      effects.enter('characterReferenceValue');\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter('characterReferenceValue');\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      var token = effects.exit('characterReferenceValue');\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker');\n      effects.consume(code);\n      effects.exit('characterReferenceMarker');\n      effects.exit('characterReference');\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport var characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape');\n    effects.enter('escapeMarker');\n    effects.consume(code);\n    effects.exit('escapeMarker');\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue');\n      effects.consume(code);\n      effects.exit('characterEscapeValue');\n      effects.exit('characterEscape');\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport var lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, ok, 'linePrefix');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport var labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nvar referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nvar referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  var index = -1;\n  while (++index < events.length) {\n    var token = events[index][1];\n    if (token.type === 'labelImage' || token.type === 'labelLink' || token.type === 'labelEnd') {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2);\n      token.type = 'data';\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length;\n  var offset = 0;\n  /** @type {Token} */\n  var token;\n  /** @type {number | undefined} */\n  var open;\n  /** @type {number | undefined} */\n  var close;\n  /** @type {Array<Event>} */\n  var media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === 'link' || token.type === 'labelLink' && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === 'labelImage' || token.type === 'labelLink') && !token._balanced) {\n        open = index;\n        if (token.type !== 'labelLink') {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index;\n    }\n  }\n  var group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  var label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  var text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this;\n  var index = self.events.length;\n  /** @type {Token} */\n  var labelStart;\n  /** @type {boolean} */\n  var defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === 'labelImage' || self.events[index][1].type === 'labelLink') && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter('labelEnd');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelEnd');\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource');\n    effects.enter('resourceMarker');\n    effects.consume(code);\n    effects.exit('resourceMarker');\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, 'resourceDestination', 'resourceDestinationLiteral', 'resourceDestinationLiteralMarker', 'resourceDestinationRaw', 'resourceDestinationString', 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, 'resourceTitle', 'resourceTitleMarker', 'resourceTitleString')(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker');\n      effects.consume(code);\n      effects.exit('resourceMarker');\n      effects.exit('resource');\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  var self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, 'reference', 'referenceMarker', 'referenceString')(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference');\n    effects.enter('referenceMarker');\n    effects.consume(code);\n    effects.exit('referenceMarker');\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker');\n      effects.consume(code);\n      effects.exit('referenceMarker');\n      effects.exit('reference');\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport var labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage');\n    effects.enter('labelImageMarker');\n    effects.consume(code);\n    effects.exit('labelImageMarker');\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker');\n      effects.consume(code);\n      effects.exit('labelMarker');\n      effects.exit('labelImage');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport var attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  var index = -1;\n  /** @type {number} */\n  var open;\n  /** @type {Token} */\n  var group;\n  /** @type {Token} */\n  var text;\n  /** @type {Token} */\n  var openingSequence;\n  /** @type {Token} */\n  var closingSequence;\n  /** @type {number} */\n  var use;\n  /** @type {Array<Event>} */\n  var nextEvents;\n  /** @type {number} */\n  var offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          var start = Object.assign({}, events[open][1].end);\n          var end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end: end\n          };\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  var attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  var previous = this.previous;\n  var before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  var marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    var token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    var after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    var open = !after || after === 2 && before || attentionMarkers.includes(code);\n    var close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport var autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink');\n    effects.enter('autolinkMarker');\n    effects.consume(code);\n    effects.exit('autolinkMarker');\n    effects.enter('autolinkProtocol');\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol');\n      effects.enter('autolinkMarker');\n      effects.consume(code);\n      effects.exit('autolinkMarker');\n      effects.exit('autolink');\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail';\n      effects.enter('autolinkMarker');\n      effects.consume(code);\n      effects.exit('autolinkMarker');\n      effects.exit('autolink');\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      var next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport var htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  var marker;\n  /** @type {number} */\n  var index;\n  /** @type {State} */\n  var returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    var value = 'CDATA[';\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport var labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelLink');\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport var hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape');\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport var codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4;\n  var headEnterIndex = 3;\n  /** @type {number} */\n  var index;\n  /** @type {number | undefined} */\n  var enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === 'lineEnding' || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === 'lineEnding' || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding';\n        events[tailExitIndex][1].type = 'codeTextPadding';\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === 'lineEnding') {\n      events[enter][1].type = 'codeTextData';\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === 'characterEscape';\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  var self = this;\n  var sizeOpen = 0;\n  /** @type {number} */\n  var size;\n  /** @type {Token} */\n  var token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText');\n    effects.enter('codeTextSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit('codeTextSequence');\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence');\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return between;\n    }\n\n    // Data.\n    effects.enter('codeTextData');\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit('codeTextData');\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence');\n      effects.exit('codeText');\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData';\n    return data(code);\n  }\n}","import _defineProperty from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _document, _flowInitial, _flow, _string, _text;\n/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport var document = (_document = {}, _defineProperty(_document, 42, list), _defineProperty(_document, 43, list), _defineProperty(_document, 45, list), _defineProperty(_document, 48, list), _defineProperty(_document, 49, list), _defineProperty(_document, 50, list), _defineProperty(_document, 51, list), _defineProperty(_document, 52, list), _defineProperty(_document, 53, list), _defineProperty(_document, 54, list), _defineProperty(_document, 55, list), _defineProperty(_document, 56, list), _defineProperty(_document, 57, list), _defineProperty(_document, 62, blockQuote), _document);\n\n/** @satisfies {Extension['contentInitial']} */\nexport var contentInitial = _defineProperty({}, 91, definition);\n\n/** @satisfies {Extension['flowInitial']} */\nexport var flowInitial = (_flowInitial = {}, _defineProperty(_flowInitial, -2, codeIndented), _defineProperty(_flowInitial, -1, codeIndented), _defineProperty(_flowInitial, 32, codeIndented), _flowInitial);\n\n/** @satisfies {Extension['flow']} */\nexport var flow = (_flow = {}, _defineProperty(_flow, 35, headingAtx), _defineProperty(_flow, 42, thematicBreak), _defineProperty(_flow, 45, [setextUnderline, thematicBreak]), _defineProperty(_flow, 60, htmlFlow), _defineProperty(_flow, 61, setextUnderline), _defineProperty(_flow, 95, thematicBreak), _defineProperty(_flow, 96, codeFenced), _defineProperty(_flow, 126, codeFenced), _flow);\n\n/** @satisfies {Extension['string']} */\nexport var string = (_string = {}, _defineProperty(_string, 38, characterReference), _defineProperty(_string, 92, characterEscape), _string);\n\n/** @satisfies {Extension['text']} */\nexport var text = (_text = {}, _defineProperty(_text, -5, lineEnding), _defineProperty(_text, -4, lineEnding), _defineProperty(_text, -3, lineEnding), _defineProperty(_text, 33, labelStartImage), _defineProperty(_text, 38, characterReference), _defineProperty(_text, 42, attention), _defineProperty(_text, 60, [autolink, htmlText]), _defineProperty(_text, 91, labelStartLink), _defineProperty(_text, 92, [hardBreakEscape, characterEscape]), _defineProperty(_text, 93, labelEnd), _defineProperty(_text, 95, attention), _defineProperty(_text, 96, codeText), _text);\n\n/** @satisfies {Extension['insideSpan']} */\nexport var insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport var attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport var disable = {\n  null: []\n};","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { text, string } from './initialize/text.js';\nimport { createTokenizer } from './create-tokenizer.js';\nimport * as defaultConstructs from './constructs.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  var settings = options || {};\n  var constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs].concat(_toConsumableArray(settings.extensions || [])));\n\n  /** @type {ParseContext} */\n  var parser = {\n    defined: [],\n    lazy: {},\n    constructs: constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nvar search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  var column = 1;\n  var buffer = '';\n  /** @type {boolean | undefined} */\n  var start = true;\n  /** @type {boolean | undefined} */\n  var atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    var chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    var match;\n    /** @type {number} */\n    var next;\n    /** @type {number} */\n    var startPosition;\n    /** @type {number} */\n    var endPosition;\n    /** @type {Code} */\n    var code;\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding);\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) {\n                chunks.push(-1);\n              }\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  var code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55295 && code < 57344 ||\n  // Noncharacters.\n  code > 64975 && code < 65008 /* eslint-disable no-bitwise */ || (code & 65535) === 65535 || (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n  // Out of range\n  code > 1114111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCharCode(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nvar characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  var head = $2.charCodeAt(0);\n  if (head === 35) {\n    var _head = $2.charCodeAt(1);\n    var hex = _head === 120 || _head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse } from 'micromark/lib/parse.js';\nimport { preprocess } from 'micromark/lib/preprocess.js';\nimport { postprocess } from 'micromark/lib/postprocess.js';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nvar own = {}.hasOwnProperty;\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport var fromMarkdown =\n/**\n * @type {(\n *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n *   ((value: Value, options?: Options | null | undefined) => Root)\n * )}\n */\n\n/**\n * @param {Value} value\n * @param {Encoding | Options | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n */\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n};\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  var config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  var data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    var tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    var context = {\n      stack: [tree],\n      tokenStack: [],\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    };\n    /** @type {Array<number>} */\n    var listStack = [];\n    var index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === 'listOrdered' || events[index][1].type === 'listUnordered') {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          var tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      var handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      var _tail = context.tokenStack[context.tokenStack.length - 1];\n      var _handler = _tail[1] || defaultOnError;\n      _handler.call(context, undefined, _tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    var index = start - 1;\n    var containerBalance = -1;\n    var listSpread = false;\n    /** @type {Token | undefined} */\n    var listItem;\n    /** @type {number | undefined} */\n    var lineIndex;\n    /** @type {number | undefined} */\n    var firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    var atMarker;\n    while (++index <= length) {\n      var event = events[index];\n      if (event[1].type === 'listUnordered' || event[1].type === 'listOrdered' || event[1].type === 'blockQuote') {\n        if (event[0] === 'enter') {\n          containerBalance++;\n        } else {\n          containerBalance--;\n        }\n        atMarker = undefined;\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n            firstBlankLineIndex = index;\n          }\n          atMarker = undefined;\n        }\n      } else if (event[1].type === 'linePrefix' || event[1].type === 'listItemValue' || event[1].type === 'listItemMarker' || event[1].type === 'listItemPrefix' || event[1].type === 'listItemPrefixWhitespace') {\n        // Empty.\n      } else {\n        atMarker = undefined;\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === 'listItemPrefix' || containerBalance === -1 && event[0] === 'exit' && (event[1].type === 'listUnordered' || event[1].type === 'listOrdered')) {\n        if (listItem) {\n          var tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            var tailEvent = events[tailIndex];\n            if (tailEvent[1].type === 'lineEnding' || tailEvent[1].type === 'lineEndingBlank') {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank';\n                listSpread = true;\n              }\n              tailEvent[1].type = 'lineEnding';\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === 'linePrefix' || tailEvent[1].type === 'blockQuotePrefix' || tailEvent[1].type === 'blockQuotePrefixWhitespace' || tailEvent[1].type === 'blockQuoteMarker' || tailEvent[1].type === 'listItemIndent') {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value;\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key];\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    var parent = this.stack[this.stack.length - 1];\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    };\n    return node;\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    var node = this.stack.pop();\n    var open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        var handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n    return node;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      var ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      setData('expectingFirstListItemValue');\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return;\n    this.buffer();\n    setData('flowCodeInside', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    setData('flowCodeInside');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    var label = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    var node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      var depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    var node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    var node = this.stack[this.stack.length - 1];\n    var tail = node.children[node.children.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      };\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    var tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      var tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      setData('atHardBreak');\n      return;\n    }\n    if (!getData('setextHeadingSlurpLineEnding') && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    var node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      var referenceType = getData('referenceType') || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    setData('referenceType');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    var node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      var referenceType = getData('referenceType') || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    setData('referenceType');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    var string = this.sliceSerialize(token);\n    var ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1];\n    var value = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    setData('inReference', true);\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      var children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    var data = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    var label = this.resume();\n    var node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    setData('referenceType', 'full');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token);\n    var type = getData('characterReferenceType');\n    /** @type {string} */\n    var value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === 'characterReferenceMarkerNumeric' ? 10 : 16);\n      setData('characterReferenceType');\n    } else {\n      var result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    var tail = this.stack.pop();\n    tail.value += value;\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    var node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    var node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  var index = -1;\n  while (++index < extensions.length) {\n    var value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  var key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        var right = extension[key];\n        if (right) {\n          var _combined$key;\n          (_combined$key = combined[key]).push.apply(_combined$key, _toConsumableArray(right));\n        }\n      } else if (key === 'transforms') {\n        var _right = extension[key];\n        if (_right) {\n          var _combined$key2;\n          (_combined$key2 = combined[key]).push.apply(_combined$key2, _toConsumableArray(_right));\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        var _right2 = extension[key];\n        if (_right2) {\n          Object.assign(combined[key], _right2);\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport { fromMarkdown } from 'mdast-util-from-markdown';\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  var _this = this;\n  /** @type {import('unified').ParserFunction<Root>} */\n  var parser = function parser(doc) {\n    // Assume options.\n    var settings = /** @type {Options} */_this.data('settings');\n    return fromMarkdown(doc, Object.assign({}, settings, options, {\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: _this.data('micromarkExtensions') || [],\n      mdastExtensions: _this.data('fromMarkdownExtensions') || []\n    }));\n  };\n  Object.assign(this, {\n    Parser: parser\n  });\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport { unicodePunctuationRegex } from './lib/unicode-punctuation-regex.js';\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var unicodePunctuation = regexCheck(unicodePunctuationRegex);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport var unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code));\n  }\n}","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport var unicodePunctuationRegex = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  var value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  var colon = value.indexOf(':');\n  var questionMark = value.indexOf('?');\n  var numberSign = value.indexOf('#');\n  var slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  var result = [];\n  var index = -1;\n  var start = 0;\n  var skip = 0;\n  while (++index < value.length) {\n    var code = value.charCodeAt(index);\n    /** @type {string} */\n    var replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      var next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","import _defineProperty from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  var listItems = [];\n  var index = -1;\n  while (++index < state.footnoteOrder.length) {\n    var def = state.footnoteById[state.footnoteOrder[index]];\n    if (!def) {\n      continue;\n    }\n    var content = state.all(def);\n    var id = String(def.identifier).toUpperCase();\n    var safeId = normalizeUri(id.toLowerCase());\n    var referenceIndex = 0;\n    /** @type {Array<ElementContent>} */\n    var backReferences = [];\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      var backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href: '#' + state.clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{\n          type: 'text',\n          value: '↩'\n        }]\n      };\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{\n            type: 'text',\n            value: String(referenceIndex)\n          }]\n        });\n      }\n      if (backReferences.length > 0) {\n        backReferences.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n      backReferences.push(backReference);\n    }\n    var tail = content[content.length - 1];\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      var _tail$children;\n      var tailTail = tail.children[tail.children.length - 1];\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' ';\n      } else {\n        tail.children.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n      (_tail$children = tail.children).push.apply(_tail$children, backReferences);\n    } else {\n      content.push.apply(content, backReferences);\n    }\n\n    /** @type {Element} */\n    var listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {\n        id: state.clobberPrefix + 'fn-' + safeId\n      },\n      children: state.wrap(content, true)\n    };\n    state.patch(def, listItem);\n    listItems.push(listItem);\n  }\n  if (listItems.length === 0) {\n    return;\n  }\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {\n      dataFootnotes: true,\n      className: ['footnotes']\n    },\n    children: [{\n      type: 'element',\n      tagName: state.footnoteLabelTagName,\n      properties: _objectSpread(_objectSpread({}, JSON.parse(JSON.stringify(state.footnoteLabelProperties))), {}, {\n        id: 'footnote-label'\n      }),\n      children: [{\n        type: 'text',\n        value: state.footnoteLabel\n      }]\n    }, {\n      type: 'text',\n      value: '\\n'\n    }, {\n      type: 'element',\n      tagName: 'ol',\n      properties: {},\n      children: state.wrap(listItems, true)\n    }, {\n      type: 'text',\n      value: '\\n'\n    }]\n  };\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport var is =\n/**\n * @type {(\n *   (() => false) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n * )}\n */\n\n/**\n * @param {unknown} [node]\n * @param {Test} [test]\n * @param {number | null | undefined} [index]\n * @param {Parent | null | undefined} [parent]\n * @param {unknown} [context]\n * @returns {boolean}\n */\n// eslint-disable-next-line max-params\nfunction is(node, test, index, parent, context) {\n  var check = convert(test);\n  if (index !== undefined && index !== null && (typeof index !== 'number' || index < 0 || index === Number.POSITIVE_INFINITY)) {\n    throw new Error('Expected positive finite index');\n  }\n  if (parent !== undefined && parent !== null && (!is(parent) || !parent.children)) {\n    throw new Error('Expected parent node');\n  }\n  if ((parent === undefined || parent === null) !== (index === undefined || index === null)) {\n    throw new Error('Expected both parent and index');\n  }\n\n  // @ts-expect-error Looks like a node.\n  return node && node.type && typeof node.type === 'string' ? Boolean(check.call(context, node, index, parent)) : false;\n};\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport var convert =\n/**\n * @type {(\n *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n *   ((test?: Test) => AssertAnything)\n * )}\n */\n\n/**\n * @param {Test} [test]\n * @returns {AssertAnything}\n */\nfunction convert(test) {\n  if (test === undefined || test === null) {\n    return ok;\n  }\n  if (typeof test === 'string') {\n    return typeFactory(test);\n  }\n  if (typeof test === 'object') {\n    return Array.isArray(test) ? anyFactory(test) : propsFactory(test);\n  }\n  if (typeof test === 'function') {\n    return castFactory(test);\n  }\n  throw new Error('Expected function, string, or object as test');\n};\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  var checks = [];\n  var index = -1;\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index]);\n  }\n  return castFactory(any);\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any() {\n    var index = -1;\n    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n      parameters[_key] = arguments[_key];\n    }\n    while (++index < checks.length) {\n      var _checks$index;\n      if ((_checks$index = checks[index]).call.apply(_checks$index, [this].concat(parameters))) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all);\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    var key;\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type);\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check;\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion;\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node) {\n    for (var _len2 = arguments.length, parameters = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      parameters[_key2 - 1] = arguments[_key2];\n    }\n    return Boolean(node && typeof node === 'object' && 'type' in node &&\n    // @ts-expect-error: fine.\n    Boolean(check.call.apply(check, [this, node].concat(parameters))));\n  }\n}\nfunction ok() {\n  return true;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport { convert } from 'unist-util-is';\nimport { color } from './color.js';\n\n/**\n * Continue traversing as normal.\n */\nexport var CONTINUE = true;\n\n/**\n * Stop traversing immediately.\n */\nexport var EXIT = false;\n\n/**\n * Do not traverse this node’s children.\n */\nexport var SKIP = 'skip';\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport var visitParents =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor<Node>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction visitParents(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test;\n    test = null;\n  }\n  var is = convert(test);\n  var step = reverse ? -1 : 1;\n  factory(tree, undefined, [])();\n\n  /**\n   * @param {Node} node\n   * @param {number | undefined} index\n   * @param {Array<Parent>} parents\n   */\n  function factory(node, index, parents) {\n    /** @type {Record<string, unknown>} */\n    // @ts-expect-error: hush\n    var value = node && typeof node === 'object' ? node : {};\n    if (typeof value.type === 'string') {\n      var name =\n      // `hast`\n      typeof value.tagName === 'string' ? value.tagName :\n      // `xast`\n      typeof value.name === 'string' ? value.name : undefined;\n      Object.defineProperty(visit, 'name', {\n        value: 'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      });\n    }\n    return visit;\n    function visit() {\n      /** @type {ActionTuple} */\n      var result = [];\n      /** @type {ActionTuple} */\n      var subresult;\n      /** @type {number} */\n      var offset;\n      /** @type {Array<Parent>} */\n      var grandparents;\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents));\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n\n      // @ts-expect-error looks like a parent.\n      if (node.children && result[0] !== SKIP) {\n        // @ts-expect-error looks like a parent.\n        offset = (reverse ? node.children.length : -1) + step;\n        // @ts-expect-error looks like a parent.\n        grandparents = parents.concat(node);\n\n        // @ts-expect-error looks like a parent.\n        while (offset > -1 && offset < node.children.length) {\n          // @ts-expect-error looks like a parent.\n          subresult = factory(node.children[offset], offset, grandparents)();\n          if (subresult[0] === EXIT) {\n            return subresult;\n          }\n          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;\n        }\n      }\n      return result;\n    }\n  }\n};\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n  return [value];\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport { visitParents } from 'unist-util-visit-parents';\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport var visit =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  visitParents(tree, test, overload, reverse);\n\n  /**\n   * @param {Node} node\n   * @param {Array<Parent>} parents\n   */\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1];\n    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);\n  }\n};\nexport { CONTINUE, EXIT, SKIP } from 'unist-util-visit-parents';","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport var pointStart = point('start');\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport var pointEnd = point('end');\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {\n    start: pointStart(node),\n    end: pointEnd(node)\n  };\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point;\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    var point = node && node.position && node.position[type] || {};\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    };\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport { visit } from 'unist-util-visit';\nvar own = {}.hasOwnProperty;\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  var cache = Object.create(null);\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node');\n  }\n  visit(tree, 'definition', function (definition) {\n    var id = clean(definition.identifier);\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition;\n    }\n  });\n  return definition;\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    var id = clean(identifier);\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null;\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase();\n}","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  var id = String(node.identifier).toUpperCase();\n  var safeId = normalizeUri(id.toLowerCase());\n  var index = state.footnoteOrder.indexOf(id);\n  /** @type {number} */\n  var counter;\n  if (index === -1) {\n    state.footnoteOrder.push(id);\n    state.footnoteCounts[id] = 1;\n    counter = state.footnoteOrder.length;\n  } else {\n    state.footnoteCounts[id]++;\n    counter = index + 1;\n  }\n  var reuseCounter = state.footnoteCounts[id];\n\n  /** @type {Element} */\n  var link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id: state.clobberPrefix + 'fnref-' + safeId + (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{\n      type: 'text',\n      value: String(counter)\n    }]\n  };\n  state.patch(node, link);\n\n  /** @type {Element} */\n  var sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  };\n  state.patch(node, sup);\n  return state.applyData(node, sup);\n}","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  var subtype = node.referenceType;\n  var suffix = ']';\n  if (subtype === 'collapsed') {\n    suffix += '[]';\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']';\n  }\n  if (node.type === 'imageReference') {\n    return {\n      type: 'text',\n      value: '![' + node.alt + suffix\n    };\n  }\n  var contents = state.all(node);\n  var head = contents[0];\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value;\n  } else {\n    contents.unshift({\n      type: 'text',\n      value: '['\n    });\n  }\n  var tail = contents[contents.length - 1];\n  if (tail && tail.type === 'text') {\n    tail.value += suffix;\n  } else {\n    contents.push({\n      type: 'text',\n      value: suffix\n    });\n  }\n  return contents;\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  var results = state.all(node);\n  var loose = parent ? listLoose(parent) : listItemLoose(node);\n  /** @type {Properties} */\n  var properties = {};\n  /** @type {Array<ElementContent>} */\n  var children = [];\n  if (typeof node.checked === 'boolean') {\n    var head = results[0];\n    /** @type {Element} */\n    var paragraph;\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head;\n    } else {\n      paragraph = {\n        type: 'element',\n        tagName: 'p',\n        properties: {},\n        children: []\n      };\n      results.unshift(paragraph);\n    }\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({\n        type: 'text',\n        value: ' '\n      });\n    }\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      },\n      children: []\n    });\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item'];\n  }\n  var index = -1;\n  while (++index < results.length) {\n    var child = results[index];\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (loose || index !== 0 || child.type !== 'element' || child.tagName !== 'p') {\n      children.push({\n        type: 'text',\n        value: '\\n'\n      });\n    }\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push.apply(children, _toConsumableArray(child.children));\n    } else {\n      children.push(child);\n    }\n  }\n  var tail = results[results.length - 1];\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({\n      type: 'text',\n      value: '\\n'\n    });\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'li',\n    properties: properties,\n    children: children\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  var loose = false;\n  if (node.type === 'list') {\n    loose = node.spread || false;\n    var children = node.children;\n    var index = -1;\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index]);\n    }\n  }\n  return loose;\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  var spread = node.spread;\n  return spread === undefined || spread === null ? node.children.length > 1 : spread;\n}","var tab = 9; /* `\\t` */\nvar space = 32; /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  var source = String(value);\n  var search = /\\r?\\n|\\r/g;\n  var match = search.exec(source);\n  var last = 0;\n  /** @type {Array<string>} */\n  var lines = [];\n  while (match) {\n    lines.push(trimLine(source.slice(last, match.index), last > 0, true), match[0]);\n    last = match.index + match[0].length;\n    match = search.exec(source);\n  }\n  lines.push(trimLine(source.slice(last), last > 0, false));\n  return lines.join('');\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  var startIndex = 0;\n  var endIndex = value.length;\n  if (start) {\n    var code = value.codePointAt(startIndex);\n    while (code === tab || code === space) {\n      startIndex++;\n      code = value.codePointAt(startIndex);\n    }\n  }\n  if (end) {\n    var _code = value.codePointAt(endIndex - 1);\n    while (_code === tab || _code === space) {\n      endIndex--;\n      _code = value.codePointAt(endIndex - 1);\n    }\n  }\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : '';\n}","import { blockquote } from './blockquote.js';\nimport { hardBreak } from './break.js';\nimport { code } from './code.js';\nimport { strikethrough } from './delete.js';\nimport { emphasis } from './emphasis.js';\nimport { footnoteReference } from './footnote-reference.js';\nimport { footnote } from './footnote.js';\nimport { heading } from './heading.js';\nimport { html } from './html.js';\nimport { imageReference } from './image-reference.js';\nimport { image } from './image.js';\nimport { inlineCode } from './inline-code.js';\nimport { linkReference } from './link-reference.js';\nimport { link } from './link.js';\nimport { listItem } from './list-item.js';\nimport { list } from './list.js';\nimport { paragraph } from './paragraph.js';\nimport { root } from './root.js';\nimport { strong } from './strong.js';\nimport { table } from './table.js';\nimport { tableRow } from './table-row.js';\nimport { tableCell } from './table-cell.js';\nimport { text } from './text.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/**\n * Default handlers for nodes.\n */\nexport var handlers = {\n  blockquote: blockquote,\n  break: hardBreak,\n  code: code,\n  delete: strikethrough,\n  emphasis: emphasis,\n  footnoteReference: footnoteReference,\n  footnote: footnote,\n  heading: heading,\n  html: html,\n  imageReference: imageReference,\n  image: image,\n  inlineCode: inlineCode,\n  linkReference: linkReference,\n  link: link,\n  listItem: listItem,\n  list: list,\n  paragraph: paragraph,\n  root: root,\n  strong: strong,\n  table: table,\n  tableCell: tableCell,\n  tableRow: tableRow,\n  text: text,\n  thematicBreak: thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n};\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null;\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'br',\n    properties: {},\n    children: []\n  };\n  state.patch(node, result);\n  return [state.applyData(node, result), {\n    type: 'text',\n    value: '\\n'\n  }];\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  var value = node.value ? node.value + '\\n' : '';\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  var lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null;\n  /** @type {Properties} */\n  var properties = {};\n  if (lang) {\n    properties.className = ['language-' + lang];\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'code',\n    properties: properties,\n    children: [{\n      type: 'text',\n      value: value\n    }]\n  };\n  if (node.meta) {\n    result.data = {\n      meta: node.meta\n    };\n  }\n  state.patch(node, result);\n  result = state.applyData(node, result);\n\n  // Create `<pre>`.\n  result = {\n    type: 'element',\n    tagName: 'pre',\n    properties: {},\n    children: [result]\n  };\n  state.patch(node, result);\n  return result;\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport { footnoteReference } from './footnote-reference.js';\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  var footnoteById = state.footnoteById;\n  var no = 1;\n  while (no in footnoteById) {\n    no++;\n  }\n  var identifier = String(no);\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: [{\n      type: 'paragraph',\n      children: node.children\n    }],\n    position: node.position\n  };\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier: identifier,\n    position: node.position\n  });\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    var result = {\n      type: 'raw',\n      value: node.value\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n  }\n\n  // To do: next major: return `undefined`.\n  return null;\n}","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\nimport { revert } from '../revert.js';\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  var def = state.definition(node.identifier);\n  if (!def) {\n    return revert(state, node);\n  }\n\n  /** @type {Properties} */\n  var properties = {\n    src: normalizeUri(def.url || ''),\n    alt: node.alt\n  };\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title;\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'img',\n    properties: properties,\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  var properties = {\n    src: normalizeUri(node.url)\n  };\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt;\n  }\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title;\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'img',\n    properties: properties,\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  var text = {\n    type: 'text',\n    value: node.value.replace(/\\r?\\n|\\r/g, ' ')\n  };\n  state.patch(node, text);\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\nimport { revert } from '../revert.js';\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  var def = state.definition(node.identifier);\n  if (!def) {\n    return revert(state, node);\n  }\n\n  /** @type {Properties} */\n  var properties = {\n    href: normalizeUri(def.url || '')\n  };\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title;\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'a',\n    properties: properties,\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  var properties = {\n    href: normalizeUri(node.url)\n  };\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title;\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'a',\n    properties: properties,\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  var properties = {};\n  var results = state.all(node);\n  var index = -1;\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start;\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    var child = results[index];\n    if (child.type === 'element' && child.tagName === 'li' && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes('task-list-item')) {\n      properties.className = ['contains-task-list'];\n      break;\n    }\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties: properties,\n    children: state.wrap(results, true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  var result = {\n    type: 'root',\n    children: state.wrap(state.all(node))\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport { pointStart, pointEnd } from 'unist-util-position';\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  var rows = state.all(node);\n  var firstRow = rows.shift();\n  /** @type {Array<Element>} */\n  var tableContent = [];\n  if (firstRow) {\n    /** @type {Element} */\n    var head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    };\n    state.patch(node.children[0], head);\n    tableContent.push(head);\n  }\n  if (rows.length > 0) {\n    /** @type {Element} */\n    var body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    };\n    var start = pointStart(node.children[1]);\n    var end = pointEnd(node.children[node.children.length - 1]);\n    if (start.line && end.line) body.position = {\n      start: start,\n      end: end\n    };\n    tableContent.push(body);\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'td',\n    // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  var siblings = parent ? parent.children : undefined;\n  // Generate a body row when without parent.\n  var rowIndex = siblings ? siblings.indexOf(node) : 1;\n  var tagName = rowIndex === 0 ? 'th' : 'td';\n  var align = parent && parent.type === 'table' ? parent.align : undefined;\n  var length = align ? align.length : node.children.length;\n  var cellIndex = -1;\n  /** @type {Array<ElementContent>} */\n  var cells = [];\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    var cell = node.children[cellIndex];\n    /** @type {Properties} */\n    var properties = {};\n    var alignValue = align ? align[cellIndex] : undefined;\n    if (alignValue) {\n      properties.align = alignValue;\n    }\n\n    /** @type {Element} */\n    var _result = {\n      type: 'element',\n      tagName: tagName,\n      properties: properties,\n      children: []\n    };\n    if (cell) {\n      _result.children = state.all(cell);\n      state.patch(cell, _result);\n      _result = state.applyData(node, _result);\n    }\n    cells.push(_result);\n  }\n\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport { trimLines } from 'trim-lines';\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  var result = {\n    type: 'text',\n    value: trimLines(String(node.value))\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  var result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport { visit } from 'unist-util-visit';\nimport { position, pointStart, pointEnd } from 'unist-util-position';\nimport { generated } from 'unist-util-generated';\nimport { definitions } from 'mdast-util-definitions';\nimport { handlers } from './handlers/index.js';\nvar own = {}.hasOwnProperty;\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  var settings = options || {};\n  var dangerous = settings.allowDangerousHtml || false;\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  var footnoteById = {};\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous;\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix = settings.clobberPrefix === undefined || settings.clobberPrefix === null ? 'user-content-' : settings.clobberPrefix;\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes';\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2';\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  };\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content';\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler;\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough;\n  state.handlers = _objectSpread(_objectSpread({}, handlers), settings.handlers);\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree);\n  state.footnoteById = footnoteById;\n  /** @type {Array<string>} */\n  state.footnoteOrder = [];\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {};\n  state.patch = patch;\n  state.applyData = applyData;\n  state.one = oneBound;\n  state.all = allBound;\n  state.wrap = wrap;\n  // To do: next major: remove `augment`.\n  state.augment = augment;\n  visit(tree, 'footnoteDefinition', function (definition) {\n    var id = String(definition.identifier).toUpperCase();\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition;\n    }\n  });\n\n  // @ts-expect-error Hush, it’s fine!\n  return state;\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      var data = left.data;\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          };\n        }\n        right.tagName = data.hName;\n      }\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = _objectSpread(_objectSpread({}, right.properties), data.hProperties);\n      }\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren;\n      }\n    }\n    if (left) {\n      var ctx = 'type' in left ? left : {\n        position: left\n      };\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {\n          start: pointStart(ctx),\n          end: pointEnd(ctx)\n        };\n      }\n    }\n    return right;\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props;\n      props = {};\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName: tagName,\n      properties: props || {},\n      children: children || []\n    });\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent);\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent);\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from);\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  var result = to;\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    var hName = from.data.hName;\n    var hChildren = from.data.hChildren;\n    var hProperties = from.data.hProperties;\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName;\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        };\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = _objectSpread(_objectSpread({}, result.properties), hProperties);\n    }\n    if ('children' in result && result.children && hChildren !== null && hChildren !== undefined) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren;\n    }\n  }\n  return result;\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  var type = node && node.type;\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`');\n  }\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent);\n  }\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? _objectSpread(_objectSpread({}, node), {}, {\n      children: all(state, node)\n    }) : node;\n  }\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent);\n  }\n  return defaultUnknownHandler(state, node);\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  var values = [];\n  if ('children' in parent) {\n    var nodes = parent.children;\n    var index = -1;\n    while (++index < nodes.length) {\n      var result = one(state, nodes[index], parent);\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '');\n          }\n          if (!Array.isArray(result) && result.type === 'element') {\n            var head = result.children[0];\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '');\n            }\n          }\n        }\n        if (Array.isArray(result)) {\n          values.push.apply(values, _toConsumableArray(result));\n        } else {\n          values.push(result);\n        }\n      }\n    }\n  }\n  return values;\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  var data = node.data || {};\n  /** @type {HastText | HastElement} */\n  var result = 'value' in node && !(own.call(data, 'hProperties') || own.call(data, 'hChildren')) ? {\n    type: 'text',\n    value: node.value\n  } : {\n    type: 'element',\n    tagName: 'div',\n    properties: {},\n    children: all(state, node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  var result = [];\n  var index = -1;\n  if (loose) {\n    result.push({\n      type: 'text',\n      value: '\\n'\n    });\n  }\n  while (++index < nodes.length) {\n    if (index) result.push({\n      type: 'text',\n      value: '\\n'\n    });\n    result.push(nodes[index]);\n  }\n  if (loose && nodes.length > 0) {\n    result.push({\n      type: 'text',\n      value: '\\n'\n    });\n  }\n  return result;\n}","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return !node || !node.position || !node.position.start || !node.position.start.line || !node.position.start.column || !node.position.end || !node.position.end.line || !node.position.end.column;\n}","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport { footer } from './footer.js';\nimport { createState } from './state.js';\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  var state = createState(tree, options);\n  var node = state.one(tree, null);\n  var foot = footer(state);\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({\n      type: 'text',\n      value: '\\n'\n    }, foot);\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {\n    type: 'root',\n    children: node\n  } : node;\n}","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport { toHast } from 'mdast-util-to-hast';\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nvar remarkRehype = /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n\nfunction remarkRehype(destination, options) {\n  return destination && 'run' in destination ? bridge(destination, options) : mutate(destination || options);\n};\nexport default remarkRehype;\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return function (node, file, next) {\n    destination.run(toHast(node, options), file, function (error) {\n      next(error);\n    });\n  };\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return function (node) {\n    return toHast(node, options);\n  };\n}","import _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport var Schema = /*#__PURE__*/_createClass(\n/**\n * @constructor\n * @param {Properties} property\n * @param {Normal} normal\n * @param {string} [space]\n */\nfunction Schema(property, normal, space) {\n  _classCallCheck(this, Schema);\n  this.property = property;\n  this.normal = normal;\n  if (space) {\n    this.space = space;\n  }\n});\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport { Schema } from './schema.js';\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {};\n  /** @type {Normal} */\n  var normal = {};\n  var index = -1;\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n  return new Schema(property, normal, space);\n}","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase();\n}","import _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nexport var Info = /*#__PURE__*/_createClass(\n/**\n * @constructor\n * @param {string} property\n * @param {string} attribute\n */\nfunction Info(property, attribute) {\n  _classCallCheck(this, Info);\n  /** @type {string} */\n  this.property = property;\n  /** @type {string} */\n  this.attribute = attribute;\n});\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;","var powers = 0;\nexport var boolean = increment();\nexport var booleanish = increment();\nexport var overloadedBoolean = increment();\nexport var number = increment();\nexport var spaceSeparated = increment();\nexport var commaSeparated = increment();\nexport var commaOrSpaceSeparated = increment();\nfunction increment() {\n  return Math.pow(2, ++powers);\n}","import _createClass from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Info } from './info.js';\nimport * as types from './types.js';\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nvar checks = Object.keys(types);\nexport var DefinedInfo = /*#__PURE__*/function (_Info) {\n  _inherits(DefinedInfo, _Info);\n  var _super = _createSuper(DefinedInfo);\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  function DefinedInfo(property, attribute, mask, space) {\n    var _this;\n    _classCallCheck(this, DefinedInfo);\n    var index = -1;\n    _this = _super.call(this, property, attribute);\n    mark(_assertThisInitialized(_this), 'space', space);\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        var check = checks[index];\n        mark(_assertThisInitialized(_this), checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n    return _this;\n  }\n  return _createClass(DefinedInfo);\n}(Info);\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport { normalize } from '../normalize.js';\nimport { Schema } from './schema.js';\nimport { DefinedInfo } from './defined-info.js';\nvar own = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  var property = {};\n  /** @type {Normal} */\n  var normal = {};\n  /** @type {string} */\n  var prop;\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      var value = definition.properties[prop];\n      var info = new DefinedInfo(prop, definition.transform(definition.attributes || {}, prop), value, definition.space);\n      if (definition.mustUseProperty && definition.mustUseProperty.includes(prop)) {\n        info.mustUseProperty = true;\n      }\n      property[prop] = info;\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n  return new Schema(property, normal, definition.space);\n}","import { create } from './util/create.js';\nexport var xlink = create({\n  space: 'xlink',\n  transform: function transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase();\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});","import { create } from './util/create.js';\nexport var xml = create({\n  space: 'xml',\n  transform: function transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase();\n  },\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}","import { caseSensitiveTransform } from './case-sensitive-transform.js';\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}","import { create } from './util/create.js';\nimport { caseInsensitiveTransform } from './util/case-insensitive-transform.js';\nexport var xmlns = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});","import { booleanish, number, spaceSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nexport var aria = create({\n  transform: function transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});","import { boolean, overloadedBoolean, booleanish, number, spaceSeparated, commaSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nimport { caseInsensitiveTransform } from './util/case-insensitive-transform.js';\nexport var html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});","import { boolean, number, spaceSeparated, commaSeparated, commaOrSpaceSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nimport { caseSensitiveTransform } from './util/case-sensitive-transform.js';\nexport var svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null,\n    // SEMI_COLON_SEPARATED\n    keySplines: null,\n    // SEMI_COLON_SEPARATED\n    keyTimes: null,\n    // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport { merge } from './lib/util/merge.js';\nimport { xlink } from './lib/xlink.js';\nimport { xml } from './lib/xml.js';\nimport { xmlns } from './lib/xmlns.js';\nimport { aria } from './lib/aria.js';\nimport { html as htmlBase } from './lib/html.js';\nimport { svg as svgBase } from './lib/svg.js';\nexport { find } from './lib/find.js';\nexport { hastToReact } from './lib/hast-to-react.js';\nexport { normalize } from './lib/normalize.js';\nexport var html = merge([xml, xlink, xmlns, aria, htmlBase], 'html');\nexport var svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg');","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport var is =\n/**\n * @type {(\n *   (() => false) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n * )}\n */\n\n/**\n * @param {unknown} [node]\n * @param {Test} [test]\n * @param {number | null | undefined} [index]\n * @param {Parent | null | undefined} [parent]\n * @param {unknown} [context]\n * @returns {boolean}\n */\n// eslint-disable-next-line max-params\nfunction is(node, test, index, parent, context) {\n  var check = convert(test);\n  if (index !== undefined && index !== null && (typeof index !== 'number' || index < 0 || index === Number.POSITIVE_INFINITY)) {\n    throw new Error('Expected positive finite index');\n  }\n  if (parent !== undefined && parent !== null && (!is(parent) || !parent.children)) {\n    throw new Error('Expected parent node');\n  }\n  if ((parent === undefined || parent === null) !== (index === undefined || index === null)) {\n    throw new Error('Expected both parent and index');\n  }\n\n  // @ts-expect-error Looks like a node.\n  return node && node.type && typeof node.type === 'string' ? Boolean(check.call(context, node, index, parent)) : false;\n};\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport var convert =\n/**\n * @type {(\n *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n *   ((test?: Test) => AssertAnything)\n * )}\n */\n\n/**\n * @param {Test} [test]\n * @returns {AssertAnything}\n */\nfunction convert(test) {\n  if (test === undefined || test === null) {\n    return ok;\n  }\n  if (typeof test === 'string') {\n    return typeFactory(test);\n  }\n  if (typeof test === 'object') {\n    return Array.isArray(test) ? anyFactory(test) : propsFactory(test);\n  }\n  if (typeof test === 'function') {\n    return castFactory(test);\n  }\n  throw new Error('Expected function, string, or object as test');\n};\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  var checks = [];\n  var index = -1;\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index]);\n  }\n  return castFactory(any);\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any() {\n    var index = -1;\n    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n      parameters[_key] = arguments[_key];\n    }\n    while (++index < checks.length) {\n      var _checks$index;\n      if ((_checks$index = checks[index]).call.apply(_checks$index, [this].concat(parameters))) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all);\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    var key;\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type);\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check;\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion;\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node) {\n    for (var _len2 = arguments.length, parameters = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      parameters[_key2 - 1] = arguments[_key2];\n    }\n    return Boolean(node && typeof node === 'object' && 'type' in node &&\n    // @ts-expect-error: fine.\n    Boolean(check.call.apply(check, [this, node].concat(parameters))));\n  }\n}\nfunction ok() {\n  return true;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport { convert } from 'unist-util-is';\nimport { color } from './color.js';\n\n/**\n * Continue traversing as normal.\n */\nexport var CONTINUE = true;\n\n/**\n * Stop traversing immediately.\n */\nexport var EXIT = false;\n\n/**\n * Do not traverse this node’s children.\n */\nexport var SKIP = 'skip';\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport var visitParents =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor<Node>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction visitParents(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test;\n    test = null;\n  }\n  var is = convert(test);\n  var step = reverse ? -1 : 1;\n  factory(tree, undefined, [])();\n\n  /**\n   * @param {Node} node\n   * @param {number | undefined} index\n   * @param {Array<Parent>} parents\n   */\n  function factory(node, index, parents) {\n    /** @type {Record<string, unknown>} */\n    // @ts-expect-error: hush\n    var value = node && typeof node === 'object' ? node : {};\n    if (typeof value.type === 'string') {\n      var name =\n      // `hast`\n      typeof value.tagName === 'string' ? value.tagName :\n      // `xast`\n      typeof value.name === 'string' ? value.name : undefined;\n      Object.defineProperty(visit, 'name', {\n        value: 'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      });\n    }\n    return visit;\n    function visit() {\n      /** @type {ActionTuple} */\n      var result = [];\n      /** @type {ActionTuple} */\n      var subresult;\n      /** @type {number} */\n      var offset;\n      /** @type {Array<Parent>} */\n      var grandparents;\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents));\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n\n      // @ts-expect-error looks like a parent.\n      if (node.children && result[0] !== SKIP) {\n        // @ts-expect-error looks like a parent.\n        offset = (reverse ? node.children.length : -1) + step;\n        // @ts-expect-error looks like a parent.\n        grandparents = parents.concat(node);\n\n        // @ts-expect-error looks like a parent.\n        while (offset > -1 && offset < node.children.length) {\n          // @ts-expect-error looks like a parent.\n          subresult = factory(node.children[offset], offset, grandparents)();\n          if (subresult[0] === EXIT) {\n            return subresult;\n          }\n          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;\n        }\n      }\n      return result;\n    }\n  }\n};\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n  return [value];\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { visit } from 'unist-util-visit';\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError('Only one of `allowedElements` and `disallowedElements` should be defined');\n  }\n  if (options.allowedElements || options.disallowedElements || options.allowElement) {\n    return function (tree) {\n      visit(tree, 'element', function (node, index, parent_) {\n        var parent = /** @type {Element|Root} */parent_;\n        /** @type {boolean|undefined} */\n        var remove;\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName);\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName);\n        }\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent);\n        }\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            var _parent$children;\n            (_parent$children = parent.children).splice.apply(_parent$children, [index, 1].concat(_toConsumableArray(node.children)));\n          } else {\n            parent.children.splice(index, 1);\n          }\n          return index;\n        }\n        return undefined;\n      });\n    };\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport { visitParents } from 'unist-util-visit-parents';\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport var visit =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  visitParents(tree, test, overload, reverse);\n\n  /**\n   * @param {Node} node\n   * @param {Array<Parent>} parents\n   */\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1];\n    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);\n  }\n};\nexport { CONTINUE, EXIT, SKIP } from 'unist-util-visit-parents';","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport { normalize } from './normalize.js';\nimport { DefinedInfo } from './util/defined-info.js';\nimport { Info } from './util/info.js';\nvar valid = /^data[-\\w.:]+$/i;\nvar dash = /-[a-z]/g;\nvar cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  var normal = normalize(value);\n  var prop = value;\n  var Type = Info;\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      var rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      var _rest = value.slice(4);\n      if (!dash.test(_rest)) {\n        var dashes = _rest.replace(cap, kebab);\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n        value = 'data' + dashes;\n      }\n    }\n    Type = DefinedInfo;\n  }\n  return new Type(prop, value);\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport var hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n};","import StyleToObject from './index.js';\nexport default StyleToObject;","var protocols = ['http', 'https', 'mailto', 'tel'];\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  var url = (uri || '').trim();\n  var first = url.charAt(0);\n  if (first === '#' || first === '/') {\n    return url;\n  }\n  var colon = url.indexOf(':');\n  if (colon === -1) {\n    return url;\n  }\n  var index = -1;\n  while (++index < protocols.length) {\n    var protocol = protocols[index];\n    if (colon === protocol.length && url.slice(0, protocol.length).toLowerCase() === protocol) {\n      return url;\n    }\n  }\n  index = url.indexOf('?');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n  index = url.indexOf('#');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)';\n}","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react';\nimport ReactIs from 'react-is';\nimport { whitespace } from 'hast-util-whitespace';\nimport { svg, find, hastToReact } from 'property-information';\nimport { stringify as spaces } from 'space-separated-tokens';\nimport { stringify as commas } from 'comma-separated-tokens';\nimport style from 'style-to-object';\nimport { uriTransformer } from './uri-transformer.js';\nvar own = {}.hasOwnProperty;\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nvar tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr']);\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  var children = [];\n  var childIndex = -1;\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  var child;\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex];\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node));\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (node.type !== 'element' || !tableElements.has(node.tagName) || !whitespace(child)) {\n        children.push(child.value);\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value);\n    }\n  }\n  return children;\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  var options = context.options;\n  var transform = options.transformLinkUri === undefined ? uriTransformer : options.transformLinkUri;\n  var parentSchema = context.schema;\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  var name = node.tagName;\n  /** @type {Record<string, unknown>} */\n  var properties = {};\n  var schema = parentSchema;\n  /** @type {string} */\n  var property;\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg;\n    context.schema = schema;\n  }\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context);\n      }\n    }\n  }\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++;\n  }\n  var children = childrenToReact(context, node);\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--;\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema;\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  var position = node.position || {\n    start: {\n      line: null,\n      column: null,\n      offset: null\n    },\n    end: {\n      line: null,\n      column: null,\n      offset: null\n    }\n  };\n  var component = options.components && own.call(options.components, name) ? options.components[name] : name;\n  var basic = typeof component === 'string' || component === React.Fragment;\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\"Component for name `\".concat(name, \"` not defined or is not renderable\"));\n  }\n  properties.key = index;\n  if (name === 'a' && options.linkTarget) {\n    properties.target = typeof options.linkTarget === 'function' ? options.linkTarget(String(properties.href || ''), node.children, typeof properties.title === 'string' ? properties.title : null) : options.linkTarget;\n  }\n  if (name === 'a' && transform) {\n    properties.href = transform(String(properties.href || ''), node.children, typeof properties.title === 'string' ? properties.title : null);\n  }\n  if (!basic && name === 'code' && parent.type === 'element' && parent.tagName !== 'pre') {\n    properties.inline = true;\n  }\n  if (!basic && (name === 'h1' || name === 'h2' || name === 'h3' || name === 'h4' || name === 'h5' || name === 'h6')) {\n    properties.level = Number.parseInt(name.charAt(1), 10);\n  }\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(String(properties.src || ''), String(properties.alt || ''), typeof properties.title === 'string' ? properties.title : null);\n  }\n  if (!basic && name === 'li' && parent.type === 'element') {\n    var input = getInputElement(node);\n    properties.checked = input && input.properties ? Boolean(input.properties.checked) : null;\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.ordered = parent.tagName === 'ol';\n  }\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol';\n    properties.depth = context.listDepth;\n  }\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {};\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align;\n      delete properties.align;\n    }\n    if (!basic) {\n      properties.isHeader = name === 'th';\n    }\n  }\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead');\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position);\n  }\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position;\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.siblingCount = getElementsBeforeCount(parent);\n  }\n  if (!basic) {\n    properties.node = node;\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0 ? React.createElement(component, properties, children) : React.createElement(component, properties);\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  var index = -1;\n  while (++index < node.children.length) {\n    var child = node.children[index];\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  var index = -1;\n  var count = 0;\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break;\n    if (parent.children[index].type === 'element') count++;\n  }\n  return count;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  var info = find(ctx.schema, prop);\n  var result = value;\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return;\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result);\n  }\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result);\n  }\n  if (info.space && info.property) {\n    props[own.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;\n  } else if (info.attribute) {\n    props[info.attribute] = result;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  var result = {};\n  try {\n    style(value, iterator);\n  } catch (_unused) {\n    // Silent.\n  }\n  return result;\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    var k = name.slice(0, 4) === '-ms-' ? \"ms-\".concat(name.slice(4)) : name;\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v;\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase();\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(String).join('');\n}","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n  // @ts-expect-error looks like a node.\n  thing && typeof thing === 'object' && thing.type === 'text' ?\n  // @ts-expect-error looks like a text.\n  thing.value || '' : thing;\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === '';\n}","import _toConsumableArray from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  var tokens = [];\n  var input = String(value || '');\n  var index = input.indexOf(',');\n  var start = 0;\n  /** @type {boolean} */\n  var end = false;\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n    var token = input.slice(start, index).trim();\n    if (token || !end) {\n      tokens.push(token);\n    }\n    start = index + 1;\n    index = input.indexOf(',', start);\n  }\n  return tokens;\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  var settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  var input = values[values.length - 1] === '' ? [].concat(_toConsumableArray(values), ['']) : values;\n  return input.join((settings.padRight ? ' ' : '') + ',' + (settings.padLeft === false ? '' : ' ')).trim();\n}","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  var input = String(value || '').trim();\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : [];\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim();\n}","import _defineProperty from \"/Users/jin-yelim/Documents/GitHub/yeeeerim.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react';\nimport { VFile } from 'vfile';\nimport { unified } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport PropTypes from 'prop-types';\nimport { html } from 'property-information';\nimport rehypeFilter from './rehype-filter.js';\nimport { childrenToReact } from './ast-to-react.js';\nvar own = {}.hasOwnProperty;\nvar changelog = 'https://github.com/remarkjs/react-markdown/blob/main/changelog.md';\n\n/** @type {Record<string, Deprecation>} */\nvar deprecated = {\n  plugins: {\n    to: 'remarkPlugins',\n    id: 'change-plugins-to-remarkplugins'\n  },\n  renderers: {\n    to: 'components',\n    id: 'change-renderers-to-components'\n  },\n  astPlugins: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  allowDangerousHtml: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  escapeHtml: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  source: {\n    to: 'children',\n    id: 'change-source-to-children'\n  },\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n};\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (var key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      var deprecation = deprecated[key];\n      console.warn(\"[react-markdown] Warning: please \".concat(deprecation.to ? \"use `\".concat(deprecation.to, \"` instead of\") : 'remove', \" `\").concat(key, \"` (see <\").concat(changelog, \"#\").concat(deprecation.id, \"> for more info)\"));\n      delete deprecated[key];\n    }\n  }\n  var processor = unified().use(remarkParse).use(options.remarkPlugins || []).use(remarkRehype, _objectSpread(_objectSpread({}, options.remarkRehypeOptions), {}, {\n    allowDangerousHtml: true\n  })).use(options.rehypePlugins || []).use(rehypeFilter, options);\n  var file = new VFile();\n  if (typeof options.children === 'string') {\n    file.value = options.children;\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\"[react-markdown] Warning: please pass a string as `children` (not: `\".concat(options.children, \"`)\"));\n  }\n  var hastNode = processor.runSync(processor.parse(file), file);\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node');\n  }\n\n  /** @type {ReactElement} */\n  var result = React.createElement(React.Fragment, {}, childrenToReact({\n    options: options,\n    schema: html,\n    listDepth: 0\n  }, hastNode));\n  if (options.className) {\n    result = React.createElement('div', {\n      className: options.className\n    }, result);\n  }\n  return result;\n}\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.func, PropTypes.arrayOf(\n  // prettier-ignore\n  // type-coverage:ignore-next-line\n  PropTypes.any)]))])),\n  rehypePlugins: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.func, PropTypes.arrayOf(\n  // prettier-ignore\n  // type-coverage:ignore-next-line\n  PropTypes.any)]))])),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n};","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar b = Symbol.for(\"react.element\"),\n  c = Symbol.for(\"react.portal\"),\n  d = Symbol.for(\"react.fragment\"),\n  e = Symbol.for(\"react.strict_mode\"),\n  f = Symbol.for(\"react.profiler\"),\n  g = Symbol.for(\"react.provider\"),\n  h = Symbol.for(\"react.context\"),\n  k = Symbol.for(\"react.server_context\"),\n  l = Symbol.for(\"react.forward_ref\"),\n  m = Symbol.for(\"react.suspense\"),\n  n = Symbol.for(\"react.suspense_list\"),\n  p = Symbol.for(\"react.memo\"),\n  q = Symbol.for(\"react.lazy\"),\n  t = Symbol.for(\"react.offscreen\"),\n  u;\nu = Symbol.for(\"react.module.reference\");\nfunction v(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var r = a.$$typeof;\n    switch (r) {\n      case b:\n        switch (a = a.type, a) {\n          case d:\n          case f:\n          case e:\n          case m:\n          case n:\n            return a;\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case h:\n              case l:\n              case q:\n              case p:\n              case g:\n                return a;\n              default:\n                return r;\n            }\n        }\n      case c:\n        return r;\n    }\n  }\n}\nexports.ContextConsumer = h;\nexports.ContextProvider = g;\nexports.Element = b;\nexports.ForwardRef = l;\nexports.Fragment = d;\nexports.Lazy = q;\nexports.Memo = p;\nexports.Portal = c;\nexports.Profiler = f;\nexports.StrictMode = e;\nexports.Suspense = m;\nexports.SuspenseList = n;\nexports.isAsyncMode = function () {\n  return !1;\n};\nexports.isConcurrentMode = function () {\n  return !1;\n};\nexports.isContextConsumer = function (a) {\n  return v(a) === h;\n};\nexports.isContextProvider = function (a) {\n  return v(a) === g;\n};\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === b;\n};\nexports.isForwardRef = function (a) {\n  return v(a) === l;\n};\nexports.isFragment = function (a) {\n  return v(a) === d;\n};\nexports.isLazy = function (a) {\n  return v(a) === q;\n};\nexports.isMemo = function (a) {\n  return v(a) === p;\n};\nexports.isPortal = function (a) {\n  return v(a) === c;\n};\nexports.isProfiler = function (a) {\n  return v(a) === f;\n};\nexports.isStrictMode = function (a) {\n  return v(a) === e;\n};\nexports.isSuspense = function (a) {\n  return v(a) === m;\n};\nexports.isSuspenseList = function (a) {\n  return v(a) === n;\n};\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === d || a === f || a === e || a === m || a === n || a === t || \"object\" === typeof a && null !== a && (a.$$typeof === q || a.$$typeof === p || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === u || void 0 !== a.getModuleId) ? !0 : !1;\n};\nexports.typeOf = v;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n  return output;\n}\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"names":["newStyled","forEach","tagName","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","_inherits","subClass","superClass","create","setPrototypeOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","o","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_construct","Parent","args","Class","a","apply","instance","Function","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","stringifyPosition","point","index","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","VFileMessage","_Error","_super","place","origin","_this","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","_key","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","_error","hostname","pathname","third","_error2","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","_prop","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","Symbol","toStringTag","iterator","wrap","middleware","callback","called","_len3","parameters","_key3","fnExpectsCallback","done","exception","then","_len4","output","_key4","concat","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","_len2","_key2","use","middelware","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","_value","plugin","_options","plugins","entry","parse","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","Promise","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","after","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","_start","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","head","shift","sliceChunks","_point","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","_document","_flowInitial","_flow","_string","_text","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","_head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","_tail","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","title","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","_right","_right2","remarkParse","normalizeUri","skip","encodeURIComponent","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread","getOwnPropertyDescriptors","defineProperties","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","codePointAt","_code","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","_result","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","props","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","DefinedInfo","_Info","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","any","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","thing","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","_rest","dashes","find","padRight","padLeft","_unused","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","u","b","for","f","g","h","l","n","p","q","t","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","StyleToObject","hasIterator","len","_extends","__esModule","_arrayWithHoles","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_defineProperty","_nonIterableRest","_taggedTemplateLiteralLoose","strings","_typeof"],"sourceRoot":""}