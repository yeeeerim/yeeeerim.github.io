{"version":3,"file":"component---src-pages-diary-[title]-tsx-3c02ccac54dc0cdfc7a0.js","mappings":"iRA+BO,I,IAAMA,EAAK,Y,oBC6ClB,SAASC,IACP,OAAgCC,EAAAA,EAAAA,KAAxBC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAG,EAAHA,IACxB,OACEC,EAAAA,cAACC,EAAmB,CAACC,UAAW,iBAC9BF,EAAAA,cAACG,EAAAA,EAAW,CACVC,MAAON,EAAOO,gBAAgBC,gBAC9BC,IAAKV,EACLK,UAAW,WAEbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAW,eACdF,EAAAA,cAAAA,OAAAA,CAAME,UAAW,aAAY,cAChBF,EAAAA,cAAAA,IAAAA,KAAIH,IAEjBG,EAAAA,cAAAA,IAAAA,CAAGE,UAAW,OAAQH,IAI9B,CAEA,IAAMS,EAAoBC,EAAAA,EAAAA,IAAU,gwEAuH9BR,EAAsBQ,EAAAA,EAAAA,IAAU,u1BA+CtC,EA5P2B,SAAH,GAAwB,IAAlBC,EAAK,EAALA,MAEtBC,GDgBYC,EAAAA,EAAAA,gBAAelB,GACrBmB,WAAWC,SCjBEC,MAAK,SAACC,GAAC,OAAKA,EAAEC,KAAKC,SAASR,EAAMS,MAAM,IAEjE,OAAKR,EAGHX,EAAAA,cAACQ,EAAiB,KAChBR,EAAAA,cAACoB,EAAAA,GAAG,CACFD,MAAOR,EAAQQ,MACfE,YAAaV,EAAQU,kBAAeC,EACpCC,kBAAkB,IAEpBvB,EAAAA,cAACwB,EAAAA,EAAI,KACHxB,EAAAA,cAAAA,UAAAA,CAASE,UAAW,WAClBF,EAAAA,cAAAA,MAAAA,CAAKE,UAAW,cACdF,EAAAA,cAACyB,EAAAA,KAAI,CAACC,GAAI,SAAUP,MAAM,2BACxBnB,EAAAA,cAAAA,OAAAA,CAAME,UAAW,aAAY,KAAgB,iBAIjDF,EAAAA,cAAAA,UAAAA,CAASE,UAAW,UAClBF,EAAAA,cAAAA,OAAAA,CAAME,UAAW,YAAaS,EAAQgB,WAAWC,KAAK,QACtD5B,EAAAA,cAAAA,KAAAA,KAAKW,EAAQQ,OACbnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAW,WACbS,EAAQkB,KACT7B,EAAAA,cAAAA,OAAAA,CAAME,UAAW,eAAgBS,EAAQmB,YAAYC,QAGxDpB,EAAQqB,QAAUrB,EAAQqB,OAAOC,KAChCjC,EAAAA,cAAAA,UAAAA,CAASE,UAAW,UAClBF,EAAAA,cAACG,EAAAA,EAAW,CACVC,MAAOO,EAAQqB,OAAOC,IAAI5B,gBAAgBC,gBAC1CC,IAAKI,EAAQqB,OAAOzB,KAAG,aAAiBI,EAAQQ,MAChDe,aAAc,gBAEfvB,EAAQqB,OAAOG,SACdnC,EAAAA,cAAAA,OAAAA,CACEE,UAAW,gBACXkC,wBAAyB,CAAEC,OAAQ1B,EAAQqB,OAAOG,YAK1DnC,EAAAA,cAAAA,UAAAA,CAASE,UAAW,QAClBF,EAAAA,cAAAA,MAAAA,CACEE,UAAW,UACXkC,wBAAyB,CAAEC,OAAQ1B,EAAQ2B,QAE5C3B,EAAQ4B,UACP5B,EAAQ4B,SAASC,KAAI,SAACC,EAASC,GAC7B,OACE1C,EAAAA,cAAAA,OAAAA,CAAM0C,IAAKA,EAAKxC,UAAW,WACxBuC,EAGP,KAEJzC,EAAAA,cAAAA,UAAAA,CAASE,UAAW,UAClBF,EAAAA,cAACL,EAAa,UAvDHK,EAAAA,cAAAA,MAAAA,KAAAA,eA6DvB,ECnEA,EAJc,SAACU,GACb,OAAOV,EAAAA,cAAC2C,EAAkB,CAACjC,MAAOA,GACpC,C","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./src/components/diary/detail/data.ts","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/diary/detail/DiaryDetailSection.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/pages/diary/[title].tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\n\nexport interface ArticleTemplateData {\n  id: string;\n  slug: string;\n  title: string;\n  description: string | null;\n  date: string;\n  banner: {\n    alt: string | null;\n    src: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    } | null;\n    caption: string | null;\n  };\n  categories: string[];\n  keywords: string[] | null;\n  readingTime: {\n    text: string;\n  };\n  body: string;\n}\n\nexport function useArticleData(): ArticleTemplateData[] {\n  const data: any = useStaticQuery(query);\n  return data.allArticle.articles;\n}\n\nexport const query = graphql`\n  query ArticleTemplateQuery {\n    allArticle(sort: { fields: date, order: DESC }) {\n      articles: nodes {\n        banner {\n          alt\n          caption\n          src {\n            childImageSharp {\n              gatsbyImageData(width: 660, height: 400, placeholder: TRACED_SVG)\n            }\n          }\n        }\n        body\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        id\n        keywords\n        slug\n        title\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { useSiteMetadata } from \"gatsby-theme-portfolio-minimal/src/hooks/useSiteMetadata\";\nimport { useArticleData } from \"./data\";\nimport { Seo } from \"gatsby-theme-portfolio-minimal\";\nimport { Page } from \"../../../components/page\";\n\nconst DiaryDetailSection = ({ props }: any) => {\n  const articles = useArticleData();\n  const article = articles.find((a) => a.slug.includes(props.title));\n\n  if (!article) return <div>작성된 글이 없습니다.</div>;\n\n  return (\n    <DiaryDetailStyled>\n      <Seo\n        title={article.title}\n        description={article.description || undefined}\n        useTitleTemplate={true}\n      />\n      <Page>\n        <article className={\"Article\"}>\n          <div className={\"Breadcrumb\"}>\n            <Link to={\"/diary\"} title=\"Back To Article Listing\">\n              <span className={\"BackArrow\"}>&#10094;</span>\n              All Articles\n            </Link>\n          </div>\n          <section className={\"Header\"}>\n            <span className={\"Category\"}>{article.categories.join(\" / \")}</span>\n            <h1>{article.title}</h1>\n            <div className={\"Details\"}>\n              {article.date}\n              <span className={\"ReadingTime\"}>{article.readingTime.text}</span>\n            </div>\n          </section>\n          {article.banner && article.banner.src && (\n            <section className={\"Banner\"}>\n              <GatsbyImage\n                image={article.banner.src.childImageSharp.gatsbyImageData}\n                alt={article.banner.alt || `Image for ${article.title}`}\n                imgClassName={\"BannerImage\"}\n              />\n              {article.banner.caption && (\n                <span\n                  className={\"BannerCaption\"}\n                  dangerouslySetInnerHTML={{ __html: article.banner.caption }}\n                />\n              )}\n            </section>\n          )}\n          <section className={\"Body\"}>\n            <div\n              className={\"Content\"}\n              dangerouslySetInnerHTML={{ __html: article.body }}\n            />\n            {article.keywords &&\n              article.keywords.map((keyword, key) => {\n                return (\n                  <span key={key} className={\"Keyword\"}>\n                    {keyword}\n                  </span>\n                );\n              })}\n          </section>\n          <section className={\"Footer\"}>\n            <AuthorSnippet />\n          </section>\n        </article>\n      </Page>\n    </DiaryDetailStyled>\n  );\n};\n\nfunction AuthorSnippet(): React.ReactElement {\n  const { author, avatar, bio } = useSiteMetadata();\n  return (\n    <AuthorSnippetStyled className={\"AuthorSnippet\"}>\n      <GatsbyImage\n        image={avatar.childImageSharp.gatsbyImageData}\n        alt={author}\n        className={\"Avatar\"}\n      />\n      <div className={\"Description\"}>\n        <span className={\"WrittenBy\"}>\n          Written By <u>{author}</u>\n        </span>\n        <p className={\"Bio\"}>{bio}</p>\n      </div>\n    </AuthorSnippetStyled>\n  );\n}\n\nconst DiaryDetailStyled = styled.div`\n  .Breadcrumb {\n    display: inline-block;\n    margin-bottom: 2rem;\n    padding: 0 0.5rem;\n    background-color: var(--subtext-color);\n    border-radius: var(--border-radius);\n    font-size: 12px;\n    font-weight: 400;\n  }\n\n  .Breadcrumb a {\n    letter-spacing: +1px;\n  }\n\n  .Breadcrumb a,\n  .Breadcrumb .BackArrow {\n    color: var(--background-color);\n  }\n\n  .Breadcrumb .BackArrow {\n    margin-right: 0.25rem;\n  }\n\n  .Article {\n    width: 100%;\n    height: 100%;\n    max-width: 740px;\n    margin: 0 auto;\n    padding: var(--page-padding);\n  }\n\n  .Article .Header,\n  .Article .Banner,\n  .Article .Body,\n  .Article .Footer {\n    margin-bottom: 3rem;\n  }\n\n  .Article .Category {\n    display: block;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    font-weight: 700;\n    letter-spacing: +1px;\n    color: var(--subtext-color);\n  }\n\n  .Article .Details {\n    font-size: 0.875rem;\n    letter-spacing: +0.5px;\n  }\n\n  .Article .ReadingTime {\n    margin-left: 0.5rem;\n  }\n\n  .Article .ReadingTime::before {\n    content: \"–\";\n    margin-right: 0.5rem;\n  }\n\n  .Article .BannerImage {\n    border-radius: var(--border-radius);\n    margin-bottom: 0;\n  }\n\n  .Article .BannerCaption {\n    display: block;\n    font-size: 0.875rem;\n    letter-spacing: +0.5px;\n    text-align: center;\n  }\n\n  .Article .Body .Content {\n    font-size: 1.125rem;\n    line-height: 2rem;\n    margin-bottom: 3rem;\n  }\n\n  .Article .Body .Keyword {\n    font-size: 0.875rem;\n    background-color: var(--tertiary-color);\n    color: var(--subtext-color);\n    padding: 0.125rem 0.375rem;\n    margin-right: 0.5rem;\n    border-radius: 0.5rem;\n  }\n\n  .Article .Footer {\n    border-top: 3px solid var(--tertiary-color);\n    padding-top: 3rem;\n  }\n\n  .Article img {\n    max-height: 660px;\n    object-fit: cover;\n    border-radius: var(--border-radius);\n  }\n\n  :global(.gatsby-resp-image-wrapper),\n  :global(.gatsby-resp-image-background-image) {\n    margin: 2rem 0;\n    max-height: 660px;\n    overflow-y: hidden;\n  }\n\n  .Article figure {\n    margin: 2rem 0;\n  }\n\n  .Article figure > figcaption {\n    margin-top: -1rem;\n    text-align: center;\n    font-size: 0.875rem;\n    color: var(--subtext-color);\n  }\n`;\n\nconst AuthorSnippetStyled = styled.div`\n  &.AuthorSnippet {\n    width: 100%;\n    max-width: 660px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    .Avatar {\n      width: 100px;\n      height: 100px;\n      border-radius: 50%;\n    }\n\n    .Description {\n      width: 100%;\n      margin-top: 1rem;\n    }\n\n    .WrittenBy {\n      font-size: 0.875rem;\n      letter-spacing: +0.5px;\n      color: var(--subtext-color);\n    }\n\n    .Bio {\n      margin: 0.5rem 0;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    &.AuthorSnippet {\n      padding: var(--page-padding);\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n\n      .Description {\n        width: 100%;\n        max-width: 27.5rem;\n      }\n    }\n  }\n`;\n\nexport default DiaryDetailSection;\n","import React from \"react\";\nimport DiaryDetailSection from \"../../components/diary/detail/DiaryDetailSection\";\n\nconst Index = (props: any) => {\n  return <DiaryDetailSection props={props} />;\n};\n\nexport default Index;\n"],"names":["query","AuthorSnippet","useSiteMetadata","author","avatar","bio","React","AuthorSnippetStyled","className","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","DiaryDetailStyled","styled","props","article","useStaticQuery","allArticle","articles","find","a","slug","includes","title","Seo","description","undefined","useTitleTemplate","Page","Link","to","categories","join","date","readingTime","text","banner","src","imgClassName","caption","dangerouslySetInnerHTML","__html","body","keywords","map","keyword","key","DiaryDetailSection"],"sourceRoot":""}