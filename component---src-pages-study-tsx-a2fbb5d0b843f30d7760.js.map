{"version":3,"file":"component---src-pages-study-tsx-a2fbb5d0b843f30d7760.js","mappings":"uOA+BO,SAASA,EAAUC,GAA4C,IAAD,YAC7DC,GAAMC,EAAAA,EAAAA,KACNC,GAAWC,EAAAA,EAAAA,GAA4BH,GAGvCI,EAAiB,QAAb,EAAGL,EAAMK,YAAI,QAAI,SACrBC,EAAqB,QAAf,EAAGN,EAAMM,cAAM,QAAI,WACzBC,EAAyB,QAAjB,EAAGP,EAAMO,gBAAQ,QAAI,IAC7BC,EAAmB,QAAd,EAAGR,EAAMQ,aAAK,QAAI,EACvBC,EAA4B,QAAvB,EAAGT,EAAMU,sBAAc,QAAI,EAChCC,EAAyB,QAAjB,EAAGX,EAAMW,gBAAQ,QAAI,YAEnC,OACEC,EAAAA,cAAAA,MAAAA,CACEX,IAAKA,EACLY,UAAWb,EAAMa,UACjBC,eAAgBd,EAAMc,eACtBC,MACEZ,EAAQ,iBAECH,EAAMe,MAAM,CACfC,cAAc,GAAIX,EAClBY,wBAAwB,GAAIX,EAC5BY,kBAAsBX,EAAQ,KAC9BY,eAAmBX,EAAK,KACxBY,wBAAwB,GAAIX,EAC5BY,kBAAkB,GAAIV,IAAU,iBAE7BX,EAAMe,MAAM,CAACO,QAAS,KAGhCtB,EAAMuB,SAGb,C,0JCvDO,SAASC,IAAmC,IAAD,EAE1CC,GCQCC,EAAAA,EAAAA,gBAAe,cDRAC,aAAaC,SAAS,GAEtCC,GAA2C,IAAxBJ,EAAKK,OAAOC,QAC/BC,EAA6D,QAAtC,EAAGP,EAAKK,OAAOE,+BAAuB,QAAI,EACvE,EAA4CpB,EAAAA,SAC1CiB,EAAmBG,EAA0BP,EAAKQ,QAAQC,QADrDC,EAAc,KAAEC,EAAiB,KAQxC,OACExB,EAAAA,cAACb,EAAAA,EAAS,CAACM,KAAK,UACdO,EAAAA,cAAAA,MAAAA,CAAKC,UAAW,aACbY,EAAKQ,QAAQI,MAAM,EAAGF,GAAgBG,KAAI,SAACC,EAAUC,GACpD,OACE5B,EAAAA,cAACb,EAAAA,EAAS,CACRyC,IAAKA,EACL3B,UAAW,WACXR,KAAK,UACLG,MAAa,IAANgC,GAEND,EAASE,MAAMC,KACd9B,EAAAA,cAAC+B,EAAAA,EAAW,CACVF,MAAOF,EAASE,MAAMC,IAAIE,gBAAgBC,gBAC1ChC,UAAW,OACXiC,IAAKP,EAASE,MAAMK,KAAG,YAAgBP,EAASQ,QAEjD,IACFR,EAASQ,MAGhB,IACClB,GAAoBM,EAAiBV,EAAKQ,QAAQC,QACjDtB,EAAAA,cAACb,EAAAA,EAAS,CAACM,KAAK,UAAUG,MAA8B,KAAtB2B,EAAiB,IACjDvB,EAAAA,cAACoC,EAAAA,EAAM,CACL3C,KAAM4C,EAAAA,EAAAA,OACNC,eA9BZ,WACEd,EAAkBX,EAAKQ,QAAQC,OACjC,EA6BYa,MAAOtB,EAAKK,OAAOiB,UAOjC,CErDA,IAYA,EAZqB,WACnB,OACEnC,EAAAA,cAACuC,EAAW,KACVvC,EAAAA,cAAAA,KAAAA,KAAAA,aACAA,EAAAA,cAACY,EAAW,MACZZ,EAAAA,cAAAA,KAAAA,KAAAA,UAAe,eAKrB,EAIMuC,EAAcC,EAAAA,EAAAA,IAAU,iL,UCH9B,EAXkB,WAChB,OACExC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACyC,EAAAA,GAAG,CAACC,MAAM,QAAQC,kBAAkB,EAAMC,SAAS,IACpD5C,EAAAA,cAAC6C,EAAAA,EAAI,KACH7C,EAAAA,cAAC8C,EAAY,OAIrB,C","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Animation/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/study/hashTag/HashSection.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/study/hashTag/data.ts","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/study/StudySection.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/pages/study.tsx"],"sourcesContent":["import React from \"react\";\nimport { useCastedRef } from \"gatsby-theme-portfolio-minimal/src/hooks/useCastedRef\";\nimport { useOnScreen } from \"gatsby-theme-portfolio-minimal/src/hooks/useOnScreen\";\nimport \"gatsby-theme-portfolio-minimal/src/components/Animation/style.css\";\n\ntype AnimationTiming = \"linear\" | \"ease-in\" | \"ease-out\" | \"ease-in-out\";\ntype AnimationFillMode = \"forwards\" | \"backwards\" | \"both\" | \"none\";\ntype AnimationType =\n  | \"fadeIn\"\n  | \"fadeOut\"\n  | \"fadeInAndOut\"\n  | \"fadeUp\"\n  | \"fadeDown\"\n  | \"fadeLeft\"\n  | \"scaleIn\"\n  | \"reduceHeight\"\n  | \"waving-hand\";\n\ninterface AnimationProps {\n  children?: React.ReactNode;\n  type?: AnimationType;\n  timing?: AnimationTiming;\n  fillMode?: AnimationFillMode;\n  delay?: number;\n  duration?: number;\n  iterationCount?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  onAnimationEnd?: () => void;\n}\n\nexport function Animation(props: AnimationProps): React.ReactElement {\n  const ref = useCastedRef<HTMLDivElement>();\n  const onScreen = useOnScreen<HTMLDivElement>(ref);\n\n  // Set defaults\n  const type = props.type ?? \"fadeIn\";\n  const timing = props.timing ?? \"ease-out\";\n  const duration = props.duration ?? 200;\n  const delay = props.delay ?? 0;\n  const count = props.iterationCount ?? 1;\n  const fillMode = props.fillMode ?? \"backwards\";\n\n  return (\n    <div\n      ref={ref}\n      className={props.className}\n      onAnimationEnd={props.onAnimationEnd}\n      style={\n        onScreen\n          ? {\n              ...props.style,\n              animationName: `${type}`,\n              animationTimingFunction: `${timing}`,\n              animationDuration: `${duration}ms`,\n              animationDelay: `${delay}ms`,\n              animationIterationCount: `${count}`,\n              animationFillMode: `${fillMode}`,\n            }\n          : { ...props.style, opacity: 0 }\n      }\n    >\n      {props.children}\n    </div>\n  );\n}\n","import {\n  Button,\n  ButtonType,\n} from \"gatsby-theme-portfolio-minimal/src/components/Button\";\nimport React from \"react\";\nimport { Animation } from \"../../Animation\";\nimport { useLocalDataSource } from \"./data\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport \"./hashtag.css\";\n\nexport function HashSection(): React.ReactElement {\n  const response = useLocalDataSource();\n  const data = response.allStudyJson.sections[0];\n\n  const shouldShowButton = data.button.visible !== false;\n  const initiallyShownInterests = data.button.initiallyShownInterests ?? 5;\n  const [shownInterests, setShownInterests] = React.useState<number>(\n    shouldShowButton ? initiallyShownInterests : data.hashtag.length\n  );\n\n  function loadMoreHandler() {\n    setShownInterests(data.hashtag.length);\n  }\n\n  return (\n    <Animation type=\"fadeUp\">\n      <div className={\"Interests\"}>\n        {data.hashtag.slice(0, shownInterests).map((interest, key) => {\n          return (\n            <Animation\n              key={key}\n              className={\"Interest\"}\n              type=\"scaleIn\"\n              delay={key * 100}\n            >\n              {interest.image.src && (\n                <GatsbyImage\n                  image={interest.image.src.childImageSharp.gatsbyImageData}\n                  className={\"Icon\"}\n                  alt={interest.image.alt || `Interest ${interest.label}`}\n                />\n              )}{\" \"}\n              {interest.label}\n            </Animation>\n          );\n        })}\n        {shouldShowButton && shownInterests < data.hashtag.length && (\n          <Animation type=\"scaleIn\" delay={(shownInterests + 1) * 100}>\n            <Button\n              type={ButtonType.BUTTON}\n              onClickHandler={loadMoreHandler}\n              label={data.button.label}\n            />\n          </Animation>\n        )}\n      </div>\n    </Animation>\n  );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { ImageObject } from \"gatsby-theme-portfolio-minimal/src/types\";\n\ninterface HashSectionQueryResult {\n  allStudyJson: {\n    sections: {\n      button: {\n        initiallyShownInterests: number;\n        label: string;\n        visible: boolean;\n      };\n      hashtag: {\n        image: ImageObject;\n        label: string;\n      }[];\n    }[];\n  };\n}\n\nexport const useLocalDataSource = (): HashSectionQueryResult => {\n  return useStaticQuery(graphql`\n    query StudySectionQuery {\n      allStudyJson {\n        sections: nodes {\n          button {\n            initiallyShownInterests\n            label\n            visible\n          }\n          hashtag {\n            image {\n              alt\n              src {\n                childImageSharp {\n                  gatsbyImageData(width: 20, height: 20)\n                }\n              }\n            }\n            label\n          }\n        }\n      }\n    }\n  `);\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { HashSection } from \"./hashTag/HashSection\";\nimport PostSection from \"./post/PostSection\";\n\nconst StudySection = () => {\n  return (\n    <StudyStyled>\n      <h2># HashTag</h2>\n      <HashSection />\n      <h2># Post</h2>\n      작성된 글이 없습니다.\n      {/* <PostSection /> */}\n    </StudyStyled>\n  );\n};\n\nexport default StudySection;\n\nconst StudyStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: var(--page-width);\n  margin: 0 auto;\n  padding: var(--page-padding);\n  justify-content: space-between;\n`;\n","import { Seo } from \"gatsby-theme-portfolio-minimal\";\nimport React from \"react\";\nimport StudySection from \"../components/study/StudySection\";\nimport { Page } from \"../components/page\";\n\nconst StudyPage = () => {\n  return (\n    <>\n      <Seo title=\"Study\" useTitleTemplate={true} noIndex={true} />\n      <Page>\n        <StudySection />\n      </Page>\n    </>\n  );\n};\n\nexport default StudyPage;\n"],"names":["Animation","props","ref","useCastedRef","onScreen","useOnScreen","type","timing","duration","delay","count","iterationCount","fillMode","React","className","onAnimationEnd","style","animationName","animationTimingFunction","animationDuration","animationDelay","animationIterationCount","animationFillMode","opacity","children","HashSection","data","useStaticQuery","allStudyJson","sections","shouldShowButton","button","visible","initiallyShownInterests","hashtag","length","shownInterests","setShownInterests","slice","map","interest","key","image","src","GatsbyImage","childImageSharp","gatsbyImageData","alt","label","Button","ButtonType","onClickHandler","StudyStyled","styled","Seo","title","useTitleTemplate","noIndex","Page","StudySection"],"sourceRoot":""}