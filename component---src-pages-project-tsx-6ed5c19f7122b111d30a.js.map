{"version":3,"file":"component---src-pages-project-tsx-6ed5c19f7122b111d30a.js","mappings":"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","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Animation/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/project/data.ts","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/project/ProjectItem.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/project/ProjectSection.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Icon/IconNotion.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Icon/index.tsx","webpack://gatsby-starter-portfolio-minimal-theme/./src/pages/project.tsx"],"sourcesContent":["import React from \"react\";\nimport { useCastedRef } from \"gatsby-theme-portfolio-minimal/src/hooks/useCastedRef\";\nimport { useOnScreen } from \"gatsby-theme-portfolio-minimal/src/hooks/useOnScreen\";\nimport \"gatsby-theme-portfolio-minimal/src/components/Animation/style.css\";\n\ntype AnimationTiming = \"linear\" | \"ease-in\" | \"ease-out\" | \"ease-in-out\";\ntype AnimationFillMode = \"forwards\" | \"backwards\" | \"both\" | \"none\";\ntype AnimationType =\n  | \"fadeIn\"\n  | \"fadeOut\"\n  | \"fadeInAndOut\"\n  | \"fadeUp\"\n  | \"fadeDown\"\n  | \"fadeLeft\"\n  | \"scaleIn\"\n  | \"reduceHeight\"\n  | \"waving-hand\";\n\ninterface AnimationProps {\n  children?: React.ReactNode;\n  type?: AnimationType;\n  timing?: AnimationTiming;\n  fillMode?: AnimationFillMode;\n  delay?: number;\n  duration?: number;\n  iterationCount?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  onAnimationEnd?: () => void;\n}\n\nexport function Animation(props: AnimationProps): React.ReactElement {\n  const ref = useCastedRef<HTMLDivElement>();\n  const onScreen = useOnScreen<HTMLDivElement>(ref);\n\n  // Set defaults\n  const type = props.type ?? \"fadeIn\";\n  const timing = props.timing ?? \"ease-out\";\n  const duration = props.duration ?? 200;\n  const delay = props.delay ?? 0;\n  const count = props.iterationCount ?? 1;\n  const fillMode = props.fillMode ?? \"backwards\";\n\n  return (\n    <div\n      ref={ref}\n      className={props.className}\n      onAnimationEnd={props.onAnimationEnd}\n      style={\n        onScreen\n          ? {\n              ...props.style,\n              animationName: `${type}`,\n              animationTimingFunction: `${timing}`,\n              animationDuration: `${duration}ms`,\n              animationDelay: `${delay}ms`,\n              animationIterationCount: `${count}`,\n              animationFillMode: `${fillMode}`,\n            }\n          : { ...props.style, opacity: 0 }\n      }\n    >\n      {props.children}\n    </div>\n  );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { ImageObject } from \"gatsby-theme-portfolio-minimal/src/types\";\n\nenum LinkType {\n  External = \"external\",\n  Github = \"github\",\n  Notion = \"notion\",\n}\n\nexport interface Project {\n  category?: string;\n  title: string;\n  description: string;\n  image: ImageObject & { linkTo?: string };\n  tags?: string[];\n  links?: {\n    type: LinkType;\n    url: string;\n  }[];\n  visible: boolean;\n}\n\ninterface ProjectSectionQueryResult {\n  allProjectJson: {\n    sections: {\n      project: { team: Project[]; personal: Project[] };\n    }[];\n  };\n}\n\nexport const useLocalDataSource = (): ProjectSectionQueryResult => {\n  return useStaticQuery(graphql`\n    query ProjectSectionQuery {\n      allProjectJson {\n        sections: nodes {\n          project {\n            team {\n              category\n              description\n              image {\n                alt\n                linkTo\n                src {\n                  childImageSharp {\n                    gatsbyImageData(width: 400)\n                  }\n                }\n              }\n              links {\n                type\n                url\n              }\n              tags\n              title\n              visible\n            }\n            personal {\n              category\n              description\n              image {\n                alt\n                linkTo\n                src {\n                  childImageSharp {\n                    gatsbyImageData(width: 400)\n                  }\n                }\n              }\n              links {\n                type\n                url\n              }\n              tags\n              title\n              visible\n            }\n          }\n        }\n      }\n    }\n  `);\n};\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Animation } from \"../Animation\";\nimport \"./project.css\";\nimport { ImageObject } from \"gatsby-theme-portfolio-minimal/src/types\";\nimport { useMediaQuery } from \"gatsby-theme-portfolio-minimal/src/hooks/useMediaQuery\";\nimport { Icon } from \"../Icon\";\n\nenum LinkType {\n  External = \"external\",\n  Github = \"github\",\n  Notion = \"notion\",\n}\n\nexport interface Project {\n  category?: string;\n  title: string;\n  description: string;\n  image: ImageObject & { linkTo?: string };\n  tags?: string[];\n  links?: {\n    type: LinkType;\n    url: string;\n  }[];\n  visible: boolean;\n}\n\ninterface ProjectProps {\n  data: Project;\n  index: number;\n}\n\nexport function ProjectItem(props: ProjectProps): React.ReactElement {\n  const isDesktopBreakpoint = useMediaQuery(\"(min-width: 992px)\");\n\n  return (\n    <Animation\n      type=\"fadeUp\"\n      className={\"Project\"}\n      style={{\n        flexDirection:\n          isDesktopBreakpoint && props.index % 2 === 0\n            ? \"row-reverse\"\n            : undefined,\n      }}\n    >\n      <div className={\"Details\"}>\n        <span className={\"Category\"}>{props.data.category}</span>\n        <h4 className={\"Title\"}>{props.data.title}</h4>\n        <p>{props.data.description}</p>\n        <div className={\"Tags\"}>\n          {props.data.tags &&\n            props.data.tags.length !== 0 &&\n            props.data.tags.map((tag, key) => {\n              return (\n                <span key={key}>\n                  <u>{tag}</u>\n                </span>\n              );\n            })}\n        </div>\n        <div className={\"Links\"}>\n          {props.data.links &&\n            props.data.links.length !== 0 &&\n            props.data.links.map((link, key) => {\n              return (\n                <a\n                  key={key}\n                  href={link.url}\n                  target=\"_blank\"\n                  rel=\"nofollow noopener noreferrer\"\n                  aria-label=\"External Link\"\n                >\n                  <Icon name={link.type} color=\"var(--subtext-color)\" />\n                </a>\n              );\n            })}\n        </div>\n      </div>\n      {props.data.image.src && props.data.image.linkTo && (\n        <a\n          href={props.data.image.linkTo}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label=\"External Link\"\n        >\n          <GatsbyImage\n            className={\"ProjectImageWrapper\"}\n            imgClassName={\"ProjectImage\"}\n            image={props.data.image.src.childImageSharp.gatsbyImageData}\n            alt={props.data.image.alt || `Project ${props.data.title}`}\n          />\n        </a>\n      )}\n      {props.data.image.src && !props.data.image.linkTo && (\n        <GatsbyImage\n          className={\"ProjectImageWrapper\"}\n          imgClassName={\"ProjectImage\"}\n          image={props.data.image.src.childImageSharp.gatsbyImageData}\n          alt={props.data.image.alt || `Project ${props.data.title}`}\n        />\n      )}\n    </Animation>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocalDataSource } from \"./data\";\nimport { Animation } from \"gatsby-theme-portfolio-minimal/src/components/Animation\";\nimport { Slider } from \"gatsby-theme-portfolio-minimal/src/components/Slider\";\nimport { ProjectItem } from \"./ProjectItem\";\n\nexport enum TabType {\n  PERSONAL = 0,\n  TEAM = 1,\n}\n\nconst ProjectSection = () => {\n  const response = useLocalDataSource();\n  const data = response.allProjectJson.sections[0];\n\n  const [selectTab, setSelectTab] = useState<number>(TabType.TEAM);\n\n  return (\n    <ProjectStyled>\n      <div className=\"tab-area\">\n        <div\n          className={selectTab === TabType.TEAM ? \"focus\" : \"\"}\n          onClick={(e) => setSelectTab(TabType.TEAM)}\n        >\n          Team\n        </div>\n        <div\n          className={selectTab === TabType.PERSONAL ? \"focus\" : \"\"}\n          onClick={(e) => setSelectTab(TabType.PERSONAL)}\n        >\n          Personal\n        </div>\n      </div>\n      {/* <Animation type=\"fadeIn\"> */}\n      <Slider\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        {selectTab === TabType.TEAM &&\n          data.project.team.map((p, key) => {\n            return p.visible ? (\n              <ProjectItem key={key} index={key} data={p} />\n            ) : null;\n          })}\n        {selectTab === TabType.PERSONAL &&\n          data.project.personal.map((p, key) => {\n            return p.visible ? (\n              <ProjectItem key={key} index={key} data={p} />\n            ) : null;\n          })}\n      </Slider>\n      {/* </Animation> */}\n    </ProjectStyled>\n  );\n};\n\nexport default ProjectSection;\n\nconst ProjectStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: var(--page-width);\n  margin: 0 auto;\n  padding: var(--page-padding);\n  justify-content: space-between;\n\n  .tab-area {\n    div {\n      padding: 4px 15px;\n      display: inline;\n      font-size: 1.5rem;\n      font-weight: 600;\n      cursor: pointer;\n      color: white;\n      margin-right: 5px;\n\n      &.focus {\n        color: #f7b000;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\ninterface IconNotionProps {\n  color?: string;\n}\n\nexport function IconNotion(props: IconNotionProps): React.ReactElement {\n  return (\n    <svg\n      fill={props.color || \"var(--primary-color)\"}\n      role=\"img\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>Notion</title>\n      <path d=\"M4.459 4.208c.746.606 1.026.56 2.428.466l13.215-.793c.28 0 .047-.28-.046-.326L17.86 1.968c-.42-.326-.981-.7-2.055-.607L3.01 2.295c-.466.046-.56.28-.374.466zm.793 3.08v13.904c0 .747.373 1.027 1.214.98l14.523-.84c.841-.046.935-.56.935-1.167V6.354c0-.606-.233-.933-.748-.887l-15.177.887c-.56.047-.747.327-.747.933zm14.337.745c.093.42 0 .84-.42.888l-.7.14v10.264c-.608.327-1.168.514-1.635.514-.748 0-.935-.234-1.495-.933l-4.577-7.186v6.952L12.21 19s0 .84-1.168.84l-3.222.186c-.093-.186 0-.653.327-.746l.84-.233V9.854L7.822 9.76c-.094-.42.14-1.026.793-1.073l3.456-.233 4.764 7.279v-6.44l-1.215-.139c-.093-.514.28-.887.747-.933zM1.936 1.035l13.31-.98c1.634-.14 2.055-.047 3.082.7l4.249 2.986c.7.513.934.653.934 1.213v16.378c0 1.026-.373 1.634-1.68 1.726l-15.458.934c-.98.047-1.448-.093-1.962-.747l-3.129-4.06c-.56-.747-.793-1.306-.793-1.96V2.667c0-.839.374-1.54 1.447-1.632z\" />\n    </svg>\n  );\n}\n","import React from \"react\";\nimport { IconBehance } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconBehance\";\nimport { IconExternal } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconExternal\";\nimport { IconGithub } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconGithub\";\nimport { IconHashnode } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconHashnode\";\nimport { IconLinkedIn } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconLinkedIn\";\nimport { IconMail } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconMail\";\nimport { IconMedium } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconMedium\";\nimport { IconTwitter } from \"gatsby-theme-portfolio-minimal/src/components/Icon/IconTwitter\";\nimport { IconNotion } from \"./IconNotion\";\n\ninterface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport function Icon(props: IconProps): React.ReactElement | null {\n  switch (props.name.toLowerCase()) {\n    case \"external\":\n      return <IconExternal color={props.color} />;\n    case \"behance\":\n      return <IconBehance color={props.color} />;\n    case \"github\":\n      return <IconGithub color={props.color} />;\n    case \"linkedin\":\n      return <IconLinkedIn color={props.color} />;\n    case \"mail\":\n      return <IconMail color={props.color} />;\n    case \"medium\":\n      return <IconMedium color={props.color} />;\n    case \"twitter\":\n      return <IconTwitter color={props.color} />;\n    case \"hashnode\":\n      return <IconHashnode color={props.color} />;\n    case \"notion\":\n      return <IconNotion color={props.color} />;\n    default:\n      return null;\n  }\n}\n","import { Seo } from \"gatsby-theme-portfolio-minimal\";\nimport React from \"react\";\nimport ProjectSection from \"../components/project/ProjectSection\";\nimport { Page } from \"../components/page\";\n\nconst ProjectPage = () => {\n  return (\n    <>\n      <Seo title=\"Project\" useTitleTemplate={true} noIndex={true} />\n      <Page>\n        <ProjectSection />\n      </Page>\n    </>\n  );\n};\n\nexport default ProjectPage;\n"],"names":["Animation","props","ref","useCastedRef","onScreen","useOnScreen","type","timing","duration","delay","count","iterationCount","fillMode","React","className","onAnimationEnd","style","animationName","animationTimingFunction","animationDuration","animationDelay","animationIterationCount","animationFillMode","opacity","children","LinkType","TabType","IconNotion","fill","color","role","viewBox","xmlns","d","Icon","name","toLowerCase","IconExternal","IconBehance","IconGithub","IconLinkedIn","IconMail","IconMedium","IconTwitter","IconHashnode","ProjectItem","isDesktopBreakpoint","useMediaQuery","flexDirection","index","undefined","data","category","title","description","tags","length","map","tag","key","links","link","href","url","target","rel","image","src","linkTo","GatsbyImage","imgClassName","childImageSharp","gatsbyImageData","alt","useStaticQuery","allProjectJson","sections","useState","TEAM","selectTab","setSelectTab","ProjectStyled","onClick","e","PERSONAL","Slider","display","project","team","p","visible","personal","styled","Seo","useTitleTemplate","noIndex","Page","ProjectSection"],"sourceRoot":""}