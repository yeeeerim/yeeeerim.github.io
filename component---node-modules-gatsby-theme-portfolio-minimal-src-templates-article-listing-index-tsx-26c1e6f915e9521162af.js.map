{"version":3,"file":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-listing-index-tsx-26c1e6f915e9521162af.js","mappings":"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","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/core-js/modules/es.array.flat.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/core-js/modules/es.array.unscopables.flat.js","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/templates/ArticleListing/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./node_modules/gatsby-theme-portfolio-minimal/src/templates/ArticleListing/index.tsx"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = lengthOfArrayLike(O);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flat');\n","// extracted by mini-css-extract-plugin\nexport var Filter = \"style-module--Filter--31377\";\nexport var Listing = \"style-module--Listing--52eca\";\nexport var LoadMore = \"style-module--LoadMore--8b4c0\";\nexport var Option = \"style-module--Option--83bb9\";\nexport var Options = \"style-module--Options--3515b\";\nexport var Selected = \"style-module--Selected--f3165\";","import React from 'react';\nimport { Page } from '../../components/Page';\nimport { Section } from '../../components/Section';\nimport { Seo } from '../../components/Seo';\nimport { Slider } from '../../components/Slider';\nimport { ArticleCard } from '../../components/ArticleCard';\nimport { Button, ButtonType } from '../../components/Button';\nimport { ArticleTemplateData } from '../Article/data';\nimport * as classes from './style.module.css';\n\ninterface ArticleListingTemplateProps {\n    pageContext: {\n        articles: ArticleTemplateData[];\n    };\n}\n\ninterface FilterOption {\n    label: string;\n    selected: boolean;\n    relatedArticleIds: string[];\n}\n\nexport default function ArticleListingTemplate(props: ArticleListingTemplateProps): React.ReactElement {\n    const ARTICLES_PER_PAGE = 9;\n    const articles = props.pageContext.articles;\n    const [filterOptions, setFilterOptions] = React.useState<FilterOption[]>(extractFilterOptions(articles));\n    const [shownArticlesNumber, setShownArticlesNumber] = React.useState<number>(ARTICLES_PER_PAGE);\n\n    function handleFilterOptionClick(optionLabel: string): void {\n        const updatedFilterOptions = [...filterOptions];\n        const selectedOptionIndex = updatedFilterOptions.map((o) => o.label).indexOf(optionLabel);\n        updatedFilterOptions[selectedOptionIndex].selected = !updatedFilterOptions[selectedOptionIndex].selected;\n        setFilterOptions(updatedFilterOptions);\n    }\n\n    function handleLoadMoreButtonClick(articlesNumber: number, selectedArticlesNumber?: number): void {\n        const incrementedArticleNumber = shownArticlesNumber + 3;\n        if (selectedArticlesNumber && selectedArticlesNumber >= incrementedArticleNumber) {\n            setShownArticlesNumber(incrementedArticleNumber);\n        } else if (!selectedArticlesNumber && articlesNumber >= incrementedArticleNumber) {\n            setShownArticlesNumber(incrementedArticleNumber);\n        }\n    }\n\n    // Check if at least one filter option is selected. If so, create an array of all article ids that\n    // are selected based on the current filter option selection. We use this later on to easily check\n    // which articles to show.\n    let selectedArticleIds: string[] = [];\n    const filterSelected = filterOptions.map((o) => o.selected).indexOf(true) !== -1;\n    if (filterSelected) {\n        selectedArticleIds = filterOptions\n            .filter((option) => option.selected) // Filter only for selected options\n            .map((option) => option.relatedArticleIds) // Create an array of article ids arrays\n            .flat(1) // Flatten the array to a string[]\n            .filter((id, index, arr) => arr.indexOf(id) === index); // Remove duplicate article ids\n    }\n\n    return (\n        <>\n            <Seo title=\"All Articles\" useTitleTemplate={true} />\n            <Page>\n                <Section anchor=\"articleListing\" heading=\"Articles\">\n                    <div className={classes.Filter}>\n                        Select categories to filter articles\n                        <Slider additionalClasses={[classes.Options]}>\n                            {filterOptions.map((option, key) => {\n                                return (\n                                    <div\n                                        key={key}\n                                        role=\"button\"\n                                        onClick={() => handleFilterOptionClick(option.label)}\n                                        className={[\n                                            classes.Option,\n                                            option.selected === true ? classes.Selected : null,\n                                        ].join(' ')}\n                                    >\n                                        {option.label} ({option.relatedArticleIds.length})\n                                    </div>\n                                );\n                            })}\n                        </Slider>\n                    </div>\n                    <div className={classes.Listing}>\n                        {articles\n                            .filter((article) => !filterSelected || selectedArticleIds.includes(article.id))\n                            .slice(0, shownArticlesNumber)\n                            .map((article, key) => {\n                                return (\n                                    <ArticleCard\n                                        key={key}\n                                        showBanner={true}\n                                        data={{\n                                            image: article.banner,\n                                            title: article.title,\n                                            category: article.categories.join(' / '),\n                                            publishedAt: new Date(article.date.replace(/-/g, '/')),\n                                            link: article.slug,\n                                            readingTime: article.readingTime.text,\n                                        }}\n                                    />\n                                );\n                            })}\n                    </div>\n                    {(filterSelected && selectedArticleIds.length > shownArticlesNumber) ||\n                    (!filterSelected && articles.length > shownArticlesNumber) ? (\n                        <div className={classes.LoadMore}>\n                            <Button\n                                type={ButtonType.BUTTON}\n                                label=\"Load More\"\n                                onClickHandler={() =>\n                                    handleLoadMoreButtonClick(\n                                        articles.length,\n                                        filterSelected ? selectedArticleIds.length : undefined,\n                                    )\n                                }\n                            />\n                        </div>\n                    ) : null}\n                </Section>\n            </Page>\n        </>\n    );\n}\n\n// Helper function to calculate a sorted array of filter options based on the given articles\n// We use the helper function before we initialize the state so that it can happen on the server.\nfunction extractFilterOptions(articles: ArticleTemplateData[]): FilterOption[] {\n    const filterOptions: FilterOption[] = [];\n    const categoryList: string[] = [];\n    articles.forEach((article) => {\n        article.categories.forEach((category) => {\n            if (!categoryList.includes(category)) {\n                filterOptions.push({ label: category, selected: false, relatedArticleIds: [article.id] });\n                categoryList.push(category);\n            } else {\n                const optionIndex = filterOptions.map((o) => o.label).indexOf(category);\n                filterOptions[optionIndex].relatedArticleIds.push(article.id);\n            }\n        });\n    });\n    return filterOptions.sort((a, b) => (a.relatedArticleIds.length > b.relatedArticleIds.length ? -1 : 1));\n}\n"],"names":["$","flattenIntoArray","toObject","lengthOfArrayLike","toIntegerOrInfinity","arraySpeciesCreate","target","proto","flat","depthArg","arguments","length","undefined","O","this","sourceLen","A","addToUnscopables","Option","ArticleListingTemplate","props","articles","pageContext","React","filterOptions","categoryList","forEach","article","categories","category","includes","optionIndex","map","o","label","indexOf","relatedArticleIds","push","id","selected","sort","a","b","extractFilterOptions","setFilterOptions","shownArticlesNumber","setShownArticlesNumber","selectedArticleIds","filterSelected","filter","option","index","arr","Seo","title","useTitleTemplate","Page","Section","anchor","heading","className","Slider","additionalClasses","key","role","onClick","optionLabel","updatedFilterOptions","selectedOptionIndex","classes","join","slice","ArticleCard","showBanner","data","image","banner","publishedAt","Date","date","replace","link","slug","readingTime","text","Button","type","ButtonType","onClickHandler","articlesNumber","selectedArticlesNumber","incrementedArticleNumber"],"sourceRoot":""}